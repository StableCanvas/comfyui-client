{
  "title": "Node Types",
  "type": "object",
  "properties": {
    "KSampler": {
      "title": "KSampler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "denoise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling"
    },
    "CheckpointLoaderSimple": {
      "title": "CheckpointLoaderSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "loaders"
    },
    "CLIPTextEncode": {
      "title": "CLIPTextEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, clip",
          "properties": {
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "CLIPSetLastLayer": {
      "title": "CLIPSetLastLayer",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, stop_at_clip_layer",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "stop_at_clip_layer": {
              "type": "number"
            }
          },
          "required": ["clip", "stop_at_clip_layer"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "VAEDecode": {
      "title": "VAEDecode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["samples", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "VAEEncode": {
      "title": "VAEEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["pixels", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "VAEEncodeForInpaint": {
      "title": "VAEEncodeForInpaint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae, mask, grow_mask_by",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "mask": {
              "type": "MASK"
            },
            "grow_mask_by": {
              "type": "number"
            }
          },
          "required": ["pixels", "vae", "mask", "grow_mask_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/inpaint"
    },
    "VAELoader": {
      "title": "VAELoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae_name",
          "properties": {
            "vae_name": {
              "type": "string"
            }
          },
          "required": ["vae_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VAE",
          "items": [
            {
              "type": "VAE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "EmptyLatentImage": {
      "title": "EmptyLatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentUpscale": {
      "title": "LatentUpscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, upscale_method, width, height, crop",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "upscale_method": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["samples", "upscale_method", "width", "height", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentUpscaleBy": {
      "title": "LatentUpscaleBy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, upscale_method, scale_by",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "upscale_method": {
              "type": "string"
            },
            "scale_by": {
              "type": "number"
            }
          },
          "required": ["samples", "upscale_method", "scale_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentFromBatch": {
      "title": "LatentFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, batch_index, length",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "batch_index": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["samples", "batch_index", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "RepeatLatentBatch": {
      "title": "RepeatLatentBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, amount",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["samples", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "SaveImage": {
      "title": "SaveImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["images", "filename_prefix"]
        }
      },
      "$category": "image"
    },
    "PreviewImage": {
      "title": "PreviewImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        }
      },
      "$category": "image"
    },
    "LoadImage": {
      "title": "LoadImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "string"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "image"
    },
    "LoadImageMask": {
      "title": "LoadImageMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel",
          "properties": {
            "image": {
              "type": "string"
            },
            "channel": {
              "type": "string"
            }
          },
          "required": ["image", "channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ImageScale": {
      "title": "ImageScale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, width, height, crop",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["image", "upscale_method", "width", "height", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageScaleBy": {
      "title": "ImageScaleBy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, scale_by",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "scale_by": {
              "type": "number"
            }
          },
          "required": ["image", "upscale_method", "scale_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageInvert": {
      "title": "ImageInvert",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ImageBatch": {
      "title": "ImageBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            }
          },
          "required": ["image1", "image2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ImagePadForOutpaint": {
      "title": "ImagePadForOutpaint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, left, top, right, bottom, feathering",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "left": {
              "type": "number"
            },
            "top": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            },
            "feathering": {
              "type": "number"
            }
          },
          "required": ["image", "left", "top", "right", "bottom", "feathering"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "image"
    },
    "EmptyImage": {
      "title": "EmptyImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size, color",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "color": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size", "color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ConditioningAverage": {
      "title": "ConditioningAverage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, conditioning_from, conditioning_to_strength",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "conditioning_from": {
              "type": "CONDITIONING"
            },
            "conditioning_to_strength": {
              "type": "number"
            }
          },
          "required": [
            "conditioning_to",
            "conditioning_from",
            "conditioning_to_strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningCombine": {
      "title": "ConditioningCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_1, conditioning_2",
          "properties": {
            "conditioning_1": {
              "type": "CONDITIONING"
            },
            "conditioning_2": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning_1", "conditioning_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningConcat": {
      "title": "ConditioningConcat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, conditioning_from",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "conditioning_from": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning_to", "conditioning_from"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetArea": {
      "title": "ConditioningSetArea",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, width, height, x, y, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "width", "height", "x", "y", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetAreaPercentage": {
      "title": "ConditioningSetAreaPercentage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, width, height, x, y, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "width", "height", "x", "y", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetAreaStrength": {
      "title": "ConditioningSetAreaStrength",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetMask": {
      "title": "ConditioningSetMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, mask, strength, set_cond_area",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "mask": {
              "type": "MASK"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["conditioning", "mask", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "KSamplerAdvanced": {
      "title": "KSamplerAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, add_noise, noise_seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, start_at_step, end_at_step, return_with_leftover_noise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "add_noise": {
              "type": "string"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "start_at_step": {
              "type": "number"
            },
            "end_at_step": {
              "type": "number"
            },
            "return_with_leftover_noise": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "add_noise",
            "noise_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "start_at_step",
            "end_at_step",
            "return_with_leftover_noise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling"
    },
    "SetLatentNoiseMask": {
      "title": "SetLatentNoiseMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, mask",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["samples", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/inpaint"
    },
    "LatentComposite": {
      "title": "LatentComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples_to, samples_from, x, y, feather",
          "properties": {
            "samples_to": {
              "type": "LATENT"
            },
            "samples_from": {
              "type": "LATENT"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "feather": {
              "type": "number"
            }
          },
          "required": ["samples_to", "samples_from", "x", "y", "feather"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentBlend": {
      "title": "LatentBlend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2, blend_factor",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            },
            "blend_factor": {
              "type": "number"
            }
          },
          "required": ["samples1", "samples2", "blend_factor"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "LatentRotate": {
      "title": "LatentRotate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, rotation",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "rotation": {
              "type": "string"
            }
          },
          "required": ["samples", "rotation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LatentFlip": {
      "title": "LatentFlip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, flip_method",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "flip_method": {
              "type": "string"
            }
          },
          "required": ["samples", "flip_method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LatentCrop": {
      "title": "LatentCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, width, height, x, y",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": ["samples", "width", "height", "x", "y"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LoraLoader": {
      "title": "LoraLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, lora_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "lora_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "loaders"
    },
    "CLIPLoader": {
      "title": "CLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name, type",
          "properties": {
            "clip_name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "UNETLoader": {
      "title": "UNETLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: unet_name, weight_dtype",
          "properties": {
            "unet_name": {
              "type": "string"
            },
            "weight_dtype": {
              "type": "string"
            }
          },
          "required": ["unet_name", "weight_dtype"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "DualCLIPLoader": {
      "title": "DualCLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, type",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "CLIPVisionEncode": {
      "title": "CLIPVisionEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, image",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["clip_vision", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP_VISION_OUTPUT",
          "items": [
            {
              "type": "CLIP_VISION_OUTPUT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "StyleModelApply": {
      "title": "StyleModelApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, style_model, clip_vision_output",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "style_model": {
              "type": "STYLE_MODEL"
            },
            "clip_vision_output": {
              "type": "CLIP_VISION_OUTPUT"
            }
          },
          "required": ["conditioning", "style_model", "clip_vision_output"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/style_model"
    },
    "unCLIPConditioning": {
      "title": "unCLIPConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, clip_vision_output, strength, noise_augmentation",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "clip_vision_output": {
              "type": "CLIP_VISION_OUTPUT"
            },
            "strength": {
              "type": "number"
            },
            "noise_augmentation": {
              "type": "number"
            }
          },
          "required": [
            "conditioning",
            "clip_vision_output",
            "strength",
            "noise_augmentation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ControlNetApply": {
      "title": "ControlNetApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, control_net, image, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "control_net", "image", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/controlnet"
    },
    "ControlNetApplyAdvanced": {
      "title": "ControlNetApplyAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/controlnet"
    },
    "ControlNetLoader": {
      "title": "ControlNetLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net_name",
          "properties": {
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "DiffControlNetLoader": {
      "title": "DiffControlNetLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, control_net_name",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["model", "control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "StyleModelLoader": {
      "title": "StyleModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: style_model_name",
          "properties": {
            "style_model_name": {
              "type": "string"
            }
          },
          "required": ["style_model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STYLE_MODEL",
          "items": [
            {
              "type": "STYLE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "CLIPVisionLoader": {
      "title": "CLIPVisionLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name",
          "properties": {
            "clip_name": {
              "type": "string"
            }
          },
          "required": ["clip_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP_VISION",
          "items": [
            {
              "type": "CLIP_VISION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "VAEDecodeTiled": {
      "title": "VAEDecodeTiled",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae, tile_size",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            },
            "tile_size": {
              "type": "number"
            }
          },
          "required": ["samples", "vae", "tile_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "VAEEncodeTiled": {
      "title": "VAEEncodeTiled",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae, tile_size",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "tile_size": {
              "type": "number"
            }
          },
          "required": ["pixels", "vae", "tile_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "unCLIPCheckpointLoader": {
      "title": "unCLIPCheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE, CLIP_VISION",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "CLIP_VISION"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "loaders"
    },
    "GLIGENLoader": {
      "title": "GLIGENLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: gligen_name",
          "properties": {
            "gligen_name": {
              "type": "string"
            }
          },
          "required": ["gligen_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GLIGEN",
          "items": [
            {
              "type": "GLIGEN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "GLIGENTextBoxApply": {
      "title": "GLIGENTextBoxApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, clip, gligen_textbox_model, text, width, height, x, y",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "clip": {
              "type": "CLIP"
            },
            "gligen_textbox_model": {
              "type": "GLIGEN"
            },
            "text": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": [
            "conditioning_to",
            "clip",
            "gligen_textbox_model",
            "text",
            "width",
            "height",
            "x",
            "y"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/gligen"
    },
    "InpaintModelConditioning": {
      "title": "InpaintModelConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, pixels, mask",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "pixels": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["positive", "negative", "vae", "pixels", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/inpaint"
    },
    "CheckpointLoader": {
      "title": "CheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: config_name, ckpt_name",
          "properties": {
            "config_name": {
              "type": "string"
            },
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["config_name", "ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "advanced/loaders"
    },
    "DiffusersLoader": {
      "title": "DiffusersLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_path",
          "properties": {
            "model_path": {
              "type": "string"
            }
          },
          "required": ["model_path"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "advanced/loaders/deprecated"
    },
    "LoadLatent": {
      "title": "LoadLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent",
          "properties": {
            "latent": {
              "type": "string"
            }
          },
          "required": ["latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "SaveLatent": {
      "title": "SaveLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, filename_prefix",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["samples", "filename_prefix"]
        }
      },
      "$category": "_for_testing"
    },
    "ConditioningZeroOut": {
      "title": "ConditioningZeroOut",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "ConditioningSetTimestepRange": {
      "title": "ConditioningSetTimestepRange",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, start, end",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "start": {
              "type": "number"
            },
            "end": {
              "type": "number"
            }
          },
          "required": ["conditioning", "start", "end"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "LoraLoaderModelOnly": {
      "title": "LoraLoaderModelOnly",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, lora_name, strength_model",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["model", "lora_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "LatentAdd": {
      "title": "LatentAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentSubtract": {
      "title": "LatentSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentMultiply": {
      "title": "LatentMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, multiplier",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["samples", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentInterpolate": {
      "title": "LatentInterpolate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2, ratio",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["samples1", "samples2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentBatch": {
      "title": "LatentBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "LatentBatchSeedBehavior": {
      "title": "LatentBatchSeedBehavior",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, seed_behavior",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "seed_behavior": {
              "type": "string"
            }
          },
          "required": ["samples", "seed_behavior"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "HypernetworkLoader": {
      "title": "HypernetworkLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, hypernetwork_name, strength",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "hypernetwork_name": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["model", "hypernetwork_name", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "UpscaleModelLoader": {
      "title": "UpscaleModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name",
          "properties": {
            "model_name": {
              "type": "string"
            }
          },
          "required": ["model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: UPSCALE_MODEL",
          "items": [
            {
              "type": "UPSCALE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "ImageUpscaleWithModel": {
      "title": "ImageUpscaleWithModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_model, image",
          "properties": {
            "upscale_model": {
              "type": "UPSCALE_MODEL"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["upscale_model", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageBlend": {
      "title": "Blend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, blend_factor, blend_mode",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "blend_factor": {
              "type": "number"
            },
            "blend_mode": {
              "type": "string"
            }
          },
          "required": ["image1", "image2", "blend_factor", "blend_mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageBlur": {
      "title": "Blur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, blur_radius, sigma",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "blur_radius": {
              "type": "number"
            },
            "sigma": {
              "type": "number"
            }
          },
          "required": ["image", "blur_radius", "sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageQuantize": {
      "title": "Quantize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, colors, dither",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "colors": {
              "type": "number"
            },
            "dither": {
              "type": "string"
            }
          },
          "required": ["image", "colors", "dither"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageSharpen": {
      "title": "Sharpen",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sharpen_radius, sigma, alpha",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sharpen_radius": {
              "type": "number"
            },
            "sigma": {
              "type": "number"
            },
            "alpha": {
              "type": "number"
            }
          },
          "required": ["image", "sharpen_radius", "sigma", "alpha"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageScaleToTotalPixels": {
      "title": "ImageScaleToTotalPixels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "megapixels": {
              "type": "number"
            }
          },
          "required": ["image", "upscale_method", "megapixels"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "LatentCompositeMasked": {
      "title": "LatentCompositeMasked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, resize_source",
          "properties": {
            "destination": {
              "type": "LATENT"
            },
            "source": {
              "type": "LATENT"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "resize_source": {
              "type": "BOOLEAN"
            }
          },
          "required": ["destination", "source", "x", "y", "resize_source"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "ImageCompositeMasked": {
      "title": "ImageCompositeMasked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, resize_source",
          "properties": {
            "destination": {
              "type": "IMAGE"
            },
            "source": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "resize_source": {
              "type": "BOOLEAN"
            }
          },
          "required": ["destination", "source", "x", "y", "resize_source"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "MaskToImage": {
      "title": "MaskToImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ImageToMask": {
      "title": "ImageToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "channel": {
              "type": "string"
            }
          },
          "required": ["image", "channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ImageColorToMask": {
      "title": "ImageColorToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, color",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "color": {
              "type": "number"
            }
          },
          "required": ["image", "color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "SolidMask": {
      "title": "SolidMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value, width, height",
          "properties": {
            "value": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["value", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "InvertMask": {
      "title": "InvertMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "CropMask": {
      "title": "CropMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, x, y, width, height",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["mask", "x", "y", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "MaskComposite": {
      "title": "MaskComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, operation",
          "properties": {
            "destination": {
              "type": "MASK"
            },
            "source": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "operation": {
              "type": "string"
            }
          },
          "required": ["destination", "source", "x", "y", "operation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "FeatherMask": {
      "title": "FeatherMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, left, top, right, bottom",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "left": {
              "type": "number"
            },
            "top": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            }
          },
          "required": ["mask", "left", "top", "right", "bottom"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "GrowMask": {
      "title": "GrowMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, expand, tapered_corners",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "expand": {
              "type": "number"
            },
            "tapered_corners": {
              "type": "BOOLEAN"
            }
          },
          "required": ["mask", "expand", "tapered_corners"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ThresholdMask": {
      "title": "ThresholdMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, value",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "value": {
              "type": "number"
            }
          },
          "required": ["mask", "value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "PorterDuffImageComposite": {
      "title": "PorterDuffImageComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: source, source_alpha, destination, destination_alpha, mode",
          "properties": {
            "source": {
              "type": "IMAGE"
            },
            "source_alpha": {
              "type": "MASK"
            },
            "destination": {
              "type": "IMAGE"
            },
            "destination_alpha": {
              "type": "MASK"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": [
            "source",
            "source_alpha",
            "destination",
            "destination_alpha",
            "mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mask/compositing"
    },
    "SplitImageWithAlpha": {
      "title": "SplitImageWithAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mask/compositing"
    },
    "JoinImageWithAlpha": {
      "title": "JoinImageWithAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, alpha",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "alpha": {
              "type": "MASK"
            }
          },
          "required": ["image", "alpha"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask/compositing"
    },
    "RebatchLatents": {
      "title": "LatentRebatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latents, batch_size",
          "properties": {
            "latents": {
              "type": "LATENT"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["latents", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "RebatchImages": {
      "title": "ImageRebatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, batch_size",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["images", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/batch"
    },
    "ModelMergeSimple": {
      "title": "ModelMergeSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, ratio",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeBlocks": {
      "title": "ModelMergeBlocks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, input, middle, out",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "input": {
              "type": "number"
            },
            "middle": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "input", "middle", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeSubtract": {
      "title": "ModelSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, multiplier",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeAdd": {
      "title": "ModelAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            }
          },
          "required": ["model1", "model2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CheckpointSave": {
      "title": "CheckpointSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, vae, filename_prefix",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["model", "clip", "vae", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeSimple": {
      "title": "CLIPMergeSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2, ratio",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["clip1", "clip2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeSubtract": {
      "title": "CLIPSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2, multiplier",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["clip1", "clip2", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeAdd": {
      "title": "CLIPAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            }
          },
          "required": ["clip1", "clip2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPSave": {
      "title": "CLIPSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, filename_prefix",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["clip", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "VAESave": {
      "title": "VAESave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae, filename_prefix",
          "properties": {
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["vae", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "TomePatchModel": {
      "title": "TomePatchModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ratio",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["model", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "CLIPTextEncodeSDXLRefiner": {
      "title": "CLIPTextEncodeSDXLRefiner",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ascore, width, height, text, clip",
          "properties": {
            "ascore": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["ascore", "width", "height", "text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "CLIPTextEncodeSDXL": {
      "title": "CLIPTextEncodeSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, crop_w, crop_h, target_width, target_height, text_g, clip, text_l",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop_w": {
              "type": "number"
            },
            "crop_h": {
              "type": "number"
            },
            "target_width": {
              "type": "number"
            },
            "target_height": {
              "type": "number"
            },
            "text_g": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            },
            "text_l": {
              "type": "string"
            }
          },
          "required": [
            "width",
            "height",
            "crop_w",
            "crop_h",
            "target_width",
            "target_height",
            "text_g",
            "clip",
            "text_l"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "Canny": {
      "title": "Canny",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, low_threshold, high_threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "low_threshold": {
              "type": "number"
            },
            "high_threshold": {
              "type": "number"
            }
          },
          "required": ["image", "low_threshold", "high_threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/preprocessors"
    },
    "FreeU": {
      "title": "FreeU",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, b1, b2, s1, s2",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "b1": {
              "type": "number"
            },
            "b2": {
              "type": "number"
            },
            "s1": {
              "type": "number"
            },
            "s2": {
              "type": "number"
            }
          },
          "required": ["model", "b1", "b2", "s1", "s2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "FreeU_V2": {
      "title": "FreeU_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, b1, b2, s1, s2",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "b1": {
              "type": "number"
            },
            "b2": {
              "type": "number"
            },
            "s1": {
              "type": "number"
            },
            "s2": {
              "type": "number"
            }
          },
          "required": ["model", "b1", "b2", "s1", "s2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "SamplerCustom": {
      "title": "SamplerCustom",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, add_noise, noise_seed, cfg, positive, negative, sampler, sigmas, latent_image",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "add_noise": {
              "type": "BOOLEAN"
            },
            "noise_seed": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "sampler": {
              "type": "SAMPLER"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": [
            "model",
            "add_noise",
            "noise_seed",
            "cfg",
            "positive",
            "negative",
            "sampler",
            "sigmas",
            "latent_image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling"
    },
    "BasicScheduler": {
      "title": "BasicScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scheduler, steps, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scheduler": {
              "type": "string"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model", "scheduler", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "KarrasScheduler": {
      "title": "KarrasScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min, rho",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            },
            "rho": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min", "rho"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "ExponentialScheduler": {
      "title": "ExponentialScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "PolyexponentialScheduler": {
      "title": "PolyexponentialScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min, rho",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            },
            "rho": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min", "rho"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "VPScheduler": {
      "title": "VPScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, beta_d, beta_min, eps_s",
          "properties": {
            "steps": {
              "type": "number"
            },
            "beta_d": {
              "type": "number"
            },
            "beta_min": {
              "type": "number"
            },
            "eps_s": {
              "type": "number"
            }
          },
          "required": ["steps", "beta_d", "beta_min", "eps_s"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "BetaSamplingScheduler": {
      "title": "BetaSamplingScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, steps, alpha, beta",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "steps": {
              "type": "number"
            },
            "alpha": {
              "type": "number"
            },
            "beta": {
              "type": "number"
            }
          },
          "required": ["model", "steps", "alpha", "beta"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "SDTurboScheduler": {
      "title": "SDTurboScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, steps, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "KSamplerSelect": {
      "title": "KSamplerSelect",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sampler_name",
          "properties": {
            "sampler_name": {
              "type": "string"
            }
          },
          "required": ["sampler_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerAncestral": {
      "title": "SamplerEulerAncestral",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerAncestralCFGPP": {
      "title": "SamplerEulerAncestralCFGPP",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerLMS": {
      "title": "SamplerLMS",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: order",
          "properties": {
            "order": {
              "type": "number"
            }
          },
          "required": ["order"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_3M_SDE": {
      "title": "SamplerDPMPP_3M_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise, noise_device",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["eta", "s_noise", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_2M_SDE": {
      "title": "SamplerDPMPP_2M_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: solver_type, eta, s_noise, noise_device",
          "properties": {
            "solver_type": {
              "type": "string"
            },
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["solver_type", "eta", "s_noise", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_SDE": {
      "title": "SamplerDPMPP_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise, r, noise_device",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "r": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["eta", "s_noise", "r", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_2S_Ancestral": {
      "title": "SamplerDPMPP_2S_Ancestral",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMAdaptative": {
      "title": "SamplerDPMAdaptative",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: order, rtol, atol, h_init, pcoeff, icoeff, dcoeff, accept_safety, eta, s_noise",
          "properties": {
            "order": {
              "type": "number"
            },
            "rtol": {
              "type": "number"
            },
            "atol": {
              "type": "number"
            },
            "h_init": {
              "type": "number"
            },
            "pcoeff": {
              "type": "number"
            },
            "icoeff": {
              "type": "number"
            },
            "dcoeff": {
              "type": "number"
            },
            "accept_safety": {
              "type": "number"
            },
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": [
            "order",
            "rtol",
            "atol",
            "h_init",
            "pcoeff",
            "icoeff",
            "dcoeff",
            "accept_safety",
            "eta",
            "s_noise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SplitSigmas": {
      "title": "SplitSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, step",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "step": {
              "type": "number"
            }
          },
          "required": ["sigmas", "step"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS, SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            },
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "SplitSigmasDenoise": {
      "title": "SplitSigmasDenoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, denoise",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["sigmas", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS, SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            },
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "FlipSigmas": {
      "title": "FlipSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            }
          },
          "required": ["sigmas"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "CFGGuider": {
      "title": "CFGGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, positive, negative, cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "cfg": {
              "type": "number"
            }
          },
          "required": ["model", "positive", "negative", "cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "DualCFGGuider": {
      "title": "DualCFGGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, cond1, cond2, negative, cfg_conds, cfg_cond2_negative",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "cond1": {
              "type": "CONDITIONING"
            },
            "cond2": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "cfg_conds": {
              "type": "number"
            },
            "cfg_cond2_negative": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "cond1",
            "cond2",
            "negative",
            "cfg_conds",
            "cfg_cond2_negative"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "BasicGuider": {
      "title": "BasicGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, conditioning",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["model", "conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "RandomNoise": {
      "title": "RandomNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: noise_seed",
          "properties": {
            "noise_seed": {
              "type": "number"
            }
          },
          "required": ["noise_seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE",
          "items": [
            {
              "type": "NOISE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/noise"
    },
    "DisableNoise": {
      "title": "DisableNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE",
          "items": [
            {
              "type": "NOISE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/noise"
    },
    "AddNoise": {
      "title": "AddNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, noise, sigmas, latent_image",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "noise": {
              "type": "NOISE"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": ["model", "noise", "sigmas", "latent_image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/custom_sampling/noise"
    },
    "SamplerCustomAdvanced": {
      "title": "SamplerCustomAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: noise, guider, sampler, sigmas, latent_image",
          "properties": {
            "noise": {
              "type": "NOISE"
            },
            "guider": {
              "type": "GUIDER"
            },
            "sampler": {
              "type": "SAMPLER"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": ["noise", "guider", "sampler", "sigmas", "latent_image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling"
    },
    "HyperTile": {
      "title": "HyperTile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, tile_size, swap_size, max_depth, scale_depth",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "tile_size": {
              "type": "number"
            },
            "swap_size": {
              "type": "number"
            },
            "max_depth": {
              "type": "number"
            },
            "scale_depth": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "model",
            "tile_size",
            "swap_size",
            "max_depth",
            "scale_depth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "ModelSamplingDiscrete": {
      "title": "ModelSamplingDiscrete",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, zsnr",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "zsnr": {
              "type": "BOOLEAN"
            }
          },
          "required": ["model", "sampling", "zsnr"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingContinuousEDM": {
      "title": "ModelSamplingContinuousEDM",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, sigma_max, sigma_min",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["model", "sampling", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingContinuousV": {
      "title": "ModelSamplingContinuousV",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, sigma_max, sigma_min",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["model", "sampling", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingStableCascade": {
      "title": "ModelSamplingStableCascade",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingSD3": {
      "title": "ModelSamplingSD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingAuraFlow": {
      "title": "ModelSamplingAuraFlow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingFlux": {
      "title": "ModelSamplingFlux",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, max_shift, base_shift, width, height",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "max_shift": {
              "type": "number"
            },
            "base_shift": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["model", "max_shift", "base_shift", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "RescaleCFG": {
      "title": "RescaleCFG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, multiplier",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["model", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "PatchModelAddDownscale": {
      "title": "PatchModelAddDownscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, block_number, downscale_factor, start_percent, end_percent, downscale_after_skip, downscale_method, upscale_method",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "block_number": {
              "type": "number"
            },
            "downscale_factor": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "downscale_after_skip": {
              "type": "BOOLEAN"
            },
            "downscale_method": {
              "type": "string"
            },
            "upscale_method": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "block_number",
            "downscale_factor",
            "start_percent",
            "end_percent",
            "downscale_after_skip",
            "downscale_method",
            "upscale_method"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "ImageCrop": {
      "title": "ImageCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, x, y",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": ["image", "width", "height", "x", "y"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/transform"
    },
    "RepeatImageBatch": {
      "title": "RepeatImageBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, amount",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["image", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/batch"
    },
    "ImageFromBatch": {
      "title": "ImageFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, batch_index, length",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "batch_index": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["image", "batch_index", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/batch"
    },
    "SaveAnimatedWEBP": {
      "title": "SaveAnimatedWEBP",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix, fps, lossless, quality, method",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            },
            "fps": {
              "type": "number"
            },
            "lossless": {
              "type": "BOOLEAN"
            },
            "quality": {
              "type": "number"
            },
            "method": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "filename_prefix",
            "fps",
            "lossless",
            "quality",
            "method"
          ]
        }
      },
      "$category": "image/animation"
    },
    "SaveAnimatedPNG": {
      "title": "SaveAnimatedPNG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix, fps, compress_level",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            },
            "fps": {
              "type": "number"
            },
            "compress_level": {
              "type": "number"
            }
          },
          "required": ["images", "filename_prefix", "fps", "compress_level"]
        }
      },
      "$category": "image/animation"
    },
    "ImageOnlyCheckpointLoader": {
      "title": "ImageOnlyCheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP_VISION, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP_VISION"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "loaders/video_models"
    },
    "SVD_img2vid_Conditioning": {
      "title": "SVD_img2vid_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, video_frames, motion_bucket_id, fps, augmentation_level",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "video_frames": {
              "type": "number"
            },
            "motion_bucket_id": {
              "type": "number"
            },
            "fps": {
              "type": "number"
            },
            "augmentation_level": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "video_frames",
            "motion_bucket_id",
            "fps",
            "augmentation_level"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "VideoLinearCFGGuidance": {
      "title": "VideoLinearCFGGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, min_cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "min_cfg": {
              "type": "number"
            }
          },
          "required": ["model", "min_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/video_models"
    },
    "VideoTriangleCFGGuidance": {
      "title": "VideoTriangleCFGGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, min_cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "min_cfg": {
              "type": "number"
            }
          },
          "required": ["model", "min_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/video_models"
    },
    "ImageOnlyCheckpointSave": {
      "title": "ImageOnlyCheckpointSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip_vision, vae, filename_prefix",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["model", "clip_vision", "vae", "filename_prefix"]
        }
      },
      "$category": "_for_testing"
    },
    "SelfAttentionGuidance": {
      "title": "SelfAttentionGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scale, blur_sigma",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scale": {
              "type": "number"
            },
            "blur_sigma": {
              "type": "number"
            }
          },
          "required": ["model", "scale", "blur_sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "PerpNeg": {
      "title": "PerpNeg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, empty_conditioning, neg_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "empty_conditioning": {
              "type": "CONDITIONING"
            },
            "neg_scale": {
              "type": "number"
            }
          },
          "required": ["model", "empty_conditioning", "neg_scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "PerpNegGuider": {
      "title": "PerpNegGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, positive, negative, empty_conditioning, cfg, neg_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "empty_conditioning": {
              "type": "CONDITIONING"
            },
            "cfg": {
              "type": "number"
            },
            "neg_scale": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "positive",
            "negative",
            "empty_conditioning",
            "cfg",
            "neg_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "StableZero123_Conditioning": {
      "title": "StableZero123_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, batch_size, elevation, azimuth",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            },
            "azimuth": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "batch_size",
            "elevation",
            "azimuth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "StableZero123_Conditioning_Batched": {
      "title": "StableZero123_Conditioning_Batched",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, batch_size, elevation, azimuth, elevation_batch_increment, azimuth_batch_increment",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            },
            "azimuth": {
              "type": "number"
            },
            "elevation_batch_increment": {
              "type": "number"
            },
            "azimuth_batch_increment": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "batch_size",
            "elevation",
            "azimuth",
            "elevation_batch_increment",
            "azimuth_batch_increment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "SV3D_Conditioning": {
      "title": "SV3D_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, video_frames, elevation",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "video_frames": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "video_frames",
            "elevation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "SD_4XUpscale_Conditioning": {
      "title": "SD_4XUpscale_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, positive, negative, scale_ratio, noise_augmentation",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "scale_ratio": {
              "type": "number"
            },
            "noise_augmentation": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "positive",
            "negative",
            "scale_ratio",
            "noise_augmentation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/upscale_diffusion"
    },
    "PhotoMakerLoader": {
      "title": "PhotoMakerLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: photomaker_model_name",
          "properties": {
            "photomaker_model_name": {
              "type": "string"
            }
          },
          "required": ["photomaker_model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PHOTOMAKER",
          "items": [
            {
              "type": "PHOTOMAKER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/photomaker"
    },
    "PhotoMakerEncode": {
      "title": "PhotoMakerEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: photomaker, image, clip, text",
          "properties": {
            "photomaker": {
              "type": "PHOTOMAKER"
            },
            "image": {
              "type": "IMAGE"
            },
            "clip": {
              "type": "CLIP"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["photomaker", "image", "clip", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/photomaker"
    },
    "CLIPTextEncodeControlnet": {
      "title": "CLIPTextEncodeControlnet",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, conditioning, text",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "conditioning": {
              "type": "CONDITIONING"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["clip", "conditioning", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/conditioning"
    },
    "Morphology": {
      "title": "Morphology",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, operation, kernel_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "operation": {
              "type": "string"
            },
            "kernel_size": {
              "type": "number"
            }
          },
          "required": ["image", "operation", "kernel_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "StableCascade_EmptyLatentImage": {
      "title": "StableCascade_EmptyLatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, compression, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "compression": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "compression", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "latent/stable_cascade"
    },
    "StableCascade_StageB_Conditioning": {
      "title": "StableCascade_StageB_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, stage_c",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "stage_c": {
              "type": "LATENT"
            }
          },
          "required": ["conditioning", "stage_c"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/stable_cascade"
    },
    "StableCascade_StageC_VAEEncode": {
      "title": "StableCascade_StageC_VAEEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, compression",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "compression": {
              "type": "number"
            }
          },
          "required": ["image", "vae", "compression"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "latent/stable_cascade"
    },
    "StableCascade_SuperResolutionControlnet": {
      "title": "StableCascade_SuperResolutionControlnet",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["image", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, LATENT, LATENT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "_for_testing/stable_cascade"
    },
    "DifferentialDiffusion": {
      "title": "DifferentialDiffusion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "InstructPixToPixConditioning": {
      "title": "InstructPixToPixConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, pixels",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "pixels": {
              "type": "IMAGE"
            }
          },
          "required": ["positive", "negative", "vae", "pixels"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/instructpix2pix"
    },
    "ModelMergeSD1": {
      "title": "ModelMergeSD1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0., input_blocks.1., input_blocks.2., input_blocks.3., input_blocks.4., input_blocks.5., input_blocks.6., input_blocks.7., input_blocks.8., input_blocks.9., input_blocks.10., input_blocks.11., middle_block.0., middle_block.1., middle_block.2., output_blocks.0., output_blocks.1., output_blocks.2., output_blocks.3., output_blocks.4., output_blocks.5., output_blocks.6., output_blocks.7., output_blocks.8., output_blocks.9., output_blocks.10., output_blocks.11., out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0.": {
              "type": "number"
            },
            "input_blocks.1.": {
              "type": "number"
            },
            "input_blocks.2.": {
              "type": "number"
            },
            "input_blocks.3.": {
              "type": "number"
            },
            "input_blocks.4.": {
              "type": "number"
            },
            "input_blocks.5.": {
              "type": "number"
            },
            "input_blocks.6.": {
              "type": "number"
            },
            "input_blocks.7.": {
              "type": "number"
            },
            "input_blocks.8.": {
              "type": "number"
            },
            "input_blocks.9.": {
              "type": "number"
            },
            "input_blocks.10.": {
              "type": "number"
            },
            "input_blocks.11.": {
              "type": "number"
            },
            "middle_block.0.": {
              "type": "number"
            },
            "middle_block.1.": {
              "type": "number"
            },
            "middle_block.2.": {
              "type": "number"
            },
            "output_blocks.0.": {
              "type": "number"
            },
            "output_blocks.1.": {
              "type": "number"
            },
            "output_blocks.2.": {
              "type": "number"
            },
            "output_blocks.3.": {
              "type": "number"
            },
            "output_blocks.4.": {
              "type": "number"
            },
            "output_blocks.5.": {
              "type": "number"
            },
            "output_blocks.6.": {
              "type": "number"
            },
            "output_blocks.7.": {
              "type": "number"
            },
            "output_blocks.8.": {
              "type": "number"
            },
            "output_blocks.9.": {
              "type": "number"
            },
            "output_blocks.10.": {
              "type": "number"
            },
            "output_blocks.11.": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0.",
            "input_blocks.1.",
            "input_blocks.2.",
            "input_blocks.3.",
            "input_blocks.4.",
            "input_blocks.5.",
            "input_blocks.6.",
            "input_blocks.7.",
            "input_blocks.8.",
            "input_blocks.9.",
            "input_blocks.10.",
            "input_blocks.11.",
            "middle_block.0.",
            "middle_block.1.",
            "middle_block.2.",
            "output_blocks.0.",
            "output_blocks.1.",
            "output_blocks.2.",
            "output_blocks.3.",
            "output_blocks.4.",
            "output_blocks.5.",
            "output_blocks.6.",
            "output_blocks.7.",
            "output_blocks.8.",
            "output_blocks.9.",
            "output_blocks.10.",
            "output_blocks.11.",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSD2": {
      "title": "ModelMergeSD1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0., input_blocks.1., input_blocks.2., input_blocks.3., input_blocks.4., input_blocks.5., input_blocks.6., input_blocks.7., input_blocks.8., input_blocks.9., input_blocks.10., input_blocks.11., middle_block.0., middle_block.1., middle_block.2., output_blocks.0., output_blocks.1., output_blocks.2., output_blocks.3., output_blocks.4., output_blocks.5., output_blocks.6., output_blocks.7., output_blocks.8., output_blocks.9., output_blocks.10., output_blocks.11., out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0.": {
              "type": "number"
            },
            "input_blocks.1.": {
              "type": "number"
            },
            "input_blocks.2.": {
              "type": "number"
            },
            "input_blocks.3.": {
              "type": "number"
            },
            "input_blocks.4.": {
              "type": "number"
            },
            "input_blocks.5.": {
              "type": "number"
            },
            "input_blocks.6.": {
              "type": "number"
            },
            "input_blocks.7.": {
              "type": "number"
            },
            "input_blocks.8.": {
              "type": "number"
            },
            "input_blocks.9.": {
              "type": "number"
            },
            "input_blocks.10.": {
              "type": "number"
            },
            "input_blocks.11.": {
              "type": "number"
            },
            "middle_block.0.": {
              "type": "number"
            },
            "middle_block.1.": {
              "type": "number"
            },
            "middle_block.2.": {
              "type": "number"
            },
            "output_blocks.0.": {
              "type": "number"
            },
            "output_blocks.1.": {
              "type": "number"
            },
            "output_blocks.2.": {
              "type": "number"
            },
            "output_blocks.3.": {
              "type": "number"
            },
            "output_blocks.4.": {
              "type": "number"
            },
            "output_blocks.5.": {
              "type": "number"
            },
            "output_blocks.6.": {
              "type": "number"
            },
            "output_blocks.7.": {
              "type": "number"
            },
            "output_blocks.8.": {
              "type": "number"
            },
            "output_blocks.9.": {
              "type": "number"
            },
            "output_blocks.10.": {
              "type": "number"
            },
            "output_blocks.11.": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0.",
            "input_blocks.1.",
            "input_blocks.2.",
            "input_blocks.3.",
            "input_blocks.4.",
            "input_blocks.5.",
            "input_blocks.6.",
            "input_blocks.7.",
            "input_blocks.8.",
            "input_blocks.9.",
            "input_blocks.10.",
            "input_blocks.11.",
            "middle_block.0.",
            "middle_block.1.",
            "middle_block.2.",
            "output_blocks.0.",
            "output_blocks.1.",
            "output_blocks.2.",
            "output_blocks.3.",
            "output_blocks.4.",
            "output_blocks.5.",
            "output_blocks.6.",
            "output_blocks.7.",
            "output_blocks.8.",
            "output_blocks.9.",
            "output_blocks.10.",
            "output_blocks.11.",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSDXL": {
      "title": "ModelMergeSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0, input_blocks.1, input_blocks.2, input_blocks.3, input_blocks.4, input_blocks.5, input_blocks.6, input_blocks.7, input_blocks.8, middle_block.0, middle_block.1, middle_block.2, output_blocks.0, output_blocks.1, output_blocks.2, output_blocks.3, output_blocks.4, output_blocks.5, output_blocks.6, output_blocks.7, output_blocks.8, out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0": {
              "type": "number"
            },
            "input_blocks.1": {
              "type": "number"
            },
            "input_blocks.2": {
              "type": "number"
            },
            "input_blocks.3": {
              "type": "number"
            },
            "input_blocks.4": {
              "type": "number"
            },
            "input_blocks.5": {
              "type": "number"
            },
            "input_blocks.6": {
              "type": "number"
            },
            "input_blocks.7": {
              "type": "number"
            },
            "input_blocks.8": {
              "type": "number"
            },
            "middle_block.0": {
              "type": "number"
            },
            "middle_block.1": {
              "type": "number"
            },
            "middle_block.2": {
              "type": "number"
            },
            "output_blocks.0": {
              "type": "number"
            },
            "output_blocks.1": {
              "type": "number"
            },
            "output_blocks.2": {
              "type": "number"
            },
            "output_blocks.3": {
              "type": "number"
            },
            "output_blocks.4": {
              "type": "number"
            },
            "output_blocks.5": {
              "type": "number"
            },
            "output_blocks.6": {
              "type": "number"
            },
            "output_blocks.7": {
              "type": "number"
            },
            "output_blocks.8": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0",
            "input_blocks.1",
            "input_blocks.2",
            "input_blocks.3",
            "input_blocks.4",
            "input_blocks.5",
            "input_blocks.6",
            "input_blocks.7",
            "input_blocks.8",
            "middle_block.0",
            "middle_block.1",
            "middle_block.2",
            "output_blocks.0",
            "output_blocks.1",
            "output_blocks.2",
            "output_blocks.3",
            "output_blocks.4",
            "output_blocks.5",
            "output_blocks.6",
            "output_blocks.7",
            "output_blocks.8",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSD3_2B": {
      "title": "ModelMergeSD3_2B",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embed., x_embedder., context_embedder., y_embedder., t_embedder., joint_blocks.0., joint_blocks.1., joint_blocks.2., joint_blocks.3., joint_blocks.4., joint_blocks.5., joint_blocks.6., joint_blocks.7., joint_blocks.8., joint_blocks.9., joint_blocks.10., joint_blocks.11., joint_blocks.12., joint_blocks.13., joint_blocks.14., joint_blocks.15., joint_blocks.16., joint_blocks.17., joint_blocks.18., joint_blocks.19., joint_blocks.20., joint_blocks.21., joint_blocks.22., joint_blocks.23., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embed.": {
              "type": "number"
            },
            "x_embedder.": {
              "type": "number"
            },
            "context_embedder.": {
              "type": "number"
            },
            "y_embedder.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "joint_blocks.0.": {
              "type": "number"
            },
            "joint_blocks.1.": {
              "type": "number"
            },
            "joint_blocks.2.": {
              "type": "number"
            },
            "joint_blocks.3.": {
              "type": "number"
            },
            "joint_blocks.4.": {
              "type": "number"
            },
            "joint_blocks.5.": {
              "type": "number"
            },
            "joint_blocks.6.": {
              "type": "number"
            },
            "joint_blocks.7.": {
              "type": "number"
            },
            "joint_blocks.8.": {
              "type": "number"
            },
            "joint_blocks.9.": {
              "type": "number"
            },
            "joint_blocks.10.": {
              "type": "number"
            },
            "joint_blocks.11.": {
              "type": "number"
            },
            "joint_blocks.12.": {
              "type": "number"
            },
            "joint_blocks.13.": {
              "type": "number"
            },
            "joint_blocks.14.": {
              "type": "number"
            },
            "joint_blocks.15.": {
              "type": "number"
            },
            "joint_blocks.16.": {
              "type": "number"
            },
            "joint_blocks.17.": {
              "type": "number"
            },
            "joint_blocks.18.": {
              "type": "number"
            },
            "joint_blocks.19.": {
              "type": "number"
            },
            "joint_blocks.20.": {
              "type": "number"
            },
            "joint_blocks.21.": {
              "type": "number"
            },
            "joint_blocks.22.": {
              "type": "number"
            },
            "joint_blocks.23.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embed.",
            "x_embedder.",
            "context_embedder.",
            "y_embedder.",
            "t_embedder.",
            "joint_blocks.0.",
            "joint_blocks.1.",
            "joint_blocks.2.",
            "joint_blocks.3.",
            "joint_blocks.4.",
            "joint_blocks.5.",
            "joint_blocks.6.",
            "joint_blocks.7.",
            "joint_blocks.8.",
            "joint_blocks.9.",
            "joint_blocks.10.",
            "joint_blocks.11.",
            "joint_blocks.12.",
            "joint_blocks.13.",
            "joint_blocks.14.",
            "joint_blocks.15.",
            "joint_blocks.16.",
            "joint_blocks.17.",
            "joint_blocks.18.",
            "joint_blocks.19.",
            "joint_blocks.20.",
            "joint_blocks.21.",
            "joint_blocks.22.",
            "joint_blocks.23.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeFlux1": {
      "title": "ModelMergeFlux1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, img_in., time_in., guidance_in, vector_in., txt_in., double_blocks.0., double_blocks.1., double_blocks.2., double_blocks.3., double_blocks.4., double_blocks.5., double_blocks.6., double_blocks.7., double_blocks.8., double_blocks.9., double_blocks.10., double_blocks.11., double_blocks.12., double_blocks.13., double_blocks.14., double_blocks.15., double_blocks.16., double_blocks.17., double_blocks.18., single_blocks.0., single_blocks.1., single_blocks.2., single_blocks.3., single_blocks.4., single_blocks.5., single_blocks.6., single_blocks.7., single_blocks.8., single_blocks.9., single_blocks.10., single_blocks.11., single_blocks.12., single_blocks.13., single_blocks.14., single_blocks.15., single_blocks.16., single_blocks.17., single_blocks.18., single_blocks.19., single_blocks.20., single_blocks.21., single_blocks.22., single_blocks.23., single_blocks.24., single_blocks.25., single_blocks.26., single_blocks.27., single_blocks.28., single_blocks.29., single_blocks.30., single_blocks.31., single_blocks.32., single_blocks.33., single_blocks.34., single_blocks.35., single_blocks.36., single_blocks.37., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "img_in.": {
              "type": "number"
            },
            "time_in.": {
              "type": "number"
            },
            "guidance_in": {
              "type": "number"
            },
            "vector_in.": {
              "type": "number"
            },
            "txt_in.": {
              "type": "number"
            },
            "double_blocks.0.": {
              "type": "number"
            },
            "double_blocks.1.": {
              "type": "number"
            },
            "double_blocks.2.": {
              "type": "number"
            },
            "double_blocks.3.": {
              "type": "number"
            },
            "double_blocks.4.": {
              "type": "number"
            },
            "double_blocks.5.": {
              "type": "number"
            },
            "double_blocks.6.": {
              "type": "number"
            },
            "double_blocks.7.": {
              "type": "number"
            },
            "double_blocks.8.": {
              "type": "number"
            },
            "double_blocks.9.": {
              "type": "number"
            },
            "double_blocks.10.": {
              "type": "number"
            },
            "double_blocks.11.": {
              "type": "number"
            },
            "double_blocks.12.": {
              "type": "number"
            },
            "double_blocks.13.": {
              "type": "number"
            },
            "double_blocks.14.": {
              "type": "number"
            },
            "double_blocks.15.": {
              "type": "number"
            },
            "double_blocks.16.": {
              "type": "number"
            },
            "double_blocks.17.": {
              "type": "number"
            },
            "double_blocks.18.": {
              "type": "number"
            },
            "single_blocks.0.": {
              "type": "number"
            },
            "single_blocks.1.": {
              "type": "number"
            },
            "single_blocks.2.": {
              "type": "number"
            },
            "single_blocks.3.": {
              "type": "number"
            },
            "single_blocks.4.": {
              "type": "number"
            },
            "single_blocks.5.": {
              "type": "number"
            },
            "single_blocks.6.": {
              "type": "number"
            },
            "single_blocks.7.": {
              "type": "number"
            },
            "single_blocks.8.": {
              "type": "number"
            },
            "single_blocks.9.": {
              "type": "number"
            },
            "single_blocks.10.": {
              "type": "number"
            },
            "single_blocks.11.": {
              "type": "number"
            },
            "single_blocks.12.": {
              "type": "number"
            },
            "single_blocks.13.": {
              "type": "number"
            },
            "single_blocks.14.": {
              "type": "number"
            },
            "single_blocks.15.": {
              "type": "number"
            },
            "single_blocks.16.": {
              "type": "number"
            },
            "single_blocks.17.": {
              "type": "number"
            },
            "single_blocks.18.": {
              "type": "number"
            },
            "single_blocks.19.": {
              "type": "number"
            },
            "single_blocks.20.": {
              "type": "number"
            },
            "single_blocks.21.": {
              "type": "number"
            },
            "single_blocks.22.": {
              "type": "number"
            },
            "single_blocks.23.": {
              "type": "number"
            },
            "single_blocks.24.": {
              "type": "number"
            },
            "single_blocks.25.": {
              "type": "number"
            },
            "single_blocks.26.": {
              "type": "number"
            },
            "single_blocks.27.": {
              "type": "number"
            },
            "single_blocks.28.": {
              "type": "number"
            },
            "single_blocks.29.": {
              "type": "number"
            },
            "single_blocks.30.": {
              "type": "number"
            },
            "single_blocks.31.": {
              "type": "number"
            },
            "single_blocks.32.": {
              "type": "number"
            },
            "single_blocks.33.": {
              "type": "number"
            },
            "single_blocks.34.": {
              "type": "number"
            },
            "single_blocks.35.": {
              "type": "number"
            },
            "single_blocks.36.": {
              "type": "number"
            },
            "single_blocks.37.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "img_in.",
            "time_in.",
            "guidance_in",
            "vector_in.",
            "txt_in.",
            "double_blocks.0.",
            "double_blocks.1.",
            "double_blocks.2.",
            "double_blocks.3.",
            "double_blocks.4.",
            "double_blocks.5.",
            "double_blocks.6.",
            "double_blocks.7.",
            "double_blocks.8.",
            "double_blocks.9.",
            "double_blocks.10.",
            "double_blocks.11.",
            "double_blocks.12.",
            "double_blocks.13.",
            "double_blocks.14.",
            "double_blocks.15.",
            "double_blocks.16.",
            "double_blocks.17.",
            "double_blocks.18.",
            "single_blocks.0.",
            "single_blocks.1.",
            "single_blocks.2.",
            "single_blocks.3.",
            "single_blocks.4.",
            "single_blocks.5.",
            "single_blocks.6.",
            "single_blocks.7.",
            "single_blocks.8.",
            "single_blocks.9.",
            "single_blocks.10.",
            "single_blocks.11.",
            "single_blocks.12.",
            "single_blocks.13.",
            "single_blocks.14.",
            "single_blocks.15.",
            "single_blocks.16.",
            "single_blocks.17.",
            "single_blocks.18.",
            "single_blocks.19.",
            "single_blocks.20.",
            "single_blocks.21.",
            "single_blocks.22.",
            "single_blocks.23.",
            "single_blocks.24.",
            "single_blocks.25.",
            "single_blocks.26.",
            "single_blocks.27.",
            "single_blocks.28.",
            "single_blocks.29.",
            "single_blocks.30.",
            "single_blocks.31.",
            "single_blocks.32.",
            "single_blocks.33.",
            "single_blocks.34.",
            "single_blocks.35.",
            "single_blocks.36.",
            "single_blocks.37.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "PerturbedAttentionGuidance": {
      "title": "PerturbedAttentionGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scale": {
              "type": "number"
            }
          },
          "required": ["model", "scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "AlignYourStepsScheduler": {
      "title": "AlignYourStepsScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_type, steps, denoise",
          "properties": {
            "model_type": {
              "type": "string"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model_type", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "UNetSelfAttentionMultiply": {
      "title": "UNetSelfAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, q, k, v, out",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "UNetCrossAttentionMultiply": {
      "title": "UNetCrossAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, q, k, v, out",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "CLIPAttentionMultiply": {
      "title": "CLIPAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, q, k, v, out",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["clip", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "UNetTemporalAttentionMultiply": {
      "title": "UNetTemporalAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, self_structural, self_temporal, cross_structural, cross_temporal",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "self_structural": {
              "type": "number"
            },
            "self_temporal": {
              "type": "number"
            },
            "cross_structural": {
              "type": "number"
            },
            "cross_temporal": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "self_structural",
            "self_temporal",
            "cross_structural",
            "cross_temporal"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "SamplerLCMUpscale": {
      "title": "SamplerLCMUpscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: scale_ratio, scale_steps, upscale_method",
          "properties": {
            "scale_ratio": {
              "type": "number"
            },
            "scale_steps": {
              "type": "number"
            },
            "upscale_method": {
              "type": "string"
            }
          },
          "required": ["scale_ratio", "scale_steps", "upscale_method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerCFGpp": {
      "title": "SamplerEulerCFGpp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: version",
          "properties": {
            "version": {
              "type": "string"
            }
          },
          "required": ["version"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "WebcamCapture": {
      "title": "WebcamCapture",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, capture_on_queue",
          "properties": {
            "image": {
              "type": "WEBCAM"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "capture_on_queue": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "width", "height", "capture_on_queue"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "EmptyLatentAudio": {
      "title": "EmptyLatentAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: seconds",
          "properties": {
            "seconds": {
              "type": "number"
            }
          },
          "required": ["seconds"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "VAEEncodeAudio": {
      "title": "VAEEncodeAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, vae",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["audio", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "VAEDecodeAudio": {
      "title": "VAEDecodeAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["samples", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "SaveAudio": {
      "title": "SaveAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, filename_prefix",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["audio", "filename_prefix"]
        }
      },
      "$category": "audio"
    },
    "LoadAudio": {
      "title": "LoadAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio",
          "properties": {
            "audio": {
              "type": "string"
            }
          },
          "required": ["audio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "audio"
    },
    "PreviewAudio": {
      "title": "PreviewAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio",
          "properties": {
            "audio": {
              "type": "AUDIO"
            }
          },
          "required": ["audio"]
        }
      },
      "$category": "audio"
    },
    "TripleCLIPLoader": {
      "title": "TripleCLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, clip_name3",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "clip_name3": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "clip_name3"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "EmptySD3LatentImage": {
      "title": "EmptySD3LatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/sd3"
    },
    "CLIPTextEncodeSD3": {
      "title": "CLIPTextEncodeSD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, clip_l, clip_g, t5xxl, empty_padding",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "clip_l": {
              "type": "string"
            },
            "clip_g": {
              "type": "string"
            },
            "t5xxl": {
              "type": "string"
            },
            "empty_padding": {
              "type": "string"
            }
          },
          "required": ["clip", "clip_l", "clip_g", "t5xxl", "empty_padding"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "ControlNetApplySD3": {
      "title": "ControlNetApplySD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, vae, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "vae": {
              "type": "VAE"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "vae",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/controlnet"
    },
    "GITSScheduler": {
      "title": "GITSScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: coeff, steps, denoise",
          "properties": {
            "coeff": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["coeff", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "SetUnionControlNetType": {
      "title": "SetUnionControlNetType",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, type",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["control_net", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/controlnet"
    },
    "CLIPTextEncodeHunyuanDiT": {
      "title": "CLIPTextEncodeHunyuanDiT",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, bert, mt5xl",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "bert": {
              "type": "string"
            },
            "mt5xl": {
              "type": "string"
            }
          },
          "required": ["clip", "bert", "mt5xl"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "CLIPTextEncodeFlux": {
      "title": "CLIPTextEncodeFlux",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, clip_l, t5xxl, guidance",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "clip_l": {
              "type": "string"
            },
            "t5xxl": {
              "type": "string"
            },
            "guidance": {
              "type": "number"
            }
          },
          "required": ["clip", "clip_l", "t5xxl", "guidance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    },
    "FluxGuidance": {
      "title": "FluxGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, guidance",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "guidance": {
              "type": "number"
            }
          },
          "required": ["conditioning", "guidance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    },
    "TimestepKeyframe": {
      "title": "TimestepKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "LatentKeyframe": {
      "title": "LatentKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_index, strength",
          "properties": {
            "batch_index": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["batch_index", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_KEYFRAME",
          "items": [
            {
              "type": "LATENT_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "LatentKeyframeGroup": {
      "title": "LatentKeyframeGroupNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: index_strengths",
          "properties": {
            "index_strengths": {
              "type": "string"
            }
          },
          "required": ["index_strengths"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_KEYFRAME",
          "items": [
            {
              "type": "LATENT_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "LatentKeyframeBatchedGroup": {
      "title": "LatentKeyframeBatchedGroupNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float_strengths",
          "properties": {
            "float_strengths": {
              "type": "number"
            }
          },
          "required": ["float_strengths"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_KEYFRAME",
          "items": [
            {
              "type": "LATENT_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "LatentKeyframeTiming": {
      "title": "LatentKeyframeInterpolationNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_index_from, batch_index_to_excl, strength_from, strength_to, interpolation",
          "properties": {
            "batch_index_from": {
              "type": "number"
            },
            "batch_index_to_excl": {
              "type": "number"
            },
            "strength_from": {
              "type": "number"
            },
            "strength_to": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            }
          },
          "required": [
            "batch_index_from",
            "batch_index_to_excl",
            "strength_from",
            "strength_to",
            "interpolation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_KEYFRAME",
          "items": [
            {
              "type": "LATENT_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "ACN_AdvancedControlNetApply": {
      "title": "AdvancedControlNetApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, MODEL",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝"
    },
    "ControlNetLoaderAdvanced": {
      "title": "ControlNetLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net_name",
          "properties": {
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝"
    },
    "DiffControlNetLoaderAdvanced": {
      "title": "DiffControlNetLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, control_net_name",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["model", "control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝"
    },
    "ScaledSoftControlNetWeights": {
      "title": "ScaledSoftUniversalWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_multiplier, flip_weights",
          "properties": {
            "base_multiplier": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": ["base_multiplier", "flip_weights"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights"
    },
    "ScaledSoftMaskedUniversalWeights": {
      "title": "ScaledSoftMaskedUniversalWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, min_base_multiplier, max_base_multiplier",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "min_base_multiplier": {
              "type": "number"
            },
            "max_base_multiplier": {
              "type": "number"
            }
          },
          "required": ["mask", "min_base_multiplier", "max_base_multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights"
    },
    "SoftControlNetWeights": {
      "title": "SoftControlNetWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weight_00, weight_01, weight_02, weight_03, weight_04, weight_05, weight_06, weight_07, weight_08, weight_09, weight_10, weight_11, weight_12, flip_weights",
          "properties": {
            "weight_00": {
              "type": "number"
            },
            "weight_01": {
              "type": "number"
            },
            "weight_02": {
              "type": "number"
            },
            "weight_03": {
              "type": "number"
            },
            "weight_04": {
              "type": "number"
            },
            "weight_05": {
              "type": "number"
            },
            "weight_06": {
              "type": "number"
            },
            "weight_07": {
              "type": "number"
            },
            "weight_08": {
              "type": "number"
            },
            "weight_09": {
              "type": "number"
            },
            "weight_10": {
              "type": "number"
            },
            "weight_11": {
              "type": "number"
            },
            "weight_12": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "weight_00",
            "weight_01",
            "weight_02",
            "weight_03",
            "weight_04",
            "weight_05",
            "weight_06",
            "weight_07",
            "weight_08",
            "weight_09",
            "weight_10",
            "weight_11",
            "weight_12",
            "flip_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet"
    },
    "CustomControlNetWeights": {
      "title": "CustomControlNetWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weight_00, weight_01, weight_02, weight_03, weight_04, weight_05, weight_06, weight_07, weight_08, weight_09, weight_10, weight_11, weight_12, flip_weights",
          "properties": {
            "weight_00": {
              "type": "number"
            },
            "weight_01": {
              "type": "number"
            },
            "weight_02": {
              "type": "number"
            },
            "weight_03": {
              "type": "number"
            },
            "weight_04": {
              "type": "number"
            },
            "weight_05": {
              "type": "number"
            },
            "weight_06": {
              "type": "number"
            },
            "weight_07": {
              "type": "number"
            },
            "weight_08": {
              "type": "number"
            },
            "weight_09": {
              "type": "number"
            },
            "weight_10": {
              "type": "number"
            },
            "weight_11": {
              "type": "number"
            },
            "weight_12": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "weight_00",
            "weight_01",
            "weight_02",
            "weight_03",
            "weight_04",
            "weight_05",
            "weight_06",
            "weight_07",
            "weight_08",
            "weight_09",
            "weight_10",
            "weight_11",
            "weight_12",
            "flip_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet"
    },
    "SoftT2IAdapterWeights": {
      "title": "SoftT2IAdapterWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weight_00, weight_01, weight_02, weight_03, flip_weights",
          "properties": {
            "weight_00": {
              "type": "number"
            },
            "weight_01": {
              "type": "number"
            },
            "weight_02": {
              "type": "number"
            },
            "weight_03": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "weight_00",
            "weight_01",
            "weight_02",
            "weight_03",
            "flip_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter"
    },
    "CustomT2IAdapterWeights": {
      "title": "CustomT2IAdapterWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weight_00, weight_01, weight_02, weight_03, flip_weights",
          "properties": {
            "weight_00": {
              "type": "number"
            },
            "weight_01": {
              "type": "number"
            },
            "weight_02": {
              "type": "number"
            },
            "weight_03": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "weight_00",
            "weight_01",
            "weight_02",
            "weight_03",
            "flip_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter"
    },
    "ACN_DefaultUniversalWeights": {
      "title": "DefaultWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights"
    },
    "ACN_SparseCtrlRGBPreprocessor": {
      "title": "RgbSparseCtrlPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, latent_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "latent_size": {
              "type": "LATENT"
            }
          },
          "required": ["image", "vae", "latent_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/preprocess"
    },
    "ACN_SparseCtrlLoaderAdvanced": {
      "title": "SparseCtrlLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sparsectrl_name, use_motion, motion_strength, motion_scale",
          "properties": {
            "sparsectrl_name": {
              "type": "string"
            },
            "use_motion": {
              "type": "BOOLEAN"
            },
            "motion_strength": {
              "type": "number"
            },
            "motion_scale": {
              "type": "number"
            }
          },
          "required": [
            "sparsectrl_name",
            "use_motion",
            "motion_strength",
            "motion_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl"
    },
    "ACN_SparseCtrlMergedLoaderAdvanced": {
      "title": "SparseCtrlMergedLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sparsectrl_name, control_net_name, use_motion, motion_strength, motion_scale",
          "properties": {
            "sparsectrl_name": {
              "type": "string"
            },
            "control_net_name": {
              "type": "string"
            },
            "use_motion": {
              "type": "BOOLEAN"
            },
            "motion_strength": {
              "type": "number"
            },
            "motion_scale": {
              "type": "number"
            }
          },
          "required": [
            "sparsectrl_name",
            "control_net_name",
            "use_motion",
            "motion_strength",
            "motion_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/experimental"
    },
    "ACN_SparseCtrlIndexMethodNode": {
      "title": "SparseIndexMethodNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: indexes",
          "properties": {
            "indexes": {
              "type": "string"
            }
          },
          "required": ["indexes"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SPARSE_METHOD",
          "items": [
            {
              "type": "SPARSE_METHOD"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl"
    },
    "ACN_SparseCtrlSpreadMethodNode": {
      "title": "SparseSpreadMethodNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: spread",
          "properties": {
            "spread": {
              "type": "string"
            }
          },
          "required": ["spread"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SPARSE_METHOD",
          "items": [
            {
              "type": "SPARSE_METHOD"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl"
    },
    "ACN_ReferencePreprocessor": {
      "title": "ReferencePreprocessorNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, latent_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "latent_size": {
              "type": "LATENT"
            }
          },
          "required": ["image", "vae", "latent_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/Reference/preprocess"
    },
    "ACN_ReferenceControlNet": {
      "title": "ReferenceControlNetNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: reference_type, style_fidelity, ref_weight",
          "properties": {
            "reference_type": {
              "type": "string"
            },
            "style_fidelity": {
              "type": "number"
            },
            "ref_weight": {
              "type": "number"
            }
          },
          "required": ["reference_type", "style_fidelity", "ref_weight"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/Reference"
    },
    "ACN_ReferenceControlNetFinetune": {
      "title": "ReferenceControlFinetune",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: attn_style_fidelity, attn_ref_weight, attn_strength, adain_style_fidelity, adain_ref_weight, adain_strength",
          "properties": {
            "attn_style_fidelity": {
              "type": "number"
            },
            "attn_ref_weight": {
              "type": "number"
            },
            "attn_strength": {
              "type": "number"
            },
            "adain_style_fidelity": {
              "type": "number"
            },
            "adain_ref_weight": {
              "type": "number"
            },
            "adain_strength": {
              "type": "number"
            }
          },
          "required": [
            "attn_style_fidelity",
            "attn_ref_weight",
            "attn_strength",
            "adain_style_fidelity",
            "adain_ref_weight",
            "adain_strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/Reference"
    },
    "LoadImagesFromDirectory": {
      "title": "LoadImagesFromDirectory",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: directory",
          "properties": {
            "directory": {
              "type": "string"
            }
          },
          "required": ["directory"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/deprecated"
    },
    "ADE_AnimateDiffLoRALoader": {
      "title": "AnimateDiffLoraLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora_name, strength",
          "properties": {
            "lora_name": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["lora_name", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_LORA",
          "items": [
            {
              "type": "MOTION_LORA"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓"
    },
    "ADE_AnimateDiffSamplingSettings": {
      "title": "SampleSettingsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen, seed_offset",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            }
          },
          "required": ["batch_offset", "noise_type", "seed_gen", "seed_offset"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLE_SETTINGS",
          "items": [
            {
              "type": "SAMPLE_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓"
    },
    "ADE_AnimateDiffKeyframe": {
      "title": "ADKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_KEYFRAMES",
          "items": [
            {
              "type": "AD_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓"
    },
    "ADE_MultivalDynamic": {
      "title": "MultivalDynamicNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float_val",
          "properties": {
            "float_val": {
              "type": "number"
            }
          },
          "required": ["float_val"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MULTIVAL",
          "items": [
            {
              "type": "MULTIVAL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/multival"
    },
    "ADE_MultivalScaledMask": {
      "title": "MultivalScaledMaskNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: min_float_val, max_float_val, mask",
          "properties": {
            "min_float_val": {
              "type": "number"
            },
            "max_float_val": {
              "type": "number"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["min_float_val", "max_float_val", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MULTIVAL",
          "items": [
            {
              "type": "MULTIVAL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/multival"
    },
    "ADE_StandardStaticContextOptions": {
      "title": "StandardStaticContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length, context_overlap",
          "properties": {
            "context_length": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            }
          },
          "required": ["context_length", "context_overlap"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_StandardUniformContextOptions": {
      "title": "StandardUniformContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length, context_stride, context_overlap",
          "properties": {
            "context_length": {
              "type": "number"
            },
            "context_stride": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            }
          },
          "required": ["context_length", "context_stride", "context_overlap"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_LoopedUniformContextOptions": {
      "title": "LoopedUniformContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length, context_stride, context_overlap, closed_loop",
          "properties": {
            "context_length": {
              "type": "number"
            },
            "context_stride": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            },
            "closed_loop": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "context_length",
            "context_stride",
            "context_overlap",
            "closed_loop"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_ViewsOnlyContextOptions": {
      "title": "ViewAsContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: view_opts_req",
          "properties": {
            "view_opts_req": {
              "type": "VIEW_OPTS"
            }
          },
          "required": ["view_opts_req"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_BatchedContextOptions": {
      "title": "BatchedContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length",
          "properties": {
            "context_length": {
              "type": "number"
            }
          },
          "required": ["context_length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_AnimateDiffUniformContextOptions": {
      "title": "LegacyLoopedUniformContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length, context_stride, context_overlap, context_schedule, closed_loop",
          "properties": {
            "context_length": {
              "type": "number"
            },
            "context_stride": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            },
            "context_schedule": {
              "type": "string"
            },
            "closed_loop": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "context_length",
            "context_stride",
            "context_overlap",
            "context_schedule",
            "closed_loop"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_StandardStaticViewOptions": {
      "title": "StandardStaticViewOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: view_length, view_overlap",
          "properties": {
            "view_length": {
              "type": "number"
            },
            "view_overlap": {
              "type": "number"
            }
          },
          "required": ["view_length", "view_overlap"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIEW_OPTS",
          "items": [
            {
              "type": "VIEW_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/view opts"
    },
    "ADE_StandardUniformViewOptions": {
      "title": "StandardUniformViewOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: view_length, view_stride, view_overlap",
          "properties": {
            "view_length": {
              "type": "number"
            },
            "view_stride": {
              "type": "number"
            },
            "view_overlap": {
              "type": "number"
            }
          },
          "required": ["view_length", "view_stride", "view_overlap"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIEW_OPTS",
          "items": [
            {
              "type": "VIEW_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/view opts"
    },
    "ADE_LoopedUniformViewOptions": {
      "title": "LoopedUniformViewOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: view_length, view_stride, view_overlap, closed_loop",
          "properties": {
            "view_length": {
              "type": "number"
            },
            "view_stride": {
              "type": "number"
            },
            "view_overlap": {
              "type": "number"
            },
            "closed_loop": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "view_length",
            "view_stride",
            "view_overlap",
            "closed_loop"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIEW_OPTS",
          "items": [
            {
              "type": "VIEW_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/view opts"
    },
    "ADE_IterationOptsDefault": {
      "title": "IterationOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: iterations",
          "properties": {
            "iterations": {
              "type": "number"
            }
          },
          "required": ["iterations"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ITERATION_OPTS",
          "items": [
            {
              "type": "ITERATION_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/iteration opts"
    },
    "ADE_IterationOptsFreeInit": {
      "title": "FreeInitOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: iterations, filter, d_s, d_t, n_butterworth, sigma_step, apply_to_1st_iter, init_type",
          "properties": {
            "iterations": {
              "type": "number"
            },
            "filter": {
              "type": "string"
            },
            "d_s": {
              "type": "number"
            },
            "d_t": {
              "type": "number"
            },
            "n_butterworth": {
              "type": "number"
            },
            "sigma_step": {
              "type": "number"
            },
            "apply_to_1st_iter": {
              "type": "BOOLEAN"
            },
            "init_type": {
              "type": "string"
            }
          },
          "required": [
            "iterations",
            "filter",
            "d_s",
            "d_t",
            "n_butterworth",
            "sigma_step",
            "apply_to_1st_iter",
            "init_type"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ITERATION_OPTS",
          "items": [
            {
              "type": "ITERATION_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/iteration opts"
    },
    "ADE_RegisterLoraHook": {
      "title": "MaskableLoraLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, lora_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "lora_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, LORA_HOOK",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "LORA_HOOK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks"
    },
    "ADE_RegisterLoraHookModelOnly": {
      "title": "MaskableLoraLoaderModelOnly",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, lora_name, strength_model",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["model", "lora_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, LORA_HOOK",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "LORA_HOOK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks"
    },
    "ADE_RegisterModelAsLoraHook": {
      "title": "MaskableSDModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, ckpt_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "ckpt_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "ckpt_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, LORA_HOOK",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "LORA_HOOK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks"
    },
    "ADE_RegisterModelAsLoraHookModelOnly": {
      "title": "MaskableSDModelLoaderModelOnly",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ckpt_name, strength_model",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ckpt_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["model", "ckpt_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, LORA_HOOK",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "LORA_HOOK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks"
    },
    "ADE_CombineLoraHooks": {
      "title": "CombineLoraHooks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_HOOK",
          "items": [
            {
              "type": "LORA_HOOK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks"
    },
    "ADE_CombineLoraHooksFour": {
      "title": "CombineLoraHookFourOptional",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_HOOK",
          "items": [
            {
              "type": "LORA_HOOK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks"
    },
    "ADE_CombineLoraHooksEight": {
      "title": "CombineLoraHookEightOptional",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_HOOK",
          "items": [
            {
              "type": "LORA_HOOK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks"
    },
    "ADE_SetLoraHookKeyframe": {
      "title": "SetLoraHookKeyframes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora_hook, hook_kf",
          "properties": {
            "lora_hook": {
              "type": "LORA_HOOK"
            },
            "hook_kf": {
              "type": "LORA_HOOK_KEYFRAMES"
            }
          },
          "required": ["lora_hook", "hook_kf"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_HOOK",
          "items": [
            {
              "type": "LORA_HOOK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_AttachLoraHookToCLIP": {
      "title": "SetClipLoraHook",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, lora_hook",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "lora_hook": {
              "type": "LORA_HOOK"
            }
          },
          "required": ["clip", "lora_hook"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_LoraHookKeyframe": {
      "title": "CreateLoraHookKeyframe",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: strength_model, start_percent, guarantee_steps",
          "properties": {
            "strength_model": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "guarantee_steps": {
              "type": "number"
            }
          },
          "required": ["strength_model", "start_percent", "guarantee_steps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_HOOK_KEYFRAMES",
          "items": [
            {
              "type": "LORA_HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks"
    },
    "ADE_LoraHookKeyframeInterpolation": {
      "title": "CreateLoraHookKeyframeInterpolation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent, strength_start, strength_end, interpolation, intervals, print_keyframes",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "strength_start": {
              "type": "number"
            },
            "strength_end": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "intervals": {
              "type": "number"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "start_percent",
            "end_percent",
            "strength_start",
            "strength_end",
            "interpolation",
            "intervals",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_HOOK_KEYFRAMES",
          "items": [
            {
              "type": "LORA_HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks"
    },
    "ADE_LoraHookKeyframeFromStrengthList": {
      "title": "CreateLoraHookKeyframeFromStrengthList",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: strengths_float, start_percent, end_percent, print_keyframes",
          "properties": {
            "strengths_float": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "strengths_float",
            "start_percent",
            "end_percent",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_HOOK_KEYFRAMES",
          "items": [
            {
              "type": "LORA_HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks"
    },
    "ADE_AttachLoraHookToConditioning": {
      "title": "SetModelLoraHook",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, lora_hook",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "lora_hook": {
              "type": "LORA_HOOK"
            }
          },
          "required": ["conditioning", "lora_hook"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_PairedConditioningSetMask": {
      "title": "PairedConditioningSetMaskHooked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_ADD, negative_ADD, strength, set_cond_area",
          "properties": {
            "positive_ADD": {
              "type": "CONDITIONING"
            },
            "negative_ADD": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive_ADD",
            "negative_ADD",
            "strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_ConditioningSetMask": {
      "title": "ConditioningSetMaskHooked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond_ADD, strength, set_cond_area",
          "properties": {
            "cond_ADD": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["cond_ADD", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_PairedConditioningSetMaskAndCombine": {
      "title": "PairedConditioningSetMaskAndCombineHooked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, positive_ADD, negative_ADD, strength, set_cond_area",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "positive_ADD": {
              "type": "CONDITIONING"
            },
            "negative_ADD": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive",
            "negative",
            "positive_ADD",
            "negative_ADD",
            "strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_ConditioningSetMaskAndCombine": {
      "title": "ConditioningSetMaskAndCombineHooked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond, cond_ADD, strength, set_cond_area",
          "properties": {
            "cond": {
              "type": "CONDITIONING"
            },
            "cond_ADD": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["cond", "cond_ADD", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_PairedConditioningSetUnmaskedAndCombine": {
      "title": "PairedConditioningSetUnmaskedAndCombineHooked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, positive_DEFAULT, negative_DEFAULT",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "positive_DEFAULT": {
              "type": "CONDITIONING"
            },
            "negative_DEFAULT": {
              "type": "CONDITIONING"
            }
          },
          "required": [
            "positive",
            "negative",
            "positive_DEFAULT",
            "negative_DEFAULT"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_ConditioningSetUnmaskedAndCombine": {
      "title": "ConditioningSetUnmaskedAndCombineHooked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond, cond_DEFAULT",
          "properties": {
            "cond": {
              "type": "CONDITIONING"
            },
            "cond_DEFAULT": {
              "type": "CONDITIONING"
            }
          },
          "required": ["cond", "cond_DEFAULT"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_TimestepsConditioning": {
      "title": "ConditioningTimestepsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent", "end_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TIMESTEPS_COND",
          "items": [
            {
              "type": "TIMESTEPS_COND"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_NoiseLayerAdd": {
      "title": "NoiseLayerAddNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen_override, seed_offset, noise_weight",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen_override": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            },
            "noise_weight": {
              "type": "number"
            }
          },
          "required": [
            "batch_offset",
            "noise_type",
            "seed_gen_override",
            "seed_offset",
            "noise_weight"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE_LAYERS",
          "items": [
            {
              "type": "NOISE_LAYERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/noise layers"
    },
    "ADE_NoiseLayerAddWeighted": {
      "title": "NoiseLayerAddWeightedNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen_override, seed_offset, noise_weight, balance_multiplier",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen_override": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            },
            "noise_weight": {
              "type": "number"
            },
            "balance_multiplier": {
              "type": "number"
            }
          },
          "required": [
            "batch_offset",
            "noise_type",
            "seed_gen_override",
            "seed_offset",
            "noise_weight",
            "balance_multiplier"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE_LAYERS",
          "items": [
            {
              "type": "NOISE_LAYERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/noise layers"
    },
    "ADE_NoiseLayerReplace": {
      "title": "NoiseLayerReplaceNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen_override, seed_offset",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen_override": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            }
          },
          "required": [
            "batch_offset",
            "noise_type",
            "seed_gen_override",
            "seed_offset"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE_LAYERS",
          "items": [
            {
              "type": "NOISE_LAYERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/noise layers"
    },
    "ADE_AnimateDiffSettings": {
      "title": "AnimateDiffSettingsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings"
    },
    "ADE_AdjustPESweetspotStretch": {
      "title": "SweetspotStretchPENode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sweetspot, new_sweetspot, print_adjustment",
          "properties": {
            "sweetspot": {
              "type": "number"
            },
            "new_sweetspot": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["sweetspot", "new_sweetspot", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PE_ADJUST",
          "items": [
            {
              "type": "PE_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust"
    },
    "ADE_AdjustPEFullStretch": {
      "title": "FullStretchPENode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_stretch, print_adjustment",
          "properties": {
            "pe_stretch": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["pe_stretch", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PE_ADJUST",
          "items": [
            {
              "type": "PE_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust"
    },
    "ADE_AdjustPEManual": {
      "title": "ManualAdjustPENode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cap_initial_pe_length, interpolate_pe_to_length, initial_pe_idx_offset, final_pe_idx_offset, print_adjustment",
          "properties": {
            "cap_initial_pe_length": {
              "type": "number"
            },
            "interpolate_pe_to_length": {
              "type": "number"
            },
            "initial_pe_idx_offset": {
              "type": "number"
            },
            "final_pe_idx_offset": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "cap_initial_pe_length",
            "interpolate_pe_to_length",
            "initial_pe_idx_offset",
            "final_pe_idx_offset",
            "print_adjustment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PE_ADJUST",
          "items": [
            {
              "type": "PE_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust"
    },
    "ADE_AdjustWeightAllAdd": {
      "title": "WeightAdjustAllAddNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: all_ADD, print_adjustment",
          "properties": {
            "all_ADD": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["all_ADD", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightAllMult": {
      "title": "WeightAdjustAllMultNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: all_MULT, print_adjustment",
          "properties": {
            "all_MULT": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["all_MULT", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightIndivAdd": {
      "title": "WeightAdjustIndivAddNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_ADD, attn_ADD, other_ADD, print_adjustment",
          "properties": {
            "pe_ADD": {
              "type": "number"
            },
            "attn_ADD": {
              "type": "number"
            },
            "other_ADD": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["pe_ADD", "attn_ADD", "other_ADD", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightIndivMult": {
      "title": "WeightAdjustIndivMultNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_MULT, attn_MULT, other_MULT, print_adjustment",
          "properties": {
            "pe_MULT": {
              "type": "number"
            },
            "attn_MULT": {
              "type": "number"
            },
            "other_MULT": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["pe_MULT", "attn_MULT", "other_MULT", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightIndivAttnAdd": {
      "title": "WeightAdjustIndivAttnAddNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_ADD, attn_ADD, attn_q_ADD, attn_k_ADD, attn_v_ADD, attn_out_weight_ADD, attn_out_bias_ADD, other_ADD, print_adjustment",
          "properties": {
            "pe_ADD": {
              "type": "number"
            },
            "attn_ADD": {
              "type": "number"
            },
            "attn_q_ADD": {
              "type": "number"
            },
            "attn_k_ADD": {
              "type": "number"
            },
            "attn_v_ADD": {
              "type": "number"
            },
            "attn_out_weight_ADD": {
              "type": "number"
            },
            "attn_out_bias_ADD": {
              "type": "number"
            },
            "other_ADD": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "pe_ADD",
            "attn_ADD",
            "attn_q_ADD",
            "attn_k_ADD",
            "attn_v_ADD",
            "attn_out_weight_ADD",
            "attn_out_bias_ADD",
            "other_ADD",
            "print_adjustment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightIndivAttnMult": {
      "title": "WeightAdjustIndivAttnMultNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_MULT, attn_MULT, attn_q_MULT, attn_k_MULT, attn_v_MULT, attn_out_weight_MULT, attn_out_bias_MULT, other_MULT, print_adjustment",
          "properties": {
            "pe_MULT": {
              "type": "number"
            },
            "attn_MULT": {
              "type": "number"
            },
            "attn_q_MULT": {
              "type": "number"
            },
            "attn_k_MULT": {
              "type": "number"
            },
            "attn_v_MULT": {
              "type": "number"
            },
            "attn_out_weight_MULT": {
              "type": "number"
            },
            "attn_out_bias_MULT": {
              "type": "number"
            },
            "other_MULT": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "pe_MULT",
            "attn_MULT",
            "attn_q_MULT",
            "attn_k_MULT",
            "attn_v_MULT",
            "attn_out_weight_MULT",
            "attn_out_bias_MULT",
            "other_MULT",
            "print_adjustment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_CustomCFG": {
      "title": "CustomCFGNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cfg_multival",
          "properties": {
            "cfg_multival": {
              "type": "MULTIVAL"
            }
          },
          "required": ["cfg_multival"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CUSTOM_CFG",
          "items": [
            {
              "type": "CUSTOM_CFG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings"
    },
    "ADE_CustomCFGKeyframe": {
      "title": "CustomCFGKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cfg_multival, start_percent, guarantee_steps",
          "properties": {
            "cfg_multival": {
              "type": "MULTIVAL"
            },
            "start_percent": {
              "type": "number"
            },
            "guarantee_steps": {
              "type": "number"
            }
          },
          "required": ["cfg_multival", "start_percent", "guarantee_steps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CUSTOM_CFG",
          "items": [
            {
              "type": "CUSTOM_CFG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings"
    },
    "ADE_SigmaSchedule": {
      "title": "SigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: beta_schedule",
          "properties": {
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_RawSigmaSchedule": {
      "title": "RawSigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: raw_beta_schedule, linear_start, linear_end, sampling, lcm_original_timesteps, lcm_zsnr",
          "properties": {
            "raw_beta_schedule": {
              "type": "string"
            },
            "linear_start": {
              "type": "number"
            },
            "linear_end": {
              "type": "number"
            },
            "sampling": {
              "type": "string"
            },
            "lcm_original_timesteps": {
              "type": "number"
            },
            "lcm_zsnr": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "raw_beta_schedule",
            "linear_start",
            "linear_end",
            "sampling",
            "lcm_original_timesteps",
            "lcm_zsnr"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_SigmaScheduleWeightedAverage": {
      "title": "WeightedAverageSigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: schedule_A, schedule_B, weight_A",
          "properties": {
            "schedule_A": {
              "type": "SIGMA_SCHEDULE"
            },
            "schedule_B": {
              "type": "SIGMA_SCHEDULE"
            },
            "weight_A": {
              "type": "number"
            }
          },
          "required": ["schedule_A", "schedule_B", "weight_A"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_SigmaScheduleWeightedAverageInterp": {
      "title": "InterpolatedWeightedAverageSigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: schedule_A, schedule_B, weight_A_Start, weight_A_End, interpolation",
          "properties": {
            "schedule_A": {
              "type": "SIGMA_SCHEDULE"
            },
            "schedule_B": {
              "type": "SIGMA_SCHEDULE"
            },
            "weight_A_Start": {
              "type": "number"
            },
            "weight_A_End": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            }
          },
          "required": [
            "schedule_A",
            "schedule_B",
            "weight_A_Start",
            "weight_A_End",
            "interpolation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_SigmaScheduleSplitAndCombine": {
      "title": "SplitAndCombineSigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: schedule_Start, schedule_End, idx_split_percent",
          "properties": {
            "schedule_Start": {
              "type": "SIGMA_SCHEDULE"
            },
            "schedule_End": {
              "type": "SIGMA_SCHEDULE"
            },
            "idx_split_percent": {
              "type": "number"
            }
          },
          "required": ["schedule_Start", "schedule_End", "idx_split_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_AnimateDiffUnload": {
      "title": "AnimateDiffUnload",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/extras"
    },
    "ADE_EmptyLatentImageLarge": {
      "title": "EmptyLatentImageLarge",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/extras"
    },
    "CheckpointLoaderSimpleWithNoiseSelect": {
      "title": "CheckpointLoaderSimpleWithNoiseSelect",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name, beta_schedule",
          "properties": {
            "ckpt_name": {
              "type": "string"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["ckpt_name", "beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/extras"
    },
    "ADE_AnimateDiffLoaderGen1": {
      "title": "AnimateDiffLoaderGen1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, model_name, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "model_name": {
              "type": "string"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["model", "model_name", "beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/① Gen1 nodes ①"
    },
    "ADE_AnimateDiffLoaderWithContext": {
      "title": "LegacyAnimateDiffLoaderWithContext",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, model_name, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "model_name": {
              "type": "string"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["model", "model_name", "beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/① Gen1 nodes ①"
    },
    "ADE_UseEvolvedSampling": {
      "title": "UseEvolvedSamplingNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["model", "beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②"
    },
    "ADE_ApplyAnimateDiffModelSimple": {
      "title": "ApplyAnimateDiffModelBasicNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            }
          },
          "required": ["motion_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②"
    },
    "ADE_ApplyAnimateDiffModel": {
      "title": "ApplyAnimateDiffModelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model, start_percent, end_percent",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": ["motion_model", "start_percent", "end_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②"
    },
    "ADE_LoadAnimateDiffModel": {
      "title": "LoadAnimateDiffModelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name",
          "properties": {
            "model_name": {
              "type": "string"
            }
          },
          "required": ["model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②"
    },
    "ADE_ApplyAnimateLCMI2VModel": {
      "title": "ApplyAnimateLCMI2VModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model, ref_latent, ref_drift, apply_ref_when_disabled, start_percent, end_percent",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            },
            "ref_latent": {
              "type": "LATENT"
            },
            "ref_drift": {
              "type": "number"
            },
            "apply_ref_when_disabled": {
              "type": "BOOLEAN"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "motion_model",
            "ref_latent",
            "ref_drift",
            "apply_ref_when_disabled",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V"
    },
    "ADE_LoadAnimateLCMI2VModel": {
      "title": "LoadAnimateLCMI2VModelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name",
          "properties": {
            "model_name": {
              "type": "string"
            }
          },
          "required": ["model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE, MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            },
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V"
    },
    "ADE_UpscaleAndVAEEncode": {
      "title": "UpscaleAndVaeEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, latent_size, scale_method, crop",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "latent_size": {
              "type": "LATENT"
            },
            "scale_method": {
              "type": "string"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["image", "vae", "latent_size", "scale_method", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V"
    },
    "ADE_InjectI2VIntoAnimateDiffModel": {
      "title": "LoadAnimateDiffAndInjectI2VNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name, motion_model",
          "properties": {
            "model_name": {
              "type": "string"
            },
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            }
          },
          "required": ["model_name", "motion_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V/🧪experimental"
    },
    "ADE_ApplyAnimateDiffModelWithCameraCtrl": {
      "title": "ApplyAnimateDiffWithCameraCtrl",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model, cameractrl_poses, start_percent, end_percent",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            },
            "cameractrl_poses": {
              "type": "CAMERACTRL_POSES"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "motion_model",
            "cameractrl_poses",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl"
    },
    "ADE_LoadAnimateDiffModelWithCameraCtrl": {
      "title": "LoadAnimateDiffModelWithCameraCtrl",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name, camera_ctrl",
          "properties": {
            "model_name": {
              "type": "string"
            },
            "camera_ctrl": {
              "type": "string"
            }
          },
          "required": ["model_name", "camera_ctrl"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl"
    },
    "ADE_CameraCtrlAnimateDiffKeyframe": {
      "title": "CameraCtrlADKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_KEYFRAMES",
          "items": [
            {
              "type": "AD_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl"
    },
    "ADE_LoadCameraPoses": {
      "title": "LoadCameraPoses",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pose_filename",
          "properties": {
            "pose_filename": {
              "type": "string"
            }
          },
          "required": ["pose_filename"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_CameraPoseBasic": {
      "title": "CameraCtrlPoseBasic",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_type, speed, frame_length",
          "properties": {
            "motion_type": {
              "type": "string"
            },
            "speed": {
              "type": "number"
            },
            "frame_length": {
              "type": "number"
            }
          },
          "required": ["motion_type", "speed", "frame_length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_CameraPoseCombo": {
      "title": "CameraCtrlPoseCombo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_type1, motion_type2, motion_type3, motion_type4, motion_type5, motion_type6, speed, frame_length",
          "properties": {
            "motion_type1": {
              "type": "string"
            },
            "motion_type2": {
              "type": "string"
            },
            "motion_type3": {
              "type": "string"
            },
            "motion_type4": {
              "type": "string"
            },
            "motion_type5": {
              "type": "string"
            },
            "motion_type6": {
              "type": "string"
            },
            "speed": {
              "type": "number"
            },
            "frame_length": {
              "type": "number"
            }
          },
          "required": [
            "motion_type1",
            "motion_type2",
            "motion_type3",
            "motion_type4",
            "motion_type5",
            "motion_type6",
            "speed",
            "frame_length"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_CameraPoseAdvanced": {
      "title": "CameraCtrlPoseAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_type1, strength1, motion_type2, strength2, motion_type3, strength3, motion_type4, strength4, motion_type5, strength5, motion_type6, strength6, speed, frame_length",
          "properties": {
            "motion_type1": {
              "type": "string"
            },
            "strength1": {
              "type": "number"
            },
            "motion_type2": {
              "type": "string"
            },
            "strength2": {
              "type": "number"
            },
            "motion_type3": {
              "type": "string"
            },
            "strength3": {
              "type": "number"
            },
            "motion_type4": {
              "type": "string"
            },
            "strength4": {
              "type": "number"
            },
            "motion_type5": {
              "type": "string"
            },
            "strength5": {
              "type": "number"
            },
            "motion_type6": {
              "type": "string"
            },
            "strength6": {
              "type": "number"
            },
            "speed": {
              "type": "number"
            },
            "frame_length": {
              "type": "number"
            }
          },
          "required": [
            "motion_type1",
            "strength1",
            "motion_type2",
            "strength2",
            "motion_type3",
            "strength3",
            "motion_type4",
            "strength4",
            "motion_type5",
            "strength5",
            "motion_type6",
            "strength6",
            "speed",
            "frame_length"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_CameraManualPoseAppend": {
      "title": "CameraCtrlManualAppendPose",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: poses_first, poses_last",
          "properties": {
            "poses_first": {
              "type": "CAMERACTRL_POSES"
            },
            "poses_last": {
              "type": "CAMERACTRL_POSES"
            }
          },
          "required": ["poses_first", "poses_last"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_ReplaceCameraParameters": {
      "title": "CameraCtrlReplaceCameraParameters",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: poses, fx, fy, cx, cy",
          "properties": {
            "poses": {
              "type": "CAMERACTRL_POSES"
            },
            "fx": {
              "type": "number"
            },
            "fy": {
              "type": "number"
            },
            "cx": {
              "type": "number"
            },
            "cy": {
              "type": "number"
            }
          },
          "required": ["poses", "fx", "fy", "cx", "cy"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_ReplaceOriginalPoseAspectRatio": {
      "title": "CameraCtrlSetOriginalAspectRatio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: poses, orig_pose_width, orig_pose_height",
          "properties": {
            "poses": {
              "type": "CAMERACTRL_POSES"
            },
            "orig_pose_width": {
              "type": "number"
            },
            "orig_pose_height": {
              "type": "number"
            }
          },
          "required": ["poses", "orig_pose_width", "orig_pose_height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "AnimateDiffLoaderV1": {
      "title": "AnimateDiffLoader_Deprecated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latents, model_name, unlimited_area_hack, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "latents": {
              "type": "LATENT"
            },
            "model_name": {
              "type": "string"
            },
            "unlimited_area_hack": {
              "type": "BOOLEAN"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "latents",
            "model_name",
            "unlimited_area_hack",
            "beta_schedule"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, LATENT",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffLoaderV1Advanced": {
      "title": "AnimateDiffLoaderAdvanced_Deprecated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latents, model_name, unlimited_area_hack, context_length, context_stride, context_overlap, context_schedule, closed_loop, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "latents": {
              "type": "LATENT"
            },
            "model_name": {
              "type": "string"
            },
            "unlimited_area_hack": {
              "type": "BOOLEAN"
            },
            "context_length": {
              "type": "number"
            },
            "context_stride": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            },
            "context_schedule": {
              "type": "string"
            },
            "closed_loop": {
              "type": "BOOLEAN"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "latents",
            "model_name",
            "unlimited_area_hack",
            "context_length",
            "context_stride",
            "context_overlap",
            "context_schedule",
            "closed_loop",
            "beta_schedule"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, LATENT",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffCombine": {
      "title": "AnimateDiffCombine_Deprecated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, frame_rate, loop_count, filename_prefix, format, pingpong, save_image",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "frame_rate": {
              "type": "number"
            },
            "loop_count": {
              "type": "number"
            },
            "filename_prefix": {
              "type": "string"
            },
            "format": {
              "type": "string"
            },
            "pingpong": {
              "type": "BOOLEAN"
            },
            "save_image": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "images",
            "frame_rate",
            "loop_count",
            "filename_prefix",
            "format",
            "pingpong",
            "save_image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GIF",
          "items": [
            {
              "type": "GIF"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffModelSettings_Release": {
      "title": "AnimateDiffModelSettings",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: min_motion_scale, max_motion_scale",
          "properties": {
            "min_motion_scale": {
              "type": "number"
            },
            "max_motion_scale": {
              "type": "number"
            }
          },
          "required": ["min_motion_scale", "max_motion_scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffModelSettingsSimple": {
      "title": "AnimateDiffModelSettingsSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_pe_stretch",
          "properties": {
            "motion_pe_stretch": {
              "type": "number"
            }
          },
          "required": ["motion_pe_stretch"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffModelSettings": {
      "title": "AnimateDiffModelSettingsAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_strength, attn_strength, other_strength, motion_pe_stretch, cap_initial_pe_length, interpolate_pe_to_length, initial_pe_idx_offset, final_pe_idx_offset",
          "properties": {
            "pe_strength": {
              "type": "number"
            },
            "attn_strength": {
              "type": "number"
            },
            "other_strength": {
              "type": "number"
            },
            "motion_pe_stretch": {
              "type": "number"
            },
            "cap_initial_pe_length": {
              "type": "number"
            },
            "interpolate_pe_to_length": {
              "type": "number"
            },
            "initial_pe_idx_offset": {
              "type": "number"
            },
            "final_pe_idx_offset": {
              "type": "number"
            }
          },
          "required": [
            "pe_strength",
            "attn_strength",
            "other_strength",
            "motion_pe_stretch",
            "cap_initial_pe_length",
            "interpolate_pe_to_length",
            "initial_pe_idx_offset",
            "final_pe_idx_offset"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths": {
      "title": "AnimateDiffModelSettingsAdvancedAttnStrengths",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_strength, attn_strength, attn_q_strength, attn_k_strength, attn_v_strength, attn_out_weight_strength, attn_out_bias_strength, other_strength, motion_pe_stretch, cap_initial_pe_length, interpolate_pe_to_length, initial_pe_idx_offset, final_pe_idx_offset",
          "properties": {
            "pe_strength": {
              "type": "number"
            },
            "attn_strength": {
              "type": "number"
            },
            "attn_q_strength": {
              "type": "number"
            },
            "attn_k_strength": {
              "type": "number"
            },
            "attn_v_strength": {
              "type": "number"
            },
            "attn_out_weight_strength": {
              "type": "number"
            },
            "attn_out_bias_strength": {
              "type": "number"
            },
            "other_strength": {
              "type": "number"
            },
            "motion_pe_stretch": {
              "type": "number"
            },
            "cap_initial_pe_length": {
              "type": "number"
            },
            "interpolate_pe_to_length": {
              "type": "number"
            },
            "initial_pe_idx_offset": {
              "type": "number"
            },
            "final_pe_idx_offset": {
              "type": "number"
            }
          },
          "required": [
            "pe_strength",
            "attn_strength",
            "attn_q_strength",
            "attn_k_strength",
            "attn_v_strength",
            "attn_out_weight_strength",
            "attn_out_bias_strength",
            "other_strength",
            "motion_pe_stretch",
            "cap_initial_pe_length",
            "interpolate_pe_to_length",
            "initial_pe_idx_offset",
            "final_pe_idx_offset"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "INTConstant": {
      "title": "INTConstant",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/constants"
    },
    "FloatConstant": {
      "title": "FloatConstant",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/constants"
    },
    "StringConstant": {
      "title": "StringConstant",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string",
          "properties": {
            "string": {
              "type": "string"
            }
          },
          "required": ["string"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/constants"
    },
    "StringConstantMultiline": {
      "title": "StringConstantMultiline",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, strip_newlines",
          "properties": {
            "string": {
              "type": "string"
            },
            "strip_newlines": {
              "type": "BOOLEAN"
            }
          },
          "required": ["string", "strip_newlines"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/constants"
    },
    "ConditioningMultiCombine": {
      "title": "ConditioningMultiCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: inputcount, conditioning_1, conditioning_2",
          "properties": {
            "inputcount": {
              "type": "number"
            },
            "conditioning_1": {
              "type": "CONDITIONING"
            },
            "conditioning_2": {
              "type": "CONDITIONING"
            }
          },
          "required": ["inputcount", "conditioning_1", "conditioning_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, INT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/conditioning"
    },
    "ConditioningSetMaskAndCombine": {
      "title": "ConditioningSetMaskAndCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_1, negative_1, positive_2, negative_2, mask_1, mask_2, mask_1_strength, mask_2_strength, set_cond_area",
          "properties": {
            "positive_1": {
              "type": "CONDITIONING"
            },
            "negative_1": {
              "type": "CONDITIONING"
            },
            "positive_2": {
              "type": "CONDITIONING"
            },
            "negative_2": {
              "type": "CONDITIONING"
            },
            "mask_1": {
              "type": "MASK"
            },
            "mask_2": {
              "type": "MASK"
            },
            "mask_1_strength": {
              "type": "number"
            },
            "mask_2_strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive_1",
            "negative_1",
            "positive_2",
            "negative_2",
            "mask_1",
            "mask_2",
            "mask_1_strength",
            "mask_2_strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/conditioning"
    },
    "ConditioningSetMaskAndCombine3": {
      "title": "ConditioningSetMaskAndCombine3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_1, negative_1, positive_2, negative_2, positive_3, negative_3, mask_1, mask_2, mask_3, mask_1_strength, mask_2_strength, mask_3_strength, set_cond_area",
          "properties": {
            "positive_1": {
              "type": "CONDITIONING"
            },
            "negative_1": {
              "type": "CONDITIONING"
            },
            "positive_2": {
              "type": "CONDITIONING"
            },
            "negative_2": {
              "type": "CONDITIONING"
            },
            "positive_3": {
              "type": "CONDITIONING"
            },
            "negative_3": {
              "type": "CONDITIONING"
            },
            "mask_1": {
              "type": "MASK"
            },
            "mask_2": {
              "type": "MASK"
            },
            "mask_3": {
              "type": "MASK"
            },
            "mask_1_strength": {
              "type": "number"
            },
            "mask_2_strength": {
              "type": "number"
            },
            "mask_3_strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive_1",
            "negative_1",
            "positive_2",
            "negative_2",
            "positive_3",
            "negative_3",
            "mask_1",
            "mask_2",
            "mask_3",
            "mask_1_strength",
            "mask_2_strength",
            "mask_3_strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/conditioning"
    },
    "ConditioningSetMaskAndCombine4": {
      "title": "ConditioningSetMaskAndCombine4",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_1, negative_1, positive_2, negative_2, positive_3, negative_3, positive_4, negative_4, mask_1, mask_2, mask_3, mask_4, mask_1_strength, mask_2_strength, mask_3_strength, mask_4_strength, set_cond_area",
          "properties": {
            "positive_1": {
              "type": "CONDITIONING"
            },
            "negative_1": {
              "type": "CONDITIONING"
            },
            "positive_2": {
              "type": "CONDITIONING"
            },
            "negative_2": {
              "type": "CONDITIONING"
            },
            "positive_3": {
              "type": "CONDITIONING"
            },
            "negative_3": {
              "type": "CONDITIONING"
            },
            "positive_4": {
              "type": "CONDITIONING"
            },
            "negative_4": {
              "type": "CONDITIONING"
            },
            "mask_1": {
              "type": "MASK"
            },
            "mask_2": {
              "type": "MASK"
            },
            "mask_3": {
              "type": "MASK"
            },
            "mask_4": {
              "type": "MASK"
            },
            "mask_1_strength": {
              "type": "number"
            },
            "mask_2_strength": {
              "type": "number"
            },
            "mask_3_strength": {
              "type": "number"
            },
            "mask_4_strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive_1",
            "negative_1",
            "positive_2",
            "negative_2",
            "positive_3",
            "negative_3",
            "positive_4",
            "negative_4",
            "mask_1",
            "mask_2",
            "mask_3",
            "mask_4",
            "mask_1_strength",
            "mask_2_strength",
            "mask_3_strength",
            "mask_4_strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/conditioning"
    },
    "ConditioningSetMaskAndCombine5": {
      "title": "ConditioningSetMaskAndCombine5",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_1, negative_1, positive_2, negative_2, positive_3, negative_3, positive_4, negative_4, positive_5, negative_5, mask_1, mask_2, mask_3, mask_4, mask_5, mask_1_strength, mask_2_strength, mask_3_strength, mask_4_strength, mask_5_strength, set_cond_area",
          "properties": {
            "positive_1": {
              "type": "CONDITIONING"
            },
            "negative_1": {
              "type": "CONDITIONING"
            },
            "positive_2": {
              "type": "CONDITIONING"
            },
            "negative_2": {
              "type": "CONDITIONING"
            },
            "positive_3": {
              "type": "CONDITIONING"
            },
            "negative_3": {
              "type": "CONDITIONING"
            },
            "positive_4": {
              "type": "CONDITIONING"
            },
            "negative_4": {
              "type": "CONDITIONING"
            },
            "positive_5": {
              "type": "CONDITIONING"
            },
            "negative_5": {
              "type": "CONDITIONING"
            },
            "mask_1": {
              "type": "MASK"
            },
            "mask_2": {
              "type": "MASK"
            },
            "mask_3": {
              "type": "MASK"
            },
            "mask_4": {
              "type": "MASK"
            },
            "mask_5": {
              "type": "MASK"
            },
            "mask_1_strength": {
              "type": "number"
            },
            "mask_2_strength": {
              "type": "number"
            },
            "mask_3_strength": {
              "type": "number"
            },
            "mask_4_strength": {
              "type": "number"
            },
            "mask_5_strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive_1",
            "negative_1",
            "positive_2",
            "negative_2",
            "positive_3",
            "negative_3",
            "positive_4",
            "negative_4",
            "positive_5",
            "negative_5",
            "mask_1",
            "mask_2",
            "mask_3",
            "mask_4",
            "mask_5",
            "mask_1_strength",
            "mask_2_strength",
            "mask_3_strength",
            "mask_4_strength",
            "mask_5_strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/conditioning"
    },
    "CondPassThrough": {
      "title": "CondPassThrough",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            }
          },
          "required": ["positive", "negative"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/misc"
    },
    "BatchCLIPSeg": {
      "title": "BatchCLIPSeg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, text, threshold, binary_mask, combine_mask, use_cuda",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "text": {
              "type": "string"
            },
            "threshold": {
              "type": "number"
            },
            "binary_mask": {
              "type": "BOOLEAN"
            },
            "combine_mask": {
              "type": "BOOLEAN"
            },
            "use_cuda": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "images",
            "text",
            "threshold",
            "binary_mask",
            "combine_mask",
            "use_cuda"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "ColorToMask": {
      "title": "ColorToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, invert, red, green, blue, threshold, per_batch",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "invert": {
              "type": "BOOLEAN"
            },
            "red": {
              "type": "number"
            },
            "green": {
              "type": "number"
            },
            "blue": {
              "type": "number"
            },
            "threshold": {
              "type": "number"
            },
            "per_batch": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "invert",
            "red",
            "green",
            "blue",
            "threshold",
            "per_batch"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "CreateGradientMask": {
      "title": "CreateGradientMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: invert, frames, width, height",
          "properties": {
            "invert": {
              "type": "BOOLEAN"
            },
            "frames": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["invert", "frames", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking/generate"
    },
    "CreateTextMask": {
      "title": "CreateTextMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: invert, frames, text_x, text_y, font_size, font_color, text, font, width, height, start_rotation, end_rotation",
          "properties": {
            "invert": {
              "type": "BOOLEAN"
            },
            "frames": {
              "type": "number"
            },
            "text_x": {
              "type": "number"
            },
            "text_y": {
              "type": "number"
            },
            "font_size": {
              "type": "number"
            },
            "font_color": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "font": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "start_rotation": {
              "type": "number"
            },
            "end_rotation": {
              "type": "number"
            }
          },
          "required": [
            "invert",
            "frames",
            "text_x",
            "text_y",
            "font_size",
            "font_color",
            "text",
            "font",
            "width",
            "height",
            "start_rotation",
            "end_rotation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/text"
    },
    "CreateAudioMask": {
      "title": "CreateAudioMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: invert, frames, scale, audio_path, width, height",
          "properties": {
            "invert": {
              "type": "BOOLEAN"
            },
            "frames": {
              "type": "number"
            },
            "scale": {
              "type": "number"
            },
            "audio_path": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": [
            "invert",
            "frames",
            "scale",
            "audio_path",
            "width",
            "height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/deprecated"
    },
    "CreateFadeMask": {
      "title": "CreateFadeMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: invert, frames, width, height, interpolation, start_level, midpoint_level, end_level, midpoint_frame",
          "properties": {
            "invert": {
              "type": "BOOLEAN"
            },
            "frames": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "start_level": {
              "type": "number"
            },
            "midpoint_level": {
              "type": "number"
            },
            "end_level": {
              "type": "number"
            },
            "midpoint_frame": {
              "type": "number"
            }
          },
          "required": [
            "invert",
            "frames",
            "width",
            "height",
            "interpolation",
            "start_level",
            "midpoint_level",
            "end_level",
            "midpoint_frame"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/deprecated"
    },
    "CreateFadeMaskAdvanced": {
      "title": "CreateFadeMaskAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: points_string, invert, frames, width, height, interpolation",
          "properties": {
            "points_string": {
              "type": "string"
            },
            "invert": {
              "type": "BOOLEAN"
            },
            "frames": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            }
          },
          "required": [
            "points_string",
            "invert",
            "frames",
            "width",
            "height",
            "interpolation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking/generate"
    },
    "CreateFluidMask": {
      "title": "CreateFluidMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: invert, frames, width, height, inflow_count, inflow_velocity, inflow_radius, inflow_padding, inflow_duration",
          "properties": {
            "invert": {
              "type": "BOOLEAN"
            },
            "frames": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "inflow_count": {
              "type": "number"
            },
            "inflow_velocity": {
              "type": "number"
            },
            "inflow_radius": {
              "type": "number"
            },
            "inflow_padding": {
              "type": "number"
            },
            "inflow_duration": {
              "type": "number"
            }
          },
          "required": [
            "invert",
            "frames",
            "width",
            "height",
            "inflow_count",
            "inflow_velocity",
            "inflow_radius",
            "inflow_padding",
            "inflow_duration"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/generate"
    },
    "CreateShapeMask": {
      "title": "CreateShapeMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: shape, frames, location_x, location_y, grow, frame_width, frame_height, shape_width, shape_height",
          "properties": {
            "shape": {
              "type": "string"
            },
            "frames": {
              "type": "number"
            },
            "location_x": {
              "type": "number"
            },
            "location_y": {
              "type": "number"
            },
            "grow": {
              "type": "number"
            },
            "frame_width": {
              "type": "number"
            },
            "frame_height": {
              "type": "number"
            },
            "shape_width": {
              "type": "number"
            },
            "shape_height": {
              "type": "number"
            }
          },
          "required": [
            "shape",
            "frames",
            "location_x",
            "location_y",
            "grow",
            "frame_width",
            "frame_height",
            "shape_width",
            "shape_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/generate"
    },
    "CreateVoronoiMask": {
      "title": "CreateVoronoiMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: frames, num_points, line_width, speed, frame_width, frame_height",
          "properties": {
            "frames": {
              "type": "number"
            },
            "num_points": {
              "type": "number"
            },
            "line_width": {
              "type": "number"
            },
            "speed": {
              "type": "number"
            },
            "frame_width": {
              "type": "number"
            },
            "frame_height": {
              "type": "number"
            }
          },
          "required": [
            "frames",
            "num_points",
            "line_width",
            "speed",
            "frame_width",
            "frame_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/generate"
    },
    "CreateMagicMask": {
      "title": "CreateMagicMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: frames, depth, distortion, seed, transitions, frame_width, frame_height",
          "properties": {
            "frames": {
              "type": "number"
            },
            "depth": {
              "type": "number"
            },
            "distortion": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            },
            "transitions": {
              "type": "number"
            },
            "frame_width": {
              "type": "number"
            },
            "frame_height": {
              "type": "number"
            }
          },
          "required": [
            "frames",
            "depth",
            "distortion",
            "seed",
            "transitions",
            "frame_width",
            "frame_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/generate"
    },
    "GetMaskSizeAndCount": {
      "title": "GetMaskSizeAndCount",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, INT, INT, INT",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "KJNodes/masking"
    },
    "GrowMaskWithBlur": {
      "title": "GrowMaskWithBlur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, expand, incremental_expandrate, tapered_corners, flip_input, blur_radius, lerp_alpha, decay_factor",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "expand": {
              "type": "number"
            },
            "incremental_expandrate": {
              "type": "number"
            },
            "tapered_corners": {
              "type": "BOOLEAN"
            },
            "flip_input": {
              "type": "BOOLEAN"
            },
            "blur_radius": {
              "type": "number"
            },
            "lerp_alpha": {
              "type": "number"
            },
            "decay_factor": {
              "type": "number"
            }
          },
          "required": [
            "mask",
            "expand",
            "incremental_expandrate",
            "tapered_corners",
            "flip_input",
            "blur_radius",
            "lerp_alpha",
            "decay_factor"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking"
    },
    "MaskBatchMulti": {
      "title": "MaskBatchMulti",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: inputcount, mask_1, mask_2",
          "properties": {
            "inputcount": {
              "type": "number"
            },
            "mask_1": {
              "type": "MASK"
            },
            "mask_2": {
              "type": "MASK"
            }
          },
          "required": ["inputcount", "mask_1", "mask_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "OffsetMask": {
      "title": "OffsetMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, x, y, angle, duplication_factor, roll, incremental, padding_mode",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "angle": {
              "type": "number"
            },
            "duplication_factor": {
              "type": "number"
            },
            "roll": {
              "type": "BOOLEAN"
            },
            "incremental": {
              "type": "BOOLEAN"
            },
            "padding_mode": {
              "type": "string"
            }
          },
          "required": [
            "mask",
            "x",
            "y",
            "angle",
            "duplication_factor",
            "roll",
            "incremental",
            "padding_mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "RemapMaskRange": {
      "title": "RemapMaskRange",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, min, max",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            }
          },
          "required": ["mask", "min", "max"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "ResizeMask": {
      "title": "ResizeMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, width, height, keep_proportions",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "keep_proportions": {
              "type": "BOOLEAN"
            }
          },
          "required": ["mask", "width", "height", "keep_proportions"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, INT, INT",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "KJNodes/masking"
    },
    "RoundMask": {
      "title": "RoundMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "AddLabel": {
      "title": "AddLabel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, text_x, text_y, height, font_size, font_color, label_color, font, text, direction",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "text_x": {
              "type": "number"
            },
            "text_y": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "font_size": {
              "type": "number"
            },
            "font_color": {
              "type": "string"
            },
            "label_color": {
              "type": "string"
            },
            "font": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "direction": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "text_x",
            "text_y",
            "height",
            "font_size",
            "font_color",
            "label_color",
            "font",
            "text",
            "direction"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/text"
    },
    "ColorMatch": {
      "title": "ColorMatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_ref, image_target, method",
          "properties": {
            "image_ref": {
              "type": "IMAGE"
            },
            "image_target": {
              "type": "IMAGE"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["image_ref", "image_target", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "CrossFadeImages": {
      "title": "CrossFadeImages",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images_1, images_2, interpolation, transition_start_index, transitioning_frames, start_level, end_level",
          "properties": {
            "images_1": {
              "type": "IMAGE"
            },
            "images_2": {
              "type": "IMAGE"
            },
            "interpolation": {
              "type": "string"
            },
            "transition_start_index": {
              "type": "number"
            },
            "transitioning_frames": {
              "type": "number"
            },
            "start_level": {
              "type": "number"
            },
            "end_level": {
              "type": "number"
            }
          },
          "required": [
            "images_1",
            "images_2",
            "interpolation",
            "transition_start_index",
            "transitioning_frames",
            "start_level",
            "end_level"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "GetImageRangeFromBatch": {
      "title": "GetImageRangeFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, start_index, num_frames",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "start_index": {
              "type": "number"
            },
            "num_frames": {
              "type": "number"
            }
          },
          "required": ["images", "start_index", "num_frames"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "GetImageSizeAndCount": {
      "title": "GetImageSizeAndCount",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "KJNodes/masking"
    },
    "ImageAndMaskPreview": {
      "title": "ImageAndMaskPreview",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask_opacity, mask_color, pass_through",
          "properties": {
            "mask_opacity": {
              "type": "number"
            },
            "mask_color": {
              "type": "string"
            },
            "pass_through": {
              "type": "BOOLEAN"
            }
          },
          "required": ["mask_opacity", "mask_color", "pass_through"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes"
    },
    "ImageBatchMulti": {
      "title": "ImageBatchMulti",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: inputcount, image_1, image_2",
          "properties": {
            "inputcount": {
              "type": "number"
            },
            "image_1": {
              "type": "IMAGE"
            },
            "image_2": {
              "type": "IMAGE"
            }
          },
          "required": ["inputcount", "image_1", "image_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ImageBatchRepeatInterleaving": {
      "title": "ImageBatchRepeatInterleaving",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, repeats",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "repeats": {
              "type": "number"
            }
          },
          "required": ["images", "repeats"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ImageBatchTestPattern": {
      "title": "ImageBatchTestPattern",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_size, start_from, text_x, text_y, width, height, font, font_size",
          "properties": {
            "batch_size": {
              "type": "number"
            },
            "start_from": {
              "type": "number"
            },
            "text_x": {
              "type": "number"
            },
            "text_y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "font": {
              "type": "string"
            },
            "font_size": {
              "type": "number"
            }
          },
          "required": [
            "batch_size",
            "start_from",
            "text_x",
            "text_y",
            "width",
            "height",
            "font",
            "font_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/text"
    },
    "ImageConcanate": {
      "title": "ImageConcanate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, direction, match_image_size",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "direction": {
              "type": "string"
            },
            "match_image_size": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image1", "image2", "direction", "match_image_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ImageGrabPIL": {
      "title": "ImageGrabPIL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: x, y, width, height, num_frames, delay",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "num_frames": {
              "type": "number"
            },
            "delay": {
              "type": "number"
            }
          },
          "required": ["x", "y", "width", "height", "num_frames", "delay"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/experimental"
    },
    "ImageGridComposite2x2": {
      "title": "ImageGridComposite2x2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, image3, image4",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "image3": {
              "type": "IMAGE"
            },
            "image4": {
              "type": "IMAGE"
            }
          },
          "required": ["image1", "image2", "image3", "image4"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ImageGridComposite3x3": {
      "title": "ImageGridComposite3x3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, image3, image4, image5, image6, image7, image8, image9",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "image3": {
              "type": "IMAGE"
            },
            "image4": {
              "type": "IMAGE"
            },
            "image5": {
              "type": "IMAGE"
            },
            "image6": {
              "type": "IMAGE"
            },
            "image7": {
              "type": "IMAGE"
            },
            "image8": {
              "type": "IMAGE"
            },
            "image9": {
              "type": "IMAGE"
            }
          },
          "required": [
            "image1",
            "image2",
            "image3",
            "image4",
            "image5",
            "image6",
            "image7",
            "image8",
            "image9"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ImageNormalize_Neg1_To_1": {
      "title": "ImageNormalize_Neg1_To_1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ImagePass": {
      "title": "ImagePass",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ImagePadForOutpaintMasked": {
      "title": "ImagePadForOutpaintMasked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, left, top, right, bottom, feathering",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "left": {
              "type": "number"
            },
            "top": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            },
            "feathering": {
              "type": "number"
            }
          },
          "required": ["image", "left", "top", "right", "bottom", "feathering"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "image"
    },
    "ImageUpscaleWithModelBatched": {
      "title": "ImageUpscaleWithModelBatched",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_model, images, per_batch",
          "properties": {
            "upscale_model": {
              "type": "UPSCALE_MODEL"
            },
            "images": {
              "type": "IMAGE"
            },
            "per_batch": {
              "type": "number"
            }
          },
          "required": ["upscale_model", "images", "per_batch"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "InsertImagesToBatchIndexed": {
      "title": "InsertImagesToBatchIndexed",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: original_images, images_to_insert, indexes",
          "properties": {
            "original_images": {
              "type": "IMAGE"
            },
            "images_to_insert": {
              "type": "IMAGE"
            },
            "indexes": {
              "type": "string"
            }
          },
          "required": ["original_images", "images_to_insert", "indexes"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "MergeImageChannels": {
      "title": "MergeImageChannels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: red, green, blue",
          "properties": {
            "red": {
              "type": "IMAGE"
            },
            "green": {
              "type": "IMAGE"
            },
            "blue": {
              "type": "IMAGE"
            }
          },
          "required": ["red", "green", "blue"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "RemapImageRange": {
      "title": "RemapImageRange",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, min, max, clamp",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            },
            "clamp": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "min", "max", "clamp"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ReverseImageBatch": {
      "title": "ReverseImageBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "ReplaceImagesInBatch": {
      "title": "ReplaceImagesInBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: original_images, replacement_images, start_index",
          "properties": {
            "original_images": {
              "type": "IMAGE"
            },
            "replacement_images": {
              "type": "IMAGE"
            },
            "start_index": {
              "type": "number"
            }
          },
          "required": ["original_images", "replacement_images", "start_index"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "SaveImageWithAlpha": {
      "title": "SaveImageWithAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, mask, filename_prefix",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["images", "mask", "filename_prefix"]
        }
      },
      "$category": "KJNodes/image"
    },
    "SplitImageChannels": {
      "title": "SplitImageChannels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "KJNodes/image"
    },
    "BatchCropFromMask": {
      "title": "BatchCropFromMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: original_images, masks, crop_size_mult, bbox_smooth_alpha",
          "properties": {
            "original_images": {
              "type": "IMAGE"
            },
            "masks": {
              "type": "MASK"
            },
            "crop_size_mult": {
              "type": "number"
            },
            "bbox_smooth_alpha": {
              "type": "number"
            }
          },
          "required": [
            "original_images",
            "masks",
            "crop_size_mult",
            "bbox_smooth_alpha"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, BBOX, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "BBOX"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "KJNodes/masking"
    },
    "BatchCropFromMaskAdvanced": {
      "title": "BatchCropFromMaskAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: original_images, masks, crop_size_mult, bbox_smooth_alpha",
          "properties": {
            "original_images": {
              "type": "IMAGE"
            },
            "masks": {
              "type": "MASK"
            },
            "crop_size_mult": {
              "type": "number"
            },
            "bbox_smooth_alpha": {
              "type": "number"
            }
          },
          "required": [
            "original_images",
            "masks",
            "crop_size_mult",
            "bbox_smooth_alpha"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, MASK, IMAGE, MASK, BBOX, BBOX, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BBOX"
            },
            {
              "type": "BBOX"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 9,
          "minItems": 9
        }
      },
      "$category": "KJNodes/masking"
    },
    "FilterZeroMasksAndCorrespondingImages": {
      "title": "FilterZeroMasksAndCorrespondingImages",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks",
          "properties": {
            "masks": {
              "type": "MASK"
            }
          },
          "required": ["masks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE, IMAGE, INDEXES",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "INDEXES"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "KJNodes/masking"
    },
    "InsertImageBatchByIndexes": {
      "title": "InsertImageBatchByIndexes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, images_to_insert, insert_indexes",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "images_to_insert": {
              "type": "IMAGE"
            },
            "insert_indexes": {
              "type": "INDEXES"
            }
          },
          "required": ["images", "images_to_insert", "insert_indexes"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/image"
    },
    "BatchUncrop": {
      "title": "BatchUncrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: original_images, cropped_images, bboxes, border_blending, crop_rescale, border_top, border_bottom, border_left, border_right",
          "properties": {
            "original_images": {
              "type": "IMAGE"
            },
            "cropped_images": {
              "type": "IMAGE"
            },
            "bboxes": {
              "type": "BBOX"
            },
            "border_blending": {
              "type": "number"
            },
            "crop_rescale": {
              "type": "number"
            },
            "border_top": {
              "type": "BOOLEAN"
            },
            "border_bottom": {
              "type": "BOOLEAN"
            },
            "border_left": {
              "type": "BOOLEAN"
            },
            "border_right": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "original_images",
            "cropped_images",
            "bboxes",
            "border_blending",
            "crop_rescale",
            "border_top",
            "border_bottom",
            "border_left",
            "border_right"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "BatchUncropAdvanced": {
      "title": "BatchUncropAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: original_images, cropped_images, cropped_masks, combined_crop_mask, bboxes, border_blending, crop_rescale, use_combined_mask, use_square_mask",
          "properties": {
            "original_images": {
              "type": "IMAGE"
            },
            "cropped_images": {
              "type": "IMAGE"
            },
            "cropped_masks": {
              "type": "MASK"
            },
            "combined_crop_mask": {
              "type": "MASK"
            },
            "bboxes": {
              "type": "BBOX"
            },
            "border_blending": {
              "type": "number"
            },
            "crop_rescale": {
              "type": "number"
            },
            "use_combined_mask": {
              "type": "BOOLEAN"
            },
            "use_square_mask": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "original_images",
            "cropped_images",
            "cropped_masks",
            "combined_crop_mask",
            "bboxes",
            "border_blending",
            "crop_rescale",
            "use_combined_mask",
            "use_square_mask"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "SplitBboxes": {
      "title": "SplitBboxes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: bboxes, index",
          "properties": {
            "bboxes": {
              "type": "BBOX"
            },
            "index": {
              "type": "number"
            }
          },
          "required": ["bboxes", "index"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOX, BBOX",
          "items": [
            {
              "type": "BBOX"
            },
            {
              "type": "BBOX"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking"
    },
    "BboxToInt": {
      "title": "BboxToInt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: bboxes, index",
          "properties": {
            "bboxes": {
              "type": "BBOX"
            },
            "index": {
              "type": "number"
            }
          },
          "required": ["bboxes", "index"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, INT, INT, INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "KJNodes/masking"
    },
    "BboxVisualize": {
      "title": "BboxVisualize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, bboxes, line_width",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "bboxes": {
              "type": "BBOX"
            },
            "line_width": {
              "type": "number"
            }
          },
          "required": ["images", "bboxes", "line_width"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking"
    },
    "GenerateNoise": {
      "title": "GenerateNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size, seed, multiplier, constant_batch_noise, normalize",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            },
            "multiplier": {
              "type": "number"
            },
            "constant_batch_noise": {
              "type": "BOOLEAN"
            },
            "normalize": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "width",
            "height",
            "batch_size",
            "seed",
            "multiplier",
            "constant_batch_noise",
            "normalize"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/noise"
    },
    "FlipSigmasAdjusted": {
      "title": "FlipSigmasAdjusted",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, divide_by_last_sigma, divide_by, offset_by",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "divide_by_last_sigma": {
              "type": "BOOLEAN"
            },
            "divide_by": {
              "type": "number"
            },
            "offset_by": {
              "type": "number"
            }
          },
          "required": [
            "sigmas",
            "divide_by_last_sigma",
            "divide_by",
            "offset_by"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS, STRING",
          "items": [
            {
              "type": "SIGMAS"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/noise"
    },
    "InjectNoiseToLatent": {
      "title": "InjectNoiseToLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latents, strength, noise, normalize, average",
          "properties": {
            "latents": {
              "type": "LATENT"
            },
            "strength": {
              "type": "number"
            },
            "noise": {
              "type": "LATENT"
            },
            "normalize": {
              "type": "BOOLEAN"
            },
            "average": {
              "type": "BOOLEAN"
            }
          },
          "required": ["latents", "strength", "noise", "normalize", "average"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/noise"
    },
    "CustomSigmas": {
      "title": "CustomSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas_string, interpolate_to_steps",
          "properties": {
            "sigmas_string": {
              "type": "string"
            },
            "interpolate_to_steps": {
              "type": "number"
            }
          },
          "required": ["sigmas_string", "interpolate_to_steps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/noise"
    },
    "WidgetToString": {
      "title": "WidgetToString",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: id, widget_name, return_all",
          "properties": {
            "id": {
              "type": "number"
            },
            "widget_name": {
              "type": "string"
            },
            "return_all": {
              "type": "BOOLEAN"
            }
          },
          "required": ["id", "widget_name", "return_all"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/text"
    },
    "DummyLatentOut": {
      "title": "DummyLatentOut",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent",
          "properties": {
            "latent": {
              "type": "LATENT"
            }
          },
          "required": ["latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/misc"
    },
    "GetLatentsFromBatchIndexed": {
      "title": "GetLatentsFromBatchIndexed",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latents, indexes",
          "properties": {
            "latents": {
              "type": "LATENT"
            },
            "indexes": {
              "type": "string"
            }
          },
          "required": ["latents", "indexes"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes"
    },
    "ScaleBatchPromptSchedule": {
      "title": "ScaleBatchPromptSchedule",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_str, old_frame_count, new_frame_count",
          "properties": {
            "input_str": {
              "type": "string"
            },
            "old_frame_count": {
              "type": "number"
            },
            "new_frame_count": {
              "type": "number"
            }
          },
          "required": ["input_str", "old_frame_count", "new_frame_count"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes"
    },
    "CameraPoseVisualizer": {
      "title": "CameraPoseVisualizer",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pose_file_path, base_xval, zval, scale, use_exact_fx, relative_c2w, use_viewer",
          "properties": {
            "pose_file_path": {
              "type": "string"
            },
            "base_xval": {
              "type": "number"
            },
            "zval": {
              "type": "number"
            },
            "scale": {
              "type": "number"
            },
            "use_exact_fx": {
              "type": "BOOLEAN"
            },
            "relative_c2w": {
              "type": "BOOLEAN"
            },
            "use_viewer": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "pose_file_path",
            "base_xval",
            "zval",
            "scale",
            "use_exact_fx",
            "relative_c2w",
            "use_viewer"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/misc"
    },
    "JoinStrings": {
      "title": "JoinStrings",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string1, string2, delimiter",
          "properties": {
            "string1": {
              "type": "string"
            },
            "string2": {
              "type": "string"
            },
            "delimiter": {
              "type": "string"
            }
          },
          "required": ["string1", "string2", "delimiter"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/constants"
    },
    "JoinStringMulti": {
      "title": "JoinStringMulti",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: inputcount, string_1, string_2, delimiter, return_list",
          "properties": {
            "inputcount": {
              "type": "number"
            },
            "string_1": {
              "type": "string"
            },
            "string_2": {
              "type": "string"
            },
            "delimiter": {
              "type": "string"
            },
            "return_list": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "inputcount",
            "string_1",
            "string_2",
            "delimiter",
            "return_list"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes"
    },
    "Sleep": {
      "title": "Sleep",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input, minutes, seconds",
          "properties": {
            "input": {
              "type": "string"
            },
            "minutes": {
              "type": "number"
            },
            "seconds": {
              "type": "number"
            }
          },
          "required": ["input", "minutes", "seconds"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: *",
          "items": [
            {
              "type": "*"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/misc"
    },
    "VRAM_Debug": {
      "title": "VRAM_Debug",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: empty_cache, gc_collect, unload_all_models",
          "properties": {
            "empty_cache": {
              "type": "BOOLEAN"
            },
            "gc_collect": {
              "type": "BOOLEAN"
            },
            "unload_all_models": {
              "type": "BOOLEAN"
            }
          },
          "required": ["empty_cache", "gc_collect", "unload_all_models"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: *, IMAGE, MODEL, INT, INT",
          "items": [
            {
              "type": "*"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MODEL"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "KJNodes/misc"
    },
    "SomethingToString": {
      "title": "SomethingToString",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input",
          "properties": {
            "input": {
              "type": "string"
            }
          },
          "required": ["input"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/text"
    },
    "EmptyLatentImagePresets": {
      "title": "EmptyLatentImagePresets",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: dimensions, invert, batch_size",
          "properties": {
            "dimensions": {
              "type": "string"
            },
            "invert": {
              "type": "BOOLEAN"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["dimensions", "invert", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, INT, INT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "KJNodes"
    },
    "NormalizedAmplitudeToMask": {
      "title": "NormalizedAmplitudeToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: normalized_amp, width, height, frame_offset, location_x, location_y, size, shape, color",
          "properties": {
            "normalized_amp": {
              "type": "NORMALIZED_AMPLITUDE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "frame_offset": {
              "type": "number"
            },
            "location_x": {
              "type": "number"
            },
            "location_y": {
              "type": "number"
            },
            "size": {
              "type": "number"
            },
            "shape": {
              "type": "string"
            },
            "color": {
              "type": "string"
            }
          },
          "required": [
            "normalized_amp",
            "width",
            "height",
            "frame_offset",
            "location_x",
            "location_y",
            "size",
            "shape",
            "color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/audio"
    },
    "NormalizedAmplitudeToFloatList": {
      "title": "NormalizedAmplitudeToFloatList",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: normalized_amp",
          "properties": {
            "normalized_amp": {
              "type": "NORMALIZED_AMPLITUDE"
            }
          },
          "required": ["normalized_amp"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/audio"
    },
    "OffsetMaskByNormalizedAmplitude": {
      "title": "OffsetMaskByNormalizedAmplitude",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: normalized_amp, mask, x, y, rotate, angle_multiplier",
          "properties": {
            "normalized_amp": {
              "type": "NORMALIZED_AMPLITUDE"
            },
            "mask": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "rotate": {
              "type": "BOOLEAN"
            },
            "angle_multiplier": {
              "type": "number"
            }
          },
          "required": [
            "normalized_amp",
            "mask",
            "x",
            "y",
            "rotate",
            "angle_multiplier"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/audio"
    },
    "ImageTransformByNormalizedAmplitude": {
      "title": "ImageTransformByNormalizedAmplitude",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: normalized_amp, zoom_scale, x_offset, y_offset, cumulative, image",
          "properties": {
            "normalized_amp": {
              "type": "NORMALIZED_AMPLITUDE"
            },
            "zoom_scale": {
              "type": "number"
            },
            "x_offset": {
              "type": "number"
            },
            "y_offset": {
              "type": "number"
            },
            "cumulative": {
              "type": "BOOLEAN"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": [
            "normalized_amp",
            "zoom_scale",
            "x_offset",
            "y_offset",
            "cumulative",
            "image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/audio"
    },
    "SplineEditor": {
      "title": "SplineEditor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: points_store, coordinates, mask_width, mask_height, points_to_sample, sampling_method, interpolation, tension, repeat_output, float_output_type",
          "properties": {
            "points_store": {
              "type": "string"
            },
            "coordinates": {
              "type": "string"
            },
            "mask_width": {
              "type": "number"
            },
            "mask_height": {
              "type": "number"
            },
            "points_to_sample": {
              "type": "number"
            },
            "sampling_method": {
              "type": "string"
            },
            "interpolation": {
              "type": "string"
            },
            "tension": {
              "type": "number"
            },
            "repeat_output": {
              "type": "number"
            },
            "float_output_type": {
              "type": "string"
            }
          },
          "required": [
            "points_store",
            "coordinates",
            "mask_width",
            "mask_height",
            "points_to_sample",
            "sampling_method",
            "interpolation",
            "tension",
            "repeat_output",
            "float_output_type"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, STRING, FLOAT, INT",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "STRING"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "KJNodes/weights"
    },
    "CreateShapeMaskOnPath": {
      "title": "CreateShapeMaskOnPath",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: shape, coordinates, frame_width, frame_height, shape_width, shape_height",
          "properties": {
            "shape": {
              "type": "string"
            },
            "coordinates": {
              "type": "string"
            },
            "frame_width": {
              "type": "number"
            },
            "frame_height": {
              "type": "number"
            },
            "shape_width": {
              "type": "number"
            },
            "shape_height": {
              "type": "number"
            }
          },
          "required": [
            "shape",
            "coordinates",
            "frame_width",
            "frame_height",
            "shape_width",
            "shape_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/masking/generate"
    },
    "WeightScheduleExtend": {
      "title": "WeightScheduleExtend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_values_1, input_values_2, output_type",
          "properties": {
            "input_values_1": {
              "type": "number"
            },
            "input_values_2": {
              "type": "number"
            },
            "output_type": {
              "type": "string"
            }
          },
          "required": ["input_values_1", "input_values_2", "output_type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/weights"
    },
    "MaskOrImageToWeight": {
      "title": "MaskOrImageToWeight",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: output_type",
          "properties": {
            "output_type": {
              "type": "string"
            }
          },
          "required": ["output_type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, STRING",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/weights"
    },
    "WeightScheduleConvert": {
      "title": "WeightScheduleConvert",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_values, output_type, invert, repeat",
          "properties": {
            "input_values": {
              "type": "number"
            },
            "output_type": {
              "type": "string"
            },
            "invert": {
              "type": "BOOLEAN"
            },
            "repeat": {
              "type": "number"
            }
          },
          "required": ["input_values", "output_type", "invert", "repeat"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, STRING, INT",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "KJNodes/weights"
    },
    "FloatToMask": {
      "title": "FloatToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_values, width, height",
          "properties": {
            "input_values": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["input_values", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/masking/generate"
    },
    "FloatToSigmas": {
      "title": "FloatToSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float_list",
          "properties": {
            "float_list": {
              "type": "number"
            }
          },
          "required": ["float_list"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/noise"
    },
    "PlotCoordinates": {
      "title": "PlotCoordinates",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: coordinates, text, width, height, bbox_width, bbox_height",
          "properties": {
            "coordinates": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "bbox_width": {
              "type": "number"
            },
            "bbox_height": {
              "type": "number"
            }
          },
          "required": [
            "coordinates",
            "text",
            "width",
            "height",
            "bbox_width",
            "bbox_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "KJNodes/experimental"
    },
    "InterpolateCoords": {
      "title": "InterpolateCoords",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: coordinates, interpolation_curve",
          "properties": {
            "coordinates": {
              "type": "string"
            },
            "interpolation_curve": {
              "type": "number"
            }
          },
          "required": ["coordinates", "interpolation_curve"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/experimental"
    },
    "StabilityAPI_SD3": {
      "title": "StabilityAPI_SD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: prompt, n_prompt, seed, model, aspect_ratio, output_format",
          "properties": {
            "prompt": {
              "type": "string"
            },
            "n_prompt": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            },
            "model": {
              "type": "string"
            },
            "aspect_ratio": {
              "type": "string"
            },
            "output_format": {
              "type": "string"
            }
          },
          "required": [
            "prompt",
            "n_prompt",
            "seed",
            "model",
            "aspect_ratio",
            "output_format"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/experimental"
    },
    "SoundReactive": {
      "title": "SoundReactive",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sound_level, start_range_hz, end_range_hz, multiplier, smoothing_factor, normalize",
          "properties": {
            "sound_level": {
              "type": "number"
            },
            "start_range_hz": {
              "type": "number"
            },
            "end_range_hz": {
              "type": "number"
            },
            "multiplier": {
              "type": "number"
            },
            "smoothing_factor": {
              "type": "number"
            },
            "normalize": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "sound_level",
            "start_range_hz",
            "end_range_hz",
            "multiplier",
            "smoothing_factor",
            "normalize"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, INT",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/audio"
    },
    "StableZero123_BatchSchedule": {
      "title": "StableZero123_BatchSchedule",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, batch_size, interpolation, azimuth_points_string, elevation_points_string",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "azimuth_points_string": {
              "type": "string"
            },
            "elevation_points_string": {
              "type": "string"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "batch_size",
            "interpolation",
            "azimuth_points_string",
            "elevation_points_string"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "KJNodes/experimental"
    },
    "SV3D_BatchSchedule": {
      "title": "SV3D_BatchSchedule",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, batch_size, interpolation, azimuth_points_string, elevation_points_string",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "azimuth_points_string": {
              "type": "string"
            },
            "elevation_points_string": {
              "type": "string"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "batch_size",
            "interpolation",
            "azimuth_points_string",
            "elevation_points_string"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "KJNodes/experimental"
    },
    "LoadResAdapterNormalization": {
      "title": "LoadResAdapterNormalization",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, resadapter_path",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "resadapter_path": {
              "type": "string"
            }
          },
          "required": ["model", "resadapter_path"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/experimental"
    },
    "Superprompt": {
      "title": "Superprompt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: instruction_prompt, prompt, max_new_tokens",
          "properties": {
            "instruction_prompt": {
              "type": "string"
            },
            "prompt": {
              "type": "string"
            },
            "max_new_tokens": {
              "type": "number"
            }
          },
          "required": ["instruction_prompt", "prompt", "max_new_tokens"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/text"
    },
    "GLIGENTextBoxApplyBatchCoords": {
      "title": "GLIGENTextBoxApplyBatchCoords",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, latents, clip, gligen_textbox_model, coordinates, text, width, height",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "latents": {
              "type": "LATENT"
            },
            "clip": {
              "type": "CLIP"
            },
            "gligen_textbox_model": {
              "type": "GLIGEN"
            },
            "coordinates": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": [
            "conditioning_to",
            "latents",
            "clip",
            "gligen_textbox_model",
            "coordinates",
            "text",
            "width",
            "height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, IMAGE",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/experimental"
    },
    "Intrinsic_lora_sampling": {
      "title": "Intrinsic_lora_sampling",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, lora_name, task, text, clip, vae, per_batch",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "lora_name": {
              "type": "string"
            },
            "task": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            },
            "vae": {
              "type": "VAE"
            },
            "per_batch": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "lora_name",
            "task",
            "text",
            "clip",
            "vae",
            "per_batch"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, LATENT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes"
    },
    "CreateInstanceDiffusionTracking": {
      "title": "CreateInstanceDiffusionTracking",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: coordinates, width, height, bbox_width, bbox_height, class_name, class_id, prompt",
          "properties": {
            "coordinates": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "bbox_width": {
              "type": "number"
            },
            "bbox_height": {
              "type": "number"
            },
            "class_name": {
              "type": "string"
            },
            "class_id": {
              "type": "number"
            },
            "prompt": {
              "type": "string"
            }
          },
          "required": [
            "coordinates",
            "width",
            "height",
            "bbox_width",
            "bbox_height",
            "class_name",
            "class_id",
            "prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TRACKING, STRING, INT, INT, INT, INT",
          "items": [
            {
              "type": "TRACKING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "KJNodes/InstanceDiffusion"
    },
    "AppendInstanceDiffusionTracking": {
      "title": "AppendInstanceDiffusionTracking",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: tracking_1, tracking_2",
          "properties": {
            "tracking_1": {
              "type": "TRACKING"
            },
            "tracking_2": {
              "type": "TRACKING"
            }
          },
          "required": ["tracking_1", "tracking_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TRACKING, STRING",
          "items": [
            {
              "type": "TRACKING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "KJNodes/InstanceDiffusion"
    },
    "DrawInstanceDiffusionTracking": {
      "title": "DrawInstanceDiffusionTracking",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, tracking, box_line_width, draw_text, font, font_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "tracking": {
              "type": "TRACKING"
            },
            "box_line_width": {
              "type": "number"
            },
            "draw_text": {
              "type": "BOOLEAN"
            },
            "font": {
              "type": "string"
            },
            "font_size": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "tracking",
            "box_line_width",
            "draw_text",
            "font",
            "font_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "KJNodes/InstanceDiffusion"
    },
    "ETN_LoadImageBase64": {
      "title": "LoadImageBase64",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "string"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "external_tooling"
    },
    "ETN_LoadMaskBase64": {
      "title": "LoadMaskBase64",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "string"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling"
    },
    "ETN_SendImageWebSocket": {
      "title": "SendImageWebSocket",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        }
      },
      "$category": "external_tooling"
    },
    "ETN_CropImage": {
      "title": "CropImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, x, y, width, height",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["image", "x", "y", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling"
    },
    "ETN_ApplyMaskToImage": {
      "title": "ApplyMaskToImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["image", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling"
    },
    "ETN_TileLayout": {
      "title": "TileLayout",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, min_tile_size, padding, blending",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "min_tile_size": {
              "type": "number"
            },
            "padding": {
              "type": "number"
            },
            "blending": {
              "type": "number"
            }
          },
          "required": ["image", "min_tile_size", "padding", "blending"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TILE_LAYOUT",
          "items": [
            {
              "type": "TILE_LAYOUT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/tiles"
    },
    "ETN_ExtractImageTile": {
      "title": "ExtractImageTile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, layout, index",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "layout": {
              "type": "TILE_LAYOUT"
            },
            "index": {
              "type": "number"
            }
          },
          "required": ["image", "layout", "index"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/tiles"
    },
    "ETN_ExtractMaskTile": {
      "title": "ExtractMaskTile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, layout, index",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "layout": {
              "type": "TILE_LAYOUT"
            },
            "index": {
              "type": "number"
            }
          },
          "required": ["mask", "layout", "index"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/tiles"
    },
    "ETN_GenerateTileMask": {
      "title": "GenerateTileMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: layout, index",
          "properties": {
            "layout": {
              "type": "TILE_LAYOUT"
            },
            "index": {
              "type": "number"
            }
          },
          "required": ["layout", "index"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/tiles"
    },
    "ETN_MergeImageTile": {
      "title": "MergeImageTile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, layout, index, tile",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "layout": {
              "type": "TILE_LAYOUT"
            },
            "index": {
              "type": "number"
            },
            "tile": {
              "type": "IMAGE"
            }
          },
          "required": ["image", "layout", "index", "tile"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/tiles"
    },
    "ETN_BackgroundRegion": {
      "title": "BackgroundRegion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: REGIONS",
          "items": [
            {
              "type": "REGIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/regions"
    },
    "ETN_DefineRegion": {
      "title": "DefineRegion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, conditioning",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["mask", "conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: REGIONS",
          "items": [
            {
              "type": "REGIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/regions"
    },
    "ETN_ListRegionMasks": {
      "title": "ListRegionMasks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: regions",
          "properties": {
            "regions": {
              "type": "REGIONS"
            }
          },
          "required": ["regions"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/regions"
    },
    "ETN_AttentionMask": {
      "title": "AttentionMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, regions",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "regions": {
              "type": "REGIONS"
            }
          },
          "required": ["model", "regions"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "external_tooling/regions"
    },
    "Robust Video Matting": {
      "title": "RobustVideoMatting",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: video_frames, backbone, fp16, bg_color, batch_size",
          "properties": {
            "video_frames": {
              "type": "IMAGE"
            },
            "backbone": {
              "type": "string"
            },
            "fp16": {
              "type": "BOOLEAN"
            },
            "bg_color": {
              "type": "string"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "video_frames",
            "backbone",
            "fp16",
            "bg_color",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Video Matting"
    },
    "BRIAAI Matting": {
      "title": "BriaaiRembg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: video_frames, version, fp16, bg_color, batch_size",
          "properties": {
            "video_frames": {
              "type": "IMAGE"
            },
            "version": {
              "type": "string"
            },
            "fp16": {
              "type": "BOOLEAN"
            },
            "bg_color": {
              "type": "string"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "video_frames",
            "version",
            "fp16",
            "bg_color",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Video Matting"
    },
    "AnimeFace_SemSegPreprocessor": {
      "title": "AnimeFace_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "BinaryPreprocessor": {
      "title": "Binary_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "CannyEdgePreprocessor": {
      "title": "Canny_Edge_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "ColorPreprocessor": {
      "title": "Color_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/T2IAdapter-only"
    },
    "DensePosePreprocessor": {
      "title": "DensePose_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "DepthAnythingPreprocessor": {
      "title": "Depth_Anything_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "Zoe_DepthAnythingPreprocessor": {
      "title": "Zoe_Depth_Anything_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "DiffusionEdge_Preprocessor": {
      "title": "DiffusionEdge_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "DSINE-NormalMapPreprocessor": {
      "title": "DSINE_Normal_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "DWPreprocessor": {
      "title": "DWPose_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, POSE_KEYPOINT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "POSE_KEYPOINT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "AnimalPosePreprocessor": {
      "title": "AnimalPose_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, POSE_KEYPOINT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "POSE_KEYPOINT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "HEDPreprocessor": {
      "title": "HED_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "FakeScribblePreprocessor": {
      "title": "Fake_Scribble_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "InpaintPreprocessor": {
      "title": "InpaintPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["image", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/others"
    },
    "LeReS-DepthMapPreprocessor": {
      "title": "LERES_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "LineArtPreprocessor": {
      "title": "LineArt_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "AnimeLineArtPreprocessor": {
      "title": "AnimeLineArt_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "LineartStandardPreprocessor": {
      "title": "Lineart_Standard_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "Manga2Anime_LineArt_Preprocessor": {
      "title": "Manga2Anime_LineArt_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "MediaPipe-FaceMeshPreprocessor": {
      "title": "Media_Pipe_Face_Mesh_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "MeshGraphormer-DepthMapPreprocessor": {
      "title": "Mesh_Graphormer_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "MeshGraphormer+ImpactDetector-DepthMapPreprocessor": {
      "title": "Mesh_Graphormer_With_ImpactDetector_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, bbox_detector",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "bbox_detector": {
              "type": "BBOX_DETECTOR"
            }
          },
          "required": ["image", "bbox_detector"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "MiDaS-NormalMapPreprocessor": {
      "title": "MIDAS_Normal_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "MiDaS-DepthMapPreprocessor": {
      "title": "MIDAS_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "M-LSDPreprocessor": {
      "title": "MLSD_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "BAE-NormalMapPreprocessor": {
      "title": "BAE_Normal_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "OneFormer-COCO-SemSegPreprocessor": {
      "title": "OneFormer_COCO_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "OneFormer-ADE20K-SemSegPreprocessor": {
      "title": "OneFormer_ADE20K_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "OpenposePreprocessor": {
      "title": "OpenPose_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, POSE_KEYPOINT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "POSE_KEYPOINT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "PiDiNetPreprocessor": {
      "title": "PIDINET_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "SavePoseKpsAsJsonFile": {
      "title": "SavePoseKpsAsJsonFile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pose_kps, filename_prefix",
          "properties": {
            "pose_kps": {
              "type": "POSE_KEYPOINT"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["pose_kps", "filename_prefix"]
        }
      },
      "$category": "ControlNet Preprocessors/Pose Keypoint Postprocess"
    },
    "FacialPartColoringFromPoseKps": {
      "title": "FacialPartColoringFromPoseKps",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pose_kps, mode, skin, left_eye, right_eye, nose, upper_lip, inner_mouth, lower_lip",
          "properties": {
            "pose_kps": {
              "type": "POSE_KEYPOINT"
            },
            "mode": {
              "type": "string"
            },
            "skin": {
              "type": "string"
            },
            "left_eye": {
              "type": "string"
            },
            "right_eye": {
              "type": "string"
            },
            "nose": {
              "type": "string"
            },
            "upper_lip": {
              "type": "string"
            },
            "inner_mouth": {
              "type": "string"
            },
            "lower_lip": {
              "type": "string"
            }
          },
          "required": [
            "pose_kps",
            "mode",
            "skin",
            "left_eye",
            "right_eye",
            "nose",
            "upper_lip",
            "inner_mouth",
            "lower_lip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Pose Keypoint Postprocess"
    },
    "ImageLuminanceDetector": {
      "title": "ImageLuminanceDetector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Recolor"
    },
    "ImageIntensityDetector": {
      "title": "ImageIntensityDetector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Recolor"
    },
    "ScribblePreprocessor": {
      "title": "Scribble_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "Scribble_XDoG_Preprocessor": {
      "title": "Scribble_XDoG_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "Scribble_PiDiNet_Preprocessor": {
      "title": "Scribble_PiDiNet_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "SAMPreprocessor": {
      "title": "SAM_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/others"
    },
    "ShufflePreprocessor": {
      "title": "Shuffle_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, resolution, seed",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "resolution": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": ["image", "resolution", "seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/T2IAdapter-only"
    },
    "TEEDPreprocessor": {
      "title": "TEED_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "TilePreprocessor": {
      "title": "Tile_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/others"
    },
    "UniFormer-SemSegPreprocessor": {
      "title": "Uniformer_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "SemSegPreprocessor": {
      "title": "Uniformer_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "Unimatch_OptFlowPreprocessor": {
      "title": "Unimatch_OptFlowPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, ckpt_name, backward_flow, bidirectional_flow",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "ckpt_name": {
              "type": "string"
            },
            "backward_flow": {
              "type": "BOOLEAN"
            },
            "bidirectional_flow": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "ckpt_name",
            "backward_flow",
            "bidirectional_flow"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: OPTICAL_FLOW, IMAGE",
          "items": [
            {
              "type": "OPTICAL_FLOW"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Optical Flow"
    },
    "MaskOptFlow": {
      "title": "MaskOptFlow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: optical_flow, mask",
          "properties": {
            "optical_flow": {
              "type": "OPTICAL_FLOW"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["optical_flow", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: OPTICAL_FLOW, IMAGE",
          "items": [
            {
              "type": "OPTICAL_FLOW"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Optical Flow"
    },
    "Zoe-DepthMapPreprocessor": {
      "title": "Zoe_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "AIO_Preprocessor": {
      "title": "AIO_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "ControlNetPreprocessorSelector": {
      "title": "ControlNetPreprocessorSelector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: preprocessor",
          "properties": {
            "preprocessor": {
              "type": "string"
            }
          },
          "required": ["preprocessor"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ANY",
          "items": [
            {
              "type": "ANY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "PixelPerfectResolution": {
      "title": "PixelPerfectResolution",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: original_image, image_gen_width, image_gen_height, resize_mode",
          "properties": {
            "original_image": {
              "type": "IMAGE"
            },
            "image_gen_width": {
              "type": "number"
            },
            "image_gen_height": {
              "type": "number"
            },
            "resize_mode": {
              "type": "string"
            }
          },
          "required": [
            "original_image",
            "image_gen_width",
            "image_gen_height",
            "resize_mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "ImageGenResolutionFromImage": {
      "title": "ImageGenResolutionFromImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "ImageGenResolutionFromLatent": {
      "title": "ImageGenResolutionFromLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent",
          "properties": {
            "latent": {
              "type": "LATENT"
            }
          },
          "required": ["latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "HintImageEnchance": {
      "title": "HintImageEnchance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: hint_image, image_gen_width, image_gen_height, resize_mode",
          "properties": {
            "hint_image": {
              "type": "IMAGE"
            },
            "image_gen_width": {
              "type": "number"
            },
            "image_gen_height": {
              "type": "number"
            },
            "resize_mode": {
              "type": "string"
            }
          },
          "required": [
            "hint_image",
            "image_gen_width",
            "image_gen_height",
            "resize_mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "GetImageSize+": {
      "title": "GetImageSize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials"
    },
    "ImageResize+": {
      "title": "ImageResize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, interpolation, keep_proportion, condition, multiple_of",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "keep_proportion": {
              "type": "BOOLEAN"
            },
            "condition": {
              "type": "string"
            },
            "multiple_of": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "width",
            "height",
            "interpolation",
            "keep_proportion",
            "condition",
            "multiple_of"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "essentials"
    },
    "ImageCrop+": {
      "title": "ImageCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, position, x_offset, y_offset",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "position": {
              "type": "string"
            },
            "x_offset": {
              "type": "number"
            },
            "y_offset": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "width",
            "height",
            "position",
            "x_offset",
            "y_offset"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "essentials"
    },
    "ImageFlip+": {
      "title": "ImageFlip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, axis",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "axis": {
              "type": "string"
            }
          },
          "required": ["image", "axis"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageDesaturate+": {
      "title": "ImageDesaturate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, factor",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "factor": {
              "type": "number"
            }
          },
          "required": ["image", "factor"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImagePosterize+": {
      "title": "ImagePosterize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["image", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageCASharpening+": {
      "title": "ImageCAS",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, amount",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["image", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageSeamCarving+": {
      "title": "ImageSeamCarving",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, energy, order",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "energy": {
              "type": "string"
            },
            "order": {
              "type": "string"
            }
          },
          "required": ["image", "width", "height", "energy", "order"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageEnhanceDifference+": {
      "title": "ImageEnhanceDifference",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, exponent",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "exponent": {
              "type": "number"
            }
          },
          "required": ["image1", "image2", "exponent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageExpandBatch+": {
      "title": "ImageExpandBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, size, method",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "size": {
              "type": "number"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["image", "size", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageFromBatch+": {
      "title": "ImageFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, start, length",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "start": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["image", "start", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageListToBatch+": {
      "title": "ImageListToBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageCompositeFromMaskBatch+": {
      "title": "ImageCompositeFromMaskBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_from, image_to, mask",
          "properties": {
            "image_from": {
              "type": "IMAGE"
            },
            "image_to": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["image_from", "image_to", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ExtractKeyframes+": {
      "title": "ExtractKeyframes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["image", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials"
    },
    "ImageApplyLUT+": {
      "title": "ImageApplyLUT",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, lut_file, log_colorspace, clip_values, strength",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "lut_file": {
              "type": "string"
            },
            "log_colorspace": {
              "type": "BOOLEAN"
            },
            "clip_values": {
              "type": "BOOLEAN"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "lut_file",
            "log_colorspace",
            "clip_values",
            "strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "PixelOEPixelize+": {
      "title": "PixelOEPixelize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, downscale_mode, target_size, patch_size, thickness, color_matching, upscale",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "downscale_mode": {
              "type": "string"
            },
            "target_size": {
              "type": "number"
            },
            "patch_size": {
              "type": "number"
            },
            "thickness": {
              "type": "number"
            },
            "color_matching": {
              "type": "BOOLEAN"
            },
            "upscale": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "downscale_mode",
            "target_size",
            "patch_size",
            "thickness",
            "color_matching",
            "upscale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskBlur+": {
      "title": "MaskBlur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, amount",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["mask", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskFlip+": {
      "title": "MaskFlip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, axis",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "axis": {
              "type": "string"
            }
          },
          "required": ["mask", "axis"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskPreview+": {
      "title": "MaskPreview",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        }
      },
      "$category": "essentials"
    },
    "MaskBatch+": {
      "title": "MaskBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask1, mask2",
          "properties": {
            "mask1": {
              "type": "MASK"
            },
            "mask2": {
              "type": "MASK"
            }
          },
          "required": ["mask1", "mask2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskExpandBatch+": {
      "title": "MaskExpandBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, size, method",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "size": {
              "type": "number"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["mask", "size", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "TransitionMask+": {
      "title": "TransitionMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, frames, start_frame, end_frame, transition_type, timing_function",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "frames": {
              "type": "number"
            },
            "start_frame": {
              "type": "number"
            },
            "end_frame": {
              "type": "number"
            },
            "transition_type": {
              "type": "string"
            },
            "timing_function": {
              "type": "string"
            }
          },
          "required": [
            "width",
            "height",
            "frames",
            "start_frame",
            "end_frame",
            "transition_type",
            "timing_function"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskFromColor+": {
      "title": "MaskFromColor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, red, green, blue, threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "red": {
              "type": "number"
            },
            "green": {
              "type": "number"
            },
            "blue": {
              "type": "number"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["image", "red", "green", "blue", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskFromBatch+": {
      "title": "MaskFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, start, length",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "start": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["mask", "start", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskBoundingBox+": {
      "title": "MaskBoundingBox",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, padding, blur",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "padding": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": ["mask", "padding", "blur"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE, INT, INT, INT, INT",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "essentials"
    },
    "MaskFromSegmentation+": {
      "title": "MaskFromSegmentation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, segments, remove_isolated_pixels, remove_small_masks, fill_holes",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "segments": {
              "type": "number"
            },
            "remove_isolated_pixels": {
              "type": "number"
            },
            "remove_small_masks": {
              "type": "number"
            },
            "fill_holes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "segments",
            "remove_isolated_pixels",
            "remove_small_masks",
            "fill_holes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskFromRGBCMYBW+": {
      "title": "MaskFromRGBCMYBW",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, threshold_r, threshold_g, threshold_b, remove_isolated_pixels, fill_holes",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "threshold_r": {
              "type": "number"
            },
            "threshold_g": {
              "type": "number"
            },
            "threshold_b": {
              "type": "number"
            },
            "remove_isolated_pixels": {
              "type": "number"
            },
            "fill_holes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "threshold_r",
            "threshold_g",
            "threshold_b",
            "remove_isolated_pixels",
            "fill_holes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK, MASK, MASK, MASK, MASK, MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 8,
          "minItems": 8
        }
      },
      "$category": "essentials"
    },
    "MaskSmooth+": {
      "title": "MaskSmooth",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, amount",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["mask", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "MaskFromList+": {
      "title": "MaskFromList",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: values, width, height",
          "properties": {
            "values": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["values", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "SimpleMath+": {
      "title": "SimpleMath",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials"
    },
    "ConsoleDebug+": {
      "title": "ConsoleDebug",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": ["value"]
        }
      },
      "$category": "essentials"
    },
    "DebugTensorShape+": {
      "title": "DebugTensorShape",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: tensor",
          "properties": {
            "tensor": {
              "type": "string"
            }
          },
          "required": ["tensor"]
        }
      },
      "$category": "essentials"
    },
    "ModelCompile+": {
      "title": "ModelCompile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, fullgraph, dynamic, mode",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "fullgraph": {
              "type": "BOOLEAN"
            },
            "dynamic": {
              "type": "BOOLEAN"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["model", "fullgraph", "dynamic", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "BatchCount+": {
      "title": "BatchCount",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch",
          "properties": {
            "batch": {
              "type": "string"
            }
          },
          "required": ["batch"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "KSamplerVariationsStochastic+": {
      "title": "KSamplerVariationsStochastic",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latent_image, noise_seed, steps, cfg, sampler, scheduler, positive, negative, variation_seed, variation_strength, cfg_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "variation_seed": {
              "type": "INT:seed"
            },
            "variation_strength": {
              "type": "number"
            },
            "cfg_scale": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "latent_image",
            "noise_seed",
            "steps",
            "cfg",
            "sampler",
            "scheduler",
            "positive",
            "negative",
            "variation_seed",
            "variation_strength",
            "cfg_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "KSamplerVariationsWithNoise+": {
      "title": "KSamplerVariationsWithNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latent_image, main_seed, steps, cfg, sampler_name, scheduler, positive, negative, variation_strength, variation_seed, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "main_seed": {
              "type": "INT:seed"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "variation_strength": {
              "type": "number"
            },
            "variation_seed": {
              "type": "INT:seed"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "latent_image",
            "main_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "variation_strength",
            "variation_seed",
            "denoise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "CLIPTextEncodeSDXL+": {
      "title": "CLIPTextEncodeSDXLSimplified",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, size_cond_factor, text, clip",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "size_cond_factor": {
              "type": "number"
            },
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["width", "height", "size_cond_factor", "text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "SDXLEmptyLatentSizePicker+": {
      "title": "SDXLEmptyLatentSizePicker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: resolution, batch_size",
          "properties": {
            "resolution": {
              "type": "string"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["resolution", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, INT, INT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "essentials"
    },
    "DrawText+": {
      "title": "DrawText",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, font, size, color, background_color, shadow_distance, shadow_blur, shadow_color, alignment, width, height",
          "properties": {
            "text": {
              "type": "string"
            },
            "font": {
              "type": "string"
            },
            "size": {
              "type": "number"
            },
            "color": {
              "type": "string"
            },
            "background_color": {
              "type": "string"
            },
            "shadow_distance": {
              "type": "number"
            },
            "shadow_blur": {
              "type": "number"
            },
            "shadow_color": {
              "type": "string"
            },
            "alignment": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": [
            "text",
            "font",
            "size",
            "color",
            "background_color",
            "shadow_distance",
            "shadow_blur",
            "shadow_color",
            "alignment",
            "width",
            "height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials"
    },
    "RemBGSession+": {
      "title": "RemBGSession",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, providers",
          "properties": {
            "model": {
              "type": "string"
            },
            "providers": {
              "type": "string"
            }
          },
          "required": ["model", "providers"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: REMBG_SESSION",
          "items": [
            {
              "type": "REMBG_SESSION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageRemoveBackground+": {
      "title": "ImageRemoveBackground",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: rembg_session, image",
          "properties": {
            "rembg_session": {
              "type": "REMBG_SESSION"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["rembg_session", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials"
    },
    "RemoveLatentMask+": {
      "title": "RemoveLatentMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples",
          "properties": {
            "samples": {
              "type": "LATENT"
            }
          },
          "required": ["samples"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ConditioningCombineMultiple+": {
      "title": "ConditioningCombineMultiple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_1, conditioning_2",
          "properties": {
            "conditioning_1": {
              "type": "CONDITIONING"
            },
            "conditioning_2": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning_1", "conditioning_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "ImageBatchMultiple+": {
      "title": "ImageBatchMultiple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_1, image_2, method",
          "properties": {
            "image_1": {
              "type": "IMAGE"
            },
            "image_2": {
              "type": "IMAGE"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["image_1", "image_2", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials"
    },
    "KSampler (Efficient)": {
      "title": "TSC_KSampler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, denoise, preview_method, vae_decode",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "denoise": {
              "type": "number"
            },
            "preview_method": {
              "type": "string"
            },
            "vae_decode": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "denoise",
            "preview_method",
            "vae_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CONDITIONING, CONDITIONING, LATENT, VAE, IMAGE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "Efficiency Nodes/Sampling"
    },
    "KSampler Adv. (Efficient)": {
      "title": "TSC_KSamplerAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, add_noise, noise_seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, start_at_step, end_at_step, return_with_leftover_noise, preview_method, vae_decode",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "add_noise": {
              "type": "string"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "start_at_step": {
              "type": "number"
            },
            "end_at_step": {
              "type": "number"
            },
            "return_with_leftover_noise": {
              "type": "string"
            },
            "preview_method": {
              "type": "string"
            },
            "vae_decode": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "add_noise",
            "noise_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "start_at_step",
            "end_at_step",
            "return_with_leftover_noise",
            "preview_method",
            "vae_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CONDITIONING, CONDITIONING, LATENT, VAE, IMAGE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "Efficiency Nodes/Sampling"
    },
    "KSampler SDXL (Eff.)": {
      "title": "TSC_KSamplerSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sdxl_tuple, noise_seed, steps, cfg, sampler_name, scheduler, latent_image, start_at_step, refine_at_step, preview_method, vae_decode",
          "properties": {
            "sdxl_tuple": {
              "type": "SDXL_TUPLE"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "start_at_step": {
              "type": "number"
            },
            "refine_at_step": {
              "type": "number"
            },
            "preview_method": {
              "type": "string"
            },
            "vae_decode": {
              "type": "string"
            }
          },
          "required": [
            "sdxl_tuple",
            "noise_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "latent_image",
            "start_at_step",
            "refine_at_step",
            "preview_method",
            "vae_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SDXL_TUPLE, LATENT, VAE, IMAGE",
          "items": [
            {
              "type": "SDXL_TUPLE"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "Efficiency Nodes/Sampling"
    },
    "Efficient Loader": {
      "title": "TSC_EfficientLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name, vae_name, clip_skip, lora_name, lora_model_strength, lora_clip_strength, positive, negative, token_normalization, weight_interpretation, empty_latent_width, empty_latent_height, batch_size",
          "properties": {
            "ckpt_name": {
              "type": "string"
            },
            "vae_name": {
              "type": "string"
            },
            "clip_skip": {
              "type": "number"
            },
            "lora_name": {
              "type": "string"
            },
            "lora_model_strength": {
              "type": "number"
            },
            "lora_clip_strength": {
              "type": "number"
            },
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "token_normalization": {
              "type": "string"
            },
            "weight_interpretation": {
              "type": "string"
            },
            "empty_latent_width": {
              "type": "number"
            },
            "empty_latent_height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "ckpt_name",
            "vae_name",
            "clip_skip",
            "lora_name",
            "lora_model_strength",
            "lora_clip_strength",
            "positive",
            "negative",
            "token_normalization",
            "weight_interpretation",
            "empty_latent_width",
            "empty_latent_height",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CONDITIONING, CONDITIONING, LATENT, VAE, CLIP, DEPENDENCIES",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "DEPENDENCIES"
            }
          ],
          "maxItems": 7,
          "minItems": 7
        }
      },
      "$category": "Efficiency Nodes/Loaders"
    },
    "Eff. Loader SDXL": {
      "title": "TSC_EfficientLoaderSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_ckpt_name, base_clip_skip, refiner_ckpt_name, refiner_clip_skip, positive_ascore, negative_ascore, vae_name, positive, negative, token_normalization, weight_interpretation, empty_latent_width, empty_latent_height, batch_size",
          "properties": {
            "base_ckpt_name": {
              "type": "string"
            },
            "base_clip_skip": {
              "type": "number"
            },
            "refiner_ckpt_name": {
              "type": "string"
            },
            "refiner_clip_skip": {
              "type": "number"
            },
            "positive_ascore": {
              "type": "number"
            },
            "negative_ascore": {
              "type": "number"
            },
            "vae_name": {
              "type": "string"
            },
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "token_normalization": {
              "type": "string"
            },
            "weight_interpretation": {
              "type": "string"
            },
            "empty_latent_width": {
              "type": "number"
            },
            "empty_latent_height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "base_ckpt_name",
            "base_clip_skip",
            "refiner_ckpt_name",
            "refiner_clip_skip",
            "positive_ascore",
            "negative_ascore",
            "vae_name",
            "positive",
            "negative",
            "token_normalization",
            "weight_interpretation",
            "empty_latent_width",
            "empty_latent_height",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SDXL_TUPLE, LATENT, VAE, DEPENDENCIES",
          "items": [
            {
              "type": "SDXL_TUPLE"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "DEPENDENCIES"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "Efficiency Nodes/Loaders"
    },
    "LoRA Stacker": {
      "title": "TSC_LoRA_Stacker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_mode, lora_count, lora_name_1, lora_wt_1, model_str_1, clip_str_1, lora_name_2, lora_wt_2, model_str_2, clip_str_2, lora_name_3, lora_wt_3, model_str_3, clip_str_3, lora_name_4, lora_wt_4, model_str_4, clip_str_4, lora_name_5, lora_wt_5, model_str_5, clip_str_5, lora_name_6, lora_wt_6, model_str_6, clip_str_6, lora_name_7, lora_wt_7, model_str_7, clip_str_7, lora_name_8, lora_wt_8, model_str_8, clip_str_8, lora_name_9, lora_wt_9, model_str_9, clip_str_9, lora_name_10, lora_wt_10, model_str_10, clip_str_10, lora_name_11, lora_wt_11, model_str_11, clip_str_11, lora_name_12, lora_wt_12, model_str_12, clip_str_12, lora_name_13, lora_wt_13, model_str_13, clip_str_13, lora_name_14, lora_wt_14, model_str_14, clip_str_14, lora_name_15, lora_wt_15, model_str_15, clip_str_15, lora_name_16, lora_wt_16, model_str_16, clip_str_16, lora_name_17, lora_wt_17, model_str_17, clip_str_17, lora_name_18, lora_wt_18, model_str_18, clip_str_18, lora_name_19, lora_wt_19, model_str_19, clip_str_19, lora_name_20, lora_wt_20, model_str_20, clip_str_20, lora_name_21, lora_wt_21, model_str_21, clip_str_21, lora_name_22, lora_wt_22, model_str_22, clip_str_22, lora_name_23, lora_wt_23, model_str_23, clip_str_23, lora_name_24, lora_wt_24, model_str_24, clip_str_24, lora_name_25, lora_wt_25, model_str_25, clip_str_25, lora_name_26, lora_wt_26, model_str_26, clip_str_26, lora_name_27, lora_wt_27, model_str_27, clip_str_27, lora_name_28, lora_wt_28, model_str_28, clip_str_28, lora_name_29, lora_wt_29, model_str_29, clip_str_29, lora_name_30, lora_wt_30, model_str_30, clip_str_30, lora_name_31, lora_wt_31, model_str_31, clip_str_31, lora_name_32, lora_wt_32, model_str_32, clip_str_32, lora_name_33, lora_wt_33, model_str_33, clip_str_33, lora_name_34, lora_wt_34, model_str_34, clip_str_34, lora_name_35, lora_wt_35, model_str_35, clip_str_35, lora_name_36, lora_wt_36, model_str_36, clip_str_36, lora_name_37, lora_wt_37, model_str_37, clip_str_37, lora_name_38, lora_wt_38, model_str_38, clip_str_38, lora_name_39, lora_wt_39, model_str_39, clip_str_39, lora_name_40, lora_wt_40, model_str_40, clip_str_40, lora_name_41, lora_wt_41, model_str_41, clip_str_41, lora_name_42, lora_wt_42, model_str_42, clip_str_42, lora_name_43, lora_wt_43, model_str_43, clip_str_43, lora_name_44, lora_wt_44, model_str_44, clip_str_44, lora_name_45, lora_wt_45, model_str_45, clip_str_45, lora_name_46, lora_wt_46, model_str_46, clip_str_46, lora_name_47, lora_wt_47, model_str_47, clip_str_47, lora_name_48, lora_wt_48, model_str_48, clip_str_48, lora_name_49, lora_wt_49, model_str_49, clip_str_49",
          "properties": {
            "input_mode": {
              "type": "string"
            },
            "lora_count": {
              "type": "number"
            },
            "lora_name_1": {
              "type": "string"
            },
            "lora_wt_1": {
              "type": "number"
            },
            "model_str_1": {
              "type": "number"
            },
            "clip_str_1": {
              "type": "number"
            },
            "lora_name_2": {
              "type": "string"
            },
            "lora_wt_2": {
              "type": "number"
            },
            "model_str_2": {
              "type": "number"
            },
            "clip_str_2": {
              "type": "number"
            },
            "lora_name_3": {
              "type": "string"
            },
            "lora_wt_3": {
              "type": "number"
            },
            "model_str_3": {
              "type": "number"
            },
            "clip_str_3": {
              "type": "number"
            },
            "lora_name_4": {
              "type": "string"
            },
            "lora_wt_4": {
              "type": "number"
            },
            "model_str_4": {
              "type": "number"
            },
            "clip_str_4": {
              "type": "number"
            },
            "lora_name_5": {
              "type": "string"
            },
            "lora_wt_5": {
              "type": "number"
            },
            "model_str_5": {
              "type": "number"
            },
            "clip_str_5": {
              "type": "number"
            },
            "lora_name_6": {
              "type": "string"
            },
            "lora_wt_6": {
              "type": "number"
            },
            "model_str_6": {
              "type": "number"
            },
            "clip_str_6": {
              "type": "number"
            },
            "lora_name_7": {
              "type": "string"
            },
            "lora_wt_7": {
              "type": "number"
            },
            "model_str_7": {
              "type": "number"
            },
            "clip_str_7": {
              "type": "number"
            },
            "lora_name_8": {
              "type": "string"
            },
            "lora_wt_8": {
              "type": "number"
            },
            "model_str_8": {
              "type": "number"
            },
            "clip_str_8": {
              "type": "number"
            },
            "lora_name_9": {
              "type": "string"
            },
            "lora_wt_9": {
              "type": "number"
            },
            "model_str_9": {
              "type": "number"
            },
            "clip_str_9": {
              "type": "number"
            },
            "lora_name_10": {
              "type": "string"
            },
            "lora_wt_10": {
              "type": "number"
            },
            "model_str_10": {
              "type": "number"
            },
            "clip_str_10": {
              "type": "number"
            },
            "lora_name_11": {
              "type": "string"
            },
            "lora_wt_11": {
              "type": "number"
            },
            "model_str_11": {
              "type": "number"
            },
            "clip_str_11": {
              "type": "number"
            },
            "lora_name_12": {
              "type": "string"
            },
            "lora_wt_12": {
              "type": "number"
            },
            "model_str_12": {
              "type": "number"
            },
            "clip_str_12": {
              "type": "number"
            },
            "lora_name_13": {
              "type": "string"
            },
            "lora_wt_13": {
              "type": "number"
            },
            "model_str_13": {
              "type": "number"
            },
            "clip_str_13": {
              "type": "number"
            },
            "lora_name_14": {
              "type": "string"
            },
            "lora_wt_14": {
              "type": "number"
            },
            "model_str_14": {
              "type": "number"
            },
            "clip_str_14": {
              "type": "number"
            },
            "lora_name_15": {
              "type": "string"
            },
            "lora_wt_15": {
              "type": "number"
            },
            "model_str_15": {
              "type": "number"
            },
            "clip_str_15": {
              "type": "number"
            },
            "lora_name_16": {
              "type": "string"
            },
            "lora_wt_16": {
              "type": "number"
            },
            "model_str_16": {
              "type": "number"
            },
            "clip_str_16": {
              "type": "number"
            },
            "lora_name_17": {
              "type": "string"
            },
            "lora_wt_17": {
              "type": "number"
            },
            "model_str_17": {
              "type": "number"
            },
            "clip_str_17": {
              "type": "number"
            },
            "lora_name_18": {
              "type": "string"
            },
            "lora_wt_18": {
              "type": "number"
            },
            "model_str_18": {
              "type": "number"
            },
            "clip_str_18": {
              "type": "number"
            },
            "lora_name_19": {
              "type": "string"
            },
            "lora_wt_19": {
              "type": "number"
            },
            "model_str_19": {
              "type": "number"
            },
            "clip_str_19": {
              "type": "number"
            },
            "lora_name_20": {
              "type": "string"
            },
            "lora_wt_20": {
              "type": "number"
            },
            "model_str_20": {
              "type": "number"
            },
            "clip_str_20": {
              "type": "number"
            },
            "lora_name_21": {
              "type": "string"
            },
            "lora_wt_21": {
              "type": "number"
            },
            "model_str_21": {
              "type": "number"
            },
            "clip_str_21": {
              "type": "number"
            },
            "lora_name_22": {
              "type": "string"
            },
            "lora_wt_22": {
              "type": "number"
            },
            "model_str_22": {
              "type": "number"
            },
            "clip_str_22": {
              "type": "number"
            },
            "lora_name_23": {
              "type": "string"
            },
            "lora_wt_23": {
              "type": "number"
            },
            "model_str_23": {
              "type": "number"
            },
            "clip_str_23": {
              "type": "number"
            },
            "lora_name_24": {
              "type": "string"
            },
            "lora_wt_24": {
              "type": "number"
            },
            "model_str_24": {
              "type": "number"
            },
            "clip_str_24": {
              "type": "number"
            },
            "lora_name_25": {
              "type": "string"
            },
            "lora_wt_25": {
              "type": "number"
            },
            "model_str_25": {
              "type": "number"
            },
            "clip_str_25": {
              "type": "number"
            },
            "lora_name_26": {
              "type": "string"
            },
            "lora_wt_26": {
              "type": "number"
            },
            "model_str_26": {
              "type": "number"
            },
            "clip_str_26": {
              "type": "number"
            },
            "lora_name_27": {
              "type": "string"
            },
            "lora_wt_27": {
              "type": "number"
            },
            "model_str_27": {
              "type": "number"
            },
            "clip_str_27": {
              "type": "number"
            },
            "lora_name_28": {
              "type": "string"
            },
            "lora_wt_28": {
              "type": "number"
            },
            "model_str_28": {
              "type": "number"
            },
            "clip_str_28": {
              "type": "number"
            },
            "lora_name_29": {
              "type": "string"
            },
            "lora_wt_29": {
              "type": "number"
            },
            "model_str_29": {
              "type": "number"
            },
            "clip_str_29": {
              "type": "number"
            },
            "lora_name_30": {
              "type": "string"
            },
            "lora_wt_30": {
              "type": "number"
            },
            "model_str_30": {
              "type": "number"
            },
            "clip_str_30": {
              "type": "number"
            },
            "lora_name_31": {
              "type": "string"
            },
            "lora_wt_31": {
              "type": "number"
            },
            "model_str_31": {
              "type": "number"
            },
            "clip_str_31": {
              "type": "number"
            },
            "lora_name_32": {
              "type": "string"
            },
            "lora_wt_32": {
              "type": "number"
            },
            "model_str_32": {
              "type": "number"
            },
            "clip_str_32": {
              "type": "number"
            },
            "lora_name_33": {
              "type": "string"
            },
            "lora_wt_33": {
              "type": "number"
            },
            "model_str_33": {
              "type": "number"
            },
            "clip_str_33": {
              "type": "number"
            },
            "lora_name_34": {
              "type": "string"
            },
            "lora_wt_34": {
              "type": "number"
            },
            "model_str_34": {
              "type": "number"
            },
            "clip_str_34": {
              "type": "number"
            },
            "lora_name_35": {
              "type": "string"
            },
            "lora_wt_35": {
              "type": "number"
            },
            "model_str_35": {
              "type": "number"
            },
            "clip_str_35": {
              "type": "number"
            },
            "lora_name_36": {
              "type": "string"
            },
            "lora_wt_36": {
              "type": "number"
            },
            "model_str_36": {
              "type": "number"
            },
            "clip_str_36": {
              "type": "number"
            },
            "lora_name_37": {
              "type": "string"
            },
            "lora_wt_37": {
              "type": "number"
            },
            "model_str_37": {
              "type": "number"
            },
            "clip_str_37": {
              "type": "number"
            },
            "lora_name_38": {
              "type": "string"
            },
            "lora_wt_38": {
              "type": "number"
            },
            "model_str_38": {
              "type": "number"
            },
            "clip_str_38": {
              "type": "number"
            },
            "lora_name_39": {
              "type": "string"
            },
            "lora_wt_39": {
              "type": "number"
            },
            "model_str_39": {
              "type": "number"
            },
            "clip_str_39": {
              "type": "number"
            },
            "lora_name_40": {
              "type": "string"
            },
            "lora_wt_40": {
              "type": "number"
            },
            "model_str_40": {
              "type": "number"
            },
            "clip_str_40": {
              "type": "number"
            },
            "lora_name_41": {
              "type": "string"
            },
            "lora_wt_41": {
              "type": "number"
            },
            "model_str_41": {
              "type": "number"
            },
            "clip_str_41": {
              "type": "number"
            },
            "lora_name_42": {
              "type": "string"
            },
            "lora_wt_42": {
              "type": "number"
            },
            "model_str_42": {
              "type": "number"
            },
            "clip_str_42": {
              "type": "number"
            },
            "lora_name_43": {
              "type": "string"
            },
            "lora_wt_43": {
              "type": "number"
            },
            "model_str_43": {
              "type": "number"
            },
            "clip_str_43": {
              "type": "number"
            },
            "lora_name_44": {
              "type": "string"
            },
            "lora_wt_44": {
              "type": "number"
            },
            "model_str_44": {
              "type": "number"
            },
            "clip_str_44": {
              "type": "number"
            },
            "lora_name_45": {
              "type": "string"
            },
            "lora_wt_45": {
              "type": "number"
            },
            "model_str_45": {
              "type": "number"
            },
            "clip_str_45": {
              "type": "number"
            },
            "lora_name_46": {
              "type": "string"
            },
            "lora_wt_46": {
              "type": "number"
            },
            "model_str_46": {
              "type": "number"
            },
            "clip_str_46": {
              "type": "number"
            },
            "lora_name_47": {
              "type": "string"
            },
            "lora_wt_47": {
              "type": "number"
            },
            "model_str_47": {
              "type": "number"
            },
            "clip_str_47": {
              "type": "number"
            },
            "lora_name_48": {
              "type": "string"
            },
            "lora_wt_48": {
              "type": "number"
            },
            "model_str_48": {
              "type": "number"
            },
            "clip_str_48": {
              "type": "number"
            },
            "lora_name_49": {
              "type": "string"
            },
            "lora_wt_49": {
              "type": "number"
            },
            "model_str_49": {
              "type": "number"
            },
            "clip_str_49": {
              "type": "number"
            }
          },
          "required": [
            "input_mode",
            "lora_count",
            "lora_name_1",
            "lora_wt_1",
            "model_str_1",
            "clip_str_1",
            "lora_name_2",
            "lora_wt_2",
            "model_str_2",
            "clip_str_2",
            "lora_name_3",
            "lora_wt_3",
            "model_str_3",
            "clip_str_3",
            "lora_name_4",
            "lora_wt_4",
            "model_str_4",
            "clip_str_4",
            "lora_name_5",
            "lora_wt_5",
            "model_str_5",
            "clip_str_5",
            "lora_name_6",
            "lora_wt_6",
            "model_str_6",
            "clip_str_6",
            "lora_name_7",
            "lora_wt_7",
            "model_str_7",
            "clip_str_7",
            "lora_name_8",
            "lora_wt_8",
            "model_str_8",
            "clip_str_8",
            "lora_name_9",
            "lora_wt_9",
            "model_str_9",
            "clip_str_9",
            "lora_name_10",
            "lora_wt_10",
            "model_str_10",
            "clip_str_10",
            "lora_name_11",
            "lora_wt_11",
            "model_str_11",
            "clip_str_11",
            "lora_name_12",
            "lora_wt_12",
            "model_str_12",
            "clip_str_12",
            "lora_name_13",
            "lora_wt_13",
            "model_str_13",
            "clip_str_13",
            "lora_name_14",
            "lora_wt_14",
            "model_str_14",
            "clip_str_14",
            "lora_name_15",
            "lora_wt_15",
            "model_str_15",
            "clip_str_15",
            "lora_name_16",
            "lora_wt_16",
            "model_str_16",
            "clip_str_16",
            "lora_name_17",
            "lora_wt_17",
            "model_str_17",
            "clip_str_17",
            "lora_name_18",
            "lora_wt_18",
            "model_str_18",
            "clip_str_18",
            "lora_name_19",
            "lora_wt_19",
            "model_str_19",
            "clip_str_19",
            "lora_name_20",
            "lora_wt_20",
            "model_str_20",
            "clip_str_20",
            "lora_name_21",
            "lora_wt_21",
            "model_str_21",
            "clip_str_21",
            "lora_name_22",
            "lora_wt_22",
            "model_str_22",
            "clip_str_22",
            "lora_name_23",
            "lora_wt_23",
            "model_str_23",
            "clip_str_23",
            "lora_name_24",
            "lora_wt_24",
            "model_str_24",
            "clip_str_24",
            "lora_name_25",
            "lora_wt_25",
            "model_str_25",
            "clip_str_25",
            "lora_name_26",
            "lora_wt_26",
            "model_str_26",
            "clip_str_26",
            "lora_name_27",
            "lora_wt_27",
            "model_str_27",
            "clip_str_27",
            "lora_name_28",
            "lora_wt_28",
            "model_str_28",
            "clip_str_28",
            "lora_name_29",
            "lora_wt_29",
            "model_str_29",
            "clip_str_29",
            "lora_name_30",
            "lora_wt_30",
            "model_str_30",
            "clip_str_30",
            "lora_name_31",
            "lora_wt_31",
            "model_str_31",
            "clip_str_31",
            "lora_name_32",
            "lora_wt_32",
            "model_str_32",
            "clip_str_32",
            "lora_name_33",
            "lora_wt_33",
            "model_str_33",
            "clip_str_33",
            "lora_name_34",
            "lora_wt_34",
            "model_str_34",
            "clip_str_34",
            "lora_name_35",
            "lora_wt_35",
            "model_str_35",
            "clip_str_35",
            "lora_name_36",
            "lora_wt_36",
            "model_str_36",
            "clip_str_36",
            "lora_name_37",
            "lora_wt_37",
            "model_str_37",
            "clip_str_37",
            "lora_name_38",
            "lora_wt_38",
            "model_str_38",
            "clip_str_38",
            "lora_name_39",
            "lora_wt_39",
            "model_str_39",
            "clip_str_39",
            "lora_name_40",
            "lora_wt_40",
            "model_str_40",
            "clip_str_40",
            "lora_name_41",
            "lora_wt_41",
            "model_str_41",
            "clip_str_41",
            "lora_name_42",
            "lora_wt_42",
            "model_str_42",
            "clip_str_42",
            "lora_name_43",
            "lora_wt_43",
            "model_str_43",
            "clip_str_43",
            "lora_name_44",
            "lora_wt_44",
            "model_str_44",
            "clip_str_44",
            "lora_name_45",
            "lora_wt_45",
            "model_str_45",
            "clip_str_45",
            "lora_name_46",
            "lora_wt_46",
            "model_str_46",
            "clip_str_46",
            "lora_name_47",
            "lora_wt_47",
            "model_str_47",
            "clip_str_47",
            "lora_name_48",
            "lora_wt_48",
            "model_str_48",
            "clip_str_48",
            "lora_name_49",
            "lora_wt_49",
            "model_str_49",
            "clip_str_49"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_STACK",
          "items": [
            {
              "type": "LORA_STACK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Stackers"
    },
    "Control Net Stacker": {
      "title": "TSC_Control_Net_Stacker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, image, strength, start_percent, end_percent",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_STACK",
          "items": [
            {
              "type": "CONTROL_NET_STACK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Stackers"
    },
    "Apply ControlNet Stack": {
      "title": "TSC_Apply_ControlNet_Stack",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            }
          },
          "required": ["positive", "negative"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Efficiency Nodes/Stackers"
    },
    "Unpack SDXL Tuple": {
      "title": "TSC_Unpack_SDXL_Tuple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sdxl_tuple",
          "properties": {
            "sdxl_tuple": {
              "type": "SDXL_TUPLE"
            }
          },
          "required": ["sdxl_tuple"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, CONDITIONING, CONDITIONING, MODEL, CLIP, CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 8,
          "minItems": 8
        }
      },
      "$category": "Efficiency Nodes/Misc"
    },
    "Pack SDXL Tuple": {
      "title": "TSC_Pack_SDXL_Tuple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_model, base_clip, base_positive, base_negative, refiner_model, refiner_clip, refiner_positive, refiner_negative",
          "properties": {
            "base_model": {
              "type": "MODEL"
            },
            "base_clip": {
              "type": "CLIP"
            },
            "base_positive": {
              "type": "CONDITIONING"
            },
            "base_negative": {
              "type": "CONDITIONING"
            },
            "refiner_model": {
              "type": "MODEL"
            },
            "refiner_clip": {
              "type": "CLIP"
            },
            "refiner_positive": {
              "type": "CONDITIONING"
            },
            "refiner_negative": {
              "type": "CONDITIONING"
            }
          },
          "required": [
            "base_model",
            "base_clip",
            "base_positive",
            "base_negative",
            "refiner_model",
            "refiner_clip",
            "refiner_positive",
            "refiner_negative"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SDXL_TUPLE",
          "items": [
            {
              "type": "SDXL_TUPLE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Misc"
    },
    "XY Plot": {
      "title": "TSC_XYplot",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: grid_spacing, XY_flip, Y_label_orientation, cache_models, ksampler_output_image",
          "properties": {
            "grid_spacing": {
              "type": "number"
            },
            "XY_flip": {
              "type": "string"
            },
            "Y_label_orientation": {
              "type": "string"
            },
            "cache_models": {
              "type": "string"
            },
            "ksampler_output_image": {
              "type": "string"
            }
          },
          "required": [
            "grid_spacing",
            "XY_flip",
            "Y_label_orientation",
            "cache_models",
            "ksampler_output_image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SCRIPT",
          "items": [
            {
              "type": "SCRIPT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Scripts"
    },
    "XY Input: Seeds++ Batch": {
      "title": "TSC_XYplot_SeedsBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_count",
          "properties": {
            "batch_count": {
              "type": "number"
            }
          },
          "required": ["batch_count"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Add/Return Noise": {
      "title": "TSC_XYplot_AddReturnNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: XY_type",
          "properties": {
            "XY_type": {
              "type": "string"
            }
          },
          "required": ["XY_type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Steps": {
      "title": "TSC_XYplot_Steps",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_parameter, batch_count, first_step, last_step, first_start_step, last_start_step, first_end_step, last_end_step, first_refine_step, last_refine_step",
          "properties": {
            "target_parameter": {
              "type": "string"
            },
            "batch_count": {
              "type": "number"
            },
            "first_step": {
              "type": "number"
            },
            "last_step": {
              "type": "number"
            },
            "first_start_step": {
              "type": "number"
            },
            "last_start_step": {
              "type": "number"
            },
            "first_end_step": {
              "type": "number"
            },
            "last_end_step": {
              "type": "number"
            },
            "first_refine_step": {
              "type": "number"
            },
            "last_refine_step": {
              "type": "number"
            }
          },
          "required": [
            "target_parameter",
            "batch_count",
            "first_step",
            "last_step",
            "first_start_step",
            "last_start_step",
            "first_end_step",
            "last_end_step",
            "first_refine_step",
            "last_refine_step"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: CFG Scale": {
      "title": "TSC_XYplot_CFG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_count, first_cfg, last_cfg",
          "properties": {
            "batch_count": {
              "type": "number"
            },
            "first_cfg": {
              "type": "number"
            },
            "last_cfg": {
              "type": "number"
            }
          },
          "required": ["batch_count", "first_cfg", "last_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Sampler/Scheduler": {
      "title": "TSC_XYplot_Sampler_Scheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_parameter, input_count, sampler_1, scheduler_1, sampler_2, scheduler_2, sampler_3, scheduler_3, sampler_4, scheduler_4, sampler_5, scheduler_5, sampler_6, scheduler_6, sampler_7, scheduler_7, sampler_8, scheduler_8, sampler_9, scheduler_9, sampler_10, scheduler_10, sampler_11, scheduler_11, sampler_12, scheduler_12, sampler_13, scheduler_13, sampler_14, scheduler_14, sampler_15, scheduler_15, sampler_16, scheduler_16, sampler_17, scheduler_17, sampler_18, scheduler_18, sampler_19, scheduler_19, sampler_20, scheduler_20, sampler_21, scheduler_21, sampler_22, scheduler_22, sampler_23, scheduler_23, sampler_24, scheduler_24, sampler_25, scheduler_25, sampler_26, scheduler_26, sampler_27, scheduler_27, sampler_28, scheduler_28, sampler_29, scheduler_29, sampler_30, scheduler_30, sampler_31, scheduler_31, sampler_32, scheduler_32, sampler_33, scheduler_33, sampler_34, scheduler_34, sampler_35, scheduler_35, sampler_36, scheduler_36, sampler_37, scheduler_37, sampler_38, scheduler_38, sampler_39, scheduler_39, sampler_40, scheduler_40, sampler_41, scheduler_41, sampler_42, scheduler_42, sampler_43, scheduler_43, sampler_44, scheduler_44, sampler_45, scheduler_45, sampler_46, scheduler_46, sampler_47, scheduler_47, sampler_48, scheduler_48, sampler_49, scheduler_49, sampler_50, scheduler_50",
          "properties": {
            "target_parameter": {
              "type": "string"
            },
            "input_count": {
              "type": "number"
            },
            "sampler_1": {
              "type": "string"
            },
            "scheduler_1": {
              "type": "string"
            },
            "sampler_2": {
              "type": "string"
            },
            "scheduler_2": {
              "type": "string"
            },
            "sampler_3": {
              "type": "string"
            },
            "scheduler_3": {
              "type": "string"
            },
            "sampler_4": {
              "type": "string"
            },
            "scheduler_4": {
              "type": "string"
            },
            "sampler_5": {
              "type": "string"
            },
            "scheduler_5": {
              "type": "string"
            },
            "sampler_6": {
              "type": "string"
            },
            "scheduler_6": {
              "type": "string"
            },
            "sampler_7": {
              "type": "string"
            },
            "scheduler_7": {
              "type": "string"
            },
            "sampler_8": {
              "type": "string"
            },
            "scheduler_8": {
              "type": "string"
            },
            "sampler_9": {
              "type": "string"
            },
            "scheduler_9": {
              "type": "string"
            },
            "sampler_10": {
              "type": "string"
            },
            "scheduler_10": {
              "type": "string"
            },
            "sampler_11": {
              "type": "string"
            },
            "scheduler_11": {
              "type": "string"
            },
            "sampler_12": {
              "type": "string"
            },
            "scheduler_12": {
              "type": "string"
            },
            "sampler_13": {
              "type": "string"
            },
            "scheduler_13": {
              "type": "string"
            },
            "sampler_14": {
              "type": "string"
            },
            "scheduler_14": {
              "type": "string"
            },
            "sampler_15": {
              "type": "string"
            },
            "scheduler_15": {
              "type": "string"
            },
            "sampler_16": {
              "type": "string"
            },
            "scheduler_16": {
              "type": "string"
            },
            "sampler_17": {
              "type": "string"
            },
            "scheduler_17": {
              "type": "string"
            },
            "sampler_18": {
              "type": "string"
            },
            "scheduler_18": {
              "type": "string"
            },
            "sampler_19": {
              "type": "string"
            },
            "scheduler_19": {
              "type": "string"
            },
            "sampler_20": {
              "type": "string"
            },
            "scheduler_20": {
              "type": "string"
            },
            "sampler_21": {
              "type": "string"
            },
            "scheduler_21": {
              "type": "string"
            },
            "sampler_22": {
              "type": "string"
            },
            "scheduler_22": {
              "type": "string"
            },
            "sampler_23": {
              "type": "string"
            },
            "scheduler_23": {
              "type": "string"
            },
            "sampler_24": {
              "type": "string"
            },
            "scheduler_24": {
              "type": "string"
            },
            "sampler_25": {
              "type": "string"
            },
            "scheduler_25": {
              "type": "string"
            },
            "sampler_26": {
              "type": "string"
            },
            "scheduler_26": {
              "type": "string"
            },
            "sampler_27": {
              "type": "string"
            },
            "scheduler_27": {
              "type": "string"
            },
            "sampler_28": {
              "type": "string"
            },
            "scheduler_28": {
              "type": "string"
            },
            "sampler_29": {
              "type": "string"
            },
            "scheduler_29": {
              "type": "string"
            },
            "sampler_30": {
              "type": "string"
            },
            "scheduler_30": {
              "type": "string"
            },
            "sampler_31": {
              "type": "string"
            },
            "scheduler_31": {
              "type": "string"
            },
            "sampler_32": {
              "type": "string"
            },
            "scheduler_32": {
              "type": "string"
            },
            "sampler_33": {
              "type": "string"
            },
            "scheduler_33": {
              "type": "string"
            },
            "sampler_34": {
              "type": "string"
            },
            "scheduler_34": {
              "type": "string"
            },
            "sampler_35": {
              "type": "string"
            },
            "scheduler_35": {
              "type": "string"
            },
            "sampler_36": {
              "type": "string"
            },
            "scheduler_36": {
              "type": "string"
            },
            "sampler_37": {
              "type": "string"
            },
            "scheduler_37": {
              "type": "string"
            },
            "sampler_38": {
              "type": "string"
            },
            "scheduler_38": {
              "type": "string"
            },
            "sampler_39": {
              "type": "string"
            },
            "scheduler_39": {
              "type": "string"
            },
            "sampler_40": {
              "type": "string"
            },
            "scheduler_40": {
              "type": "string"
            },
            "sampler_41": {
              "type": "string"
            },
            "scheduler_41": {
              "type": "string"
            },
            "sampler_42": {
              "type": "string"
            },
            "scheduler_42": {
              "type": "string"
            },
            "sampler_43": {
              "type": "string"
            },
            "scheduler_43": {
              "type": "string"
            },
            "sampler_44": {
              "type": "string"
            },
            "scheduler_44": {
              "type": "string"
            },
            "sampler_45": {
              "type": "string"
            },
            "scheduler_45": {
              "type": "string"
            },
            "sampler_46": {
              "type": "string"
            },
            "scheduler_46": {
              "type": "string"
            },
            "sampler_47": {
              "type": "string"
            },
            "scheduler_47": {
              "type": "string"
            },
            "sampler_48": {
              "type": "string"
            },
            "scheduler_48": {
              "type": "string"
            },
            "sampler_49": {
              "type": "string"
            },
            "scheduler_49": {
              "type": "string"
            },
            "sampler_50": {
              "type": "string"
            },
            "scheduler_50": {
              "type": "string"
            }
          },
          "required": [
            "target_parameter",
            "input_count",
            "sampler_1",
            "scheduler_1",
            "sampler_2",
            "scheduler_2",
            "sampler_3",
            "scheduler_3",
            "sampler_4",
            "scheduler_4",
            "sampler_5",
            "scheduler_5",
            "sampler_6",
            "scheduler_6",
            "sampler_7",
            "scheduler_7",
            "sampler_8",
            "scheduler_8",
            "sampler_9",
            "scheduler_9",
            "sampler_10",
            "scheduler_10",
            "sampler_11",
            "scheduler_11",
            "sampler_12",
            "scheduler_12",
            "sampler_13",
            "scheduler_13",
            "sampler_14",
            "scheduler_14",
            "sampler_15",
            "scheduler_15",
            "sampler_16",
            "scheduler_16",
            "sampler_17",
            "scheduler_17",
            "sampler_18",
            "scheduler_18",
            "sampler_19",
            "scheduler_19",
            "sampler_20",
            "scheduler_20",
            "sampler_21",
            "scheduler_21",
            "sampler_22",
            "scheduler_22",
            "sampler_23",
            "scheduler_23",
            "sampler_24",
            "scheduler_24",
            "sampler_25",
            "scheduler_25",
            "sampler_26",
            "scheduler_26",
            "sampler_27",
            "scheduler_27",
            "sampler_28",
            "scheduler_28",
            "sampler_29",
            "scheduler_29",
            "sampler_30",
            "scheduler_30",
            "sampler_31",
            "scheduler_31",
            "sampler_32",
            "scheduler_32",
            "sampler_33",
            "scheduler_33",
            "sampler_34",
            "scheduler_34",
            "sampler_35",
            "scheduler_35",
            "sampler_36",
            "scheduler_36",
            "sampler_37",
            "scheduler_37",
            "sampler_38",
            "scheduler_38",
            "sampler_39",
            "scheduler_39",
            "sampler_40",
            "scheduler_40",
            "sampler_41",
            "scheduler_41",
            "sampler_42",
            "scheduler_42",
            "sampler_43",
            "scheduler_43",
            "sampler_44",
            "scheduler_44",
            "sampler_45",
            "scheduler_45",
            "sampler_46",
            "scheduler_46",
            "sampler_47",
            "scheduler_47",
            "sampler_48",
            "scheduler_48",
            "sampler_49",
            "scheduler_49",
            "sampler_50",
            "scheduler_50"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Denoise": {
      "title": "TSC_XYplot_Denoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_count, first_denoise, last_denoise",
          "properties": {
            "batch_count": {
              "type": "number"
            },
            "first_denoise": {
              "type": "number"
            },
            "last_denoise": {
              "type": "number"
            }
          },
          "required": ["batch_count", "first_denoise", "last_denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: VAE": {
      "title": "TSC_XYplot_VAE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_mode, batch_path, subdirectories, batch_sort, batch_max, vae_count, vae_name_1, vae_name_2, vae_name_3, vae_name_4, vae_name_5, vae_name_6, vae_name_7, vae_name_8, vae_name_9, vae_name_10, vae_name_11, vae_name_12, vae_name_13, vae_name_14, vae_name_15, vae_name_16, vae_name_17, vae_name_18, vae_name_19, vae_name_20, vae_name_21, vae_name_22, vae_name_23, vae_name_24, vae_name_25, vae_name_26, vae_name_27, vae_name_28, vae_name_29, vae_name_30, vae_name_31, vae_name_32, vae_name_33, vae_name_34, vae_name_35, vae_name_36, vae_name_37, vae_name_38, vae_name_39, vae_name_40, vae_name_41, vae_name_42, vae_name_43, vae_name_44, vae_name_45, vae_name_46, vae_name_47, vae_name_48, vae_name_49, vae_name_50",
          "properties": {
            "input_mode": {
              "type": "string"
            },
            "batch_path": {
              "type": "string"
            },
            "subdirectories": {
              "type": "BOOLEAN"
            },
            "batch_sort": {
              "type": "string"
            },
            "batch_max": {
              "type": "number"
            },
            "vae_count": {
              "type": "number"
            },
            "vae_name_1": {
              "type": "string"
            },
            "vae_name_2": {
              "type": "string"
            },
            "vae_name_3": {
              "type": "string"
            },
            "vae_name_4": {
              "type": "string"
            },
            "vae_name_5": {
              "type": "string"
            },
            "vae_name_6": {
              "type": "string"
            },
            "vae_name_7": {
              "type": "string"
            },
            "vae_name_8": {
              "type": "string"
            },
            "vae_name_9": {
              "type": "string"
            },
            "vae_name_10": {
              "type": "string"
            },
            "vae_name_11": {
              "type": "string"
            },
            "vae_name_12": {
              "type": "string"
            },
            "vae_name_13": {
              "type": "string"
            },
            "vae_name_14": {
              "type": "string"
            },
            "vae_name_15": {
              "type": "string"
            },
            "vae_name_16": {
              "type": "string"
            },
            "vae_name_17": {
              "type": "string"
            },
            "vae_name_18": {
              "type": "string"
            },
            "vae_name_19": {
              "type": "string"
            },
            "vae_name_20": {
              "type": "string"
            },
            "vae_name_21": {
              "type": "string"
            },
            "vae_name_22": {
              "type": "string"
            },
            "vae_name_23": {
              "type": "string"
            },
            "vae_name_24": {
              "type": "string"
            },
            "vae_name_25": {
              "type": "string"
            },
            "vae_name_26": {
              "type": "string"
            },
            "vae_name_27": {
              "type": "string"
            },
            "vae_name_28": {
              "type": "string"
            },
            "vae_name_29": {
              "type": "string"
            },
            "vae_name_30": {
              "type": "string"
            },
            "vae_name_31": {
              "type": "string"
            },
            "vae_name_32": {
              "type": "string"
            },
            "vae_name_33": {
              "type": "string"
            },
            "vae_name_34": {
              "type": "string"
            },
            "vae_name_35": {
              "type": "string"
            },
            "vae_name_36": {
              "type": "string"
            },
            "vae_name_37": {
              "type": "string"
            },
            "vae_name_38": {
              "type": "string"
            },
            "vae_name_39": {
              "type": "string"
            },
            "vae_name_40": {
              "type": "string"
            },
            "vae_name_41": {
              "type": "string"
            },
            "vae_name_42": {
              "type": "string"
            },
            "vae_name_43": {
              "type": "string"
            },
            "vae_name_44": {
              "type": "string"
            },
            "vae_name_45": {
              "type": "string"
            },
            "vae_name_46": {
              "type": "string"
            },
            "vae_name_47": {
              "type": "string"
            },
            "vae_name_48": {
              "type": "string"
            },
            "vae_name_49": {
              "type": "string"
            },
            "vae_name_50": {
              "type": "string"
            }
          },
          "required": [
            "input_mode",
            "batch_path",
            "subdirectories",
            "batch_sort",
            "batch_max",
            "vae_count",
            "vae_name_1",
            "vae_name_2",
            "vae_name_3",
            "vae_name_4",
            "vae_name_5",
            "vae_name_6",
            "vae_name_7",
            "vae_name_8",
            "vae_name_9",
            "vae_name_10",
            "vae_name_11",
            "vae_name_12",
            "vae_name_13",
            "vae_name_14",
            "vae_name_15",
            "vae_name_16",
            "vae_name_17",
            "vae_name_18",
            "vae_name_19",
            "vae_name_20",
            "vae_name_21",
            "vae_name_22",
            "vae_name_23",
            "vae_name_24",
            "vae_name_25",
            "vae_name_26",
            "vae_name_27",
            "vae_name_28",
            "vae_name_29",
            "vae_name_30",
            "vae_name_31",
            "vae_name_32",
            "vae_name_33",
            "vae_name_34",
            "vae_name_35",
            "vae_name_36",
            "vae_name_37",
            "vae_name_38",
            "vae_name_39",
            "vae_name_40",
            "vae_name_41",
            "vae_name_42",
            "vae_name_43",
            "vae_name_44",
            "vae_name_45",
            "vae_name_46",
            "vae_name_47",
            "vae_name_48",
            "vae_name_49",
            "vae_name_50"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Prompt S/R": {
      "title": "TSC_XYplot_PromptSR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_prompt, search_txt, replace_count, replace_1, replace_2, replace_3, replace_4, replace_5, replace_6, replace_7, replace_8, replace_9, replace_10, replace_11, replace_12, replace_13, replace_14, replace_15, replace_16, replace_17, replace_18, replace_19, replace_20, replace_21, replace_22, replace_23, replace_24, replace_25, replace_26, replace_27, replace_28, replace_29, replace_30, replace_31, replace_32, replace_33, replace_34, replace_35, replace_36, replace_37, replace_38, replace_39, replace_40, replace_41, replace_42, replace_43, replace_44, replace_45, replace_46, replace_47, replace_48, replace_49",
          "properties": {
            "target_prompt": {
              "type": "string"
            },
            "search_txt": {
              "type": "string"
            },
            "replace_count": {
              "type": "number"
            },
            "replace_1": {
              "type": "string"
            },
            "replace_2": {
              "type": "string"
            },
            "replace_3": {
              "type": "string"
            },
            "replace_4": {
              "type": "string"
            },
            "replace_5": {
              "type": "string"
            },
            "replace_6": {
              "type": "string"
            },
            "replace_7": {
              "type": "string"
            },
            "replace_8": {
              "type": "string"
            },
            "replace_9": {
              "type": "string"
            },
            "replace_10": {
              "type": "string"
            },
            "replace_11": {
              "type": "string"
            },
            "replace_12": {
              "type": "string"
            },
            "replace_13": {
              "type": "string"
            },
            "replace_14": {
              "type": "string"
            },
            "replace_15": {
              "type": "string"
            },
            "replace_16": {
              "type": "string"
            },
            "replace_17": {
              "type": "string"
            },
            "replace_18": {
              "type": "string"
            },
            "replace_19": {
              "type": "string"
            },
            "replace_20": {
              "type": "string"
            },
            "replace_21": {
              "type": "string"
            },
            "replace_22": {
              "type": "string"
            },
            "replace_23": {
              "type": "string"
            },
            "replace_24": {
              "type": "string"
            },
            "replace_25": {
              "type": "string"
            },
            "replace_26": {
              "type": "string"
            },
            "replace_27": {
              "type": "string"
            },
            "replace_28": {
              "type": "string"
            },
            "replace_29": {
              "type": "string"
            },
            "replace_30": {
              "type": "string"
            },
            "replace_31": {
              "type": "string"
            },
            "replace_32": {
              "type": "string"
            },
            "replace_33": {
              "type": "string"
            },
            "replace_34": {
              "type": "string"
            },
            "replace_35": {
              "type": "string"
            },
            "replace_36": {
              "type": "string"
            },
            "replace_37": {
              "type": "string"
            },
            "replace_38": {
              "type": "string"
            },
            "replace_39": {
              "type": "string"
            },
            "replace_40": {
              "type": "string"
            },
            "replace_41": {
              "type": "string"
            },
            "replace_42": {
              "type": "string"
            },
            "replace_43": {
              "type": "string"
            },
            "replace_44": {
              "type": "string"
            },
            "replace_45": {
              "type": "string"
            },
            "replace_46": {
              "type": "string"
            },
            "replace_47": {
              "type": "string"
            },
            "replace_48": {
              "type": "string"
            },
            "replace_49": {
              "type": "string"
            }
          },
          "required": [
            "target_prompt",
            "search_txt",
            "replace_count",
            "replace_1",
            "replace_2",
            "replace_3",
            "replace_4",
            "replace_5",
            "replace_6",
            "replace_7",
            "replace_8",
            "replace_9",
            "replace_10",
            "replace_11",
            "replace_12",
            "replace_13",
            "replace_14",
            "replace_15",
            "replace_16",
            "replace_17",
            "replace_18",
            "replace_19",
            "replace_20",
            "replace_21",
            "replace_22",
            "replace_23",
            "replace_24",
            "replace_25",
            "replace_26",
            "replace_27",
            "replace_28",
            "replace_29",
            "replace_30",
            "replace_31",
            "replace_32",
            "replace_33",
            "replace_34",
            "replace_35",
            "replace_36",
            "replace_37",
            "replace_38",
            "replace_39",
            "replace_40",
            "replace_41",
            "replace_42",
            "replace_43",
            "replace_44",
            "replace_45",
            "replace_46",
            "replace_47",
            "replace_48",
            "replace_49"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Aesthetic Score": {
      "title": "TSC_XYplot_AScore",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_ascore, batch_count, first_ascore, last_ascore",
          "properties": {
            "target_ascore": {
              "type": "string"
            },
            "batch_count": {
              "type": "number"
            },
            "first_ascore": {
              "type": "number"
            },
            "last_ascore": {
              "type": "number"
            }
          },
          "required": [
            "target_ascore",
            "batch_count",
            "first_ascore",
            "last_ascore"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Refiner On/Off": {
      "title": "TSC_XYplot_Refiner_OnOff",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: refine_at_percent",
          "properties": {
            "refine_at_percent": {
              "type": "number"
            }
          },
          "required": ["refine_at_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Checkpoint": {
      "title": "TSC_XYplot_Checkpoint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_ckpt, input_mode, batch_path, subdirectories, batch_sort, batch_max, ckpt_count, ckpt_name_1, clip_skip_1, vae_name_1, ckpt_name_2, clip_skip_2, vae_name_2, ckpt_name_3, clip_skip_3, vae_name_3, ckpt_name_4, clip_skip_4, vae_name_4, ckpt_name_5, clip_skip_5, vae_name_5, ckpt_name_6, clip_skip_6, vae_name_6, ckpt_name_7, clip_skip_7, vae_name_7, ckpt_name_8, clip_skip_8, vae_name_8, ckpt_name_9, clip_skip_9, vae_name_9, ckpt_name_10, clip_skip_10, vae_name_10, ckpt_name_11, clip_skip_11, vae_name_11, ckpt_name_12, clip_skip_12, vae_name_12, ckpt_name_13, clip_skip_13, vae_name_13, ckpt_name_14, clip_skip_14, vae_name_14, ckpt_name_15, clip_skip_15, vae_name_15, ckpt_name_16, clip_skip_16, vae_name_16, ckpt_name_17, clip_skip_17, vae_name_17, ckpt_name_18, clip_skip_18, vae_name_18, ckpt_name_19, clip_skip_19, vae_name_19, ckpt_name_20, clip_skip_20, vae_name_20, ckpt_name_21, clip_skip_21, vae_name_21, ckpt_name_22, clip_skip_22, vae_name_22, ckpt_name_23, clip_skip_23, vae_name_23, ckpt_name_24, clip_skip_24, vae_name_24, ckpt_name_25, clip_skip_25, vae_name_25, ckpt_name_26, clip_skip_26, vae_name_26, ckpt_name_27, clip_skip_27, vae_name_27, ckpt_name_28, clip_skip_28, vae_name_28, ckpt_name_29, clip_skip_29, vae_name_29, ckpt_name_30, clip_skip_30, vae_name_30, ckpt_name_31, clip_skip_31, vae_name_31, ckpt_name_32, clip_skip_32, vae_name_32, ckpt_name_33, clip_skip_33, vae_name_33, ckpt_name_34, clip_skip_34, vae_name_34, ckpt_name_35, clip_skip_35, vae_name_35, ckpt_name_36, clip_skip_36, vae_name_36, ckpt_name_37, clip_skip_37, vae_name_37, ckpt_name_38, clip_skip_38, vae_name_38, ckpt_name_39, clip_skip_39, vae_name_39, ckpt_name_40, clip_skip_40, vae_name_40, ckpt_name_41, clip_skip_41, vae_name_41, ckpt_name_42, clip_skip_42, vae_name_42, ckpt_name_43, clip_skip_43, vae_name_43, ckpt_name_44, clip_skip_44, vae_name_44, ckpt_name_45, clip_skip_45, vae_name_45, ckpt_name_46, clip_skip_46, vae_name_46, ckpt_name_47, clip_skip_47, vae_name_47, ckpt_name_48, clip_skip_48, vae_name_48, ckpt_name_49, clip_skip_49, vae_name_49, ckpt_name_50, clip_skip_50, vae_name_50",
          "properties": {
            "target_ckpt": {
              "type": "string"
            },
            "input_mode": {
              "type": "string"
            },
            "batch_path": {
              "type": "string"
            },
            "subdirectories": {
              "type": "BOOLEAN"
            },
            "batch_sort": {
              "type": "string"
            },
            "batch_max": {
              "type": "number"
            },
            "ckpt_count": {
              "type": "number"
            },
            "ckpt_name_1": {
              "type": "string"
            },
            "clip_skip_1": {
              "type": "number"
            },
            "vae_name_1": {
              "type": "string"
            },
            "ckpt_name_2": {
              "type": "string"
            },
            "clip_skip_2": {
              "type": "number"
            },
            "vae_name_2": {
              "type": "string"
            },
            "ckpt_name_3": {
              "type": "string"
            },
            "clip_skip_3": {
              "type": "number"
            },
            "vae_name_3": {
              "type": "string"
            },
            "ckpt_name_4": {
              "type": "string"
            },
            "clip_skip_4": {
              "type": "number"
            },
            "vae_name_4": {
              "type": "string"
            },
            "ckpt_name_5": {
              "type": "string"
            },
            "clip_skip_5": {
              "type": "number"
            },
            "vae_name_5": {
              "type": "string"
            },
            "ckpt_name_6": {
              "type": "string"
            },
            "clip_skip_6": {
              "type": "number"
            },
            "vae_name_6": {
              "type": "string"
            },
            "ckpt_name_7": {
              "type": "string"
            },
            "clip_skip_7": {
              "type": "number"
            },
            "vae_name_7": {
              "type": "string"
            },
            "ckpt_name_8": {
              "type": "string"
            },
            "clip_skip_8": {
              "type": "number"
            },
            "vae_name_8": {
              "type": "string"
            },
            "ckpt_name_9": {
              "type": "string"
            },
            "clip_skip_9": {
              "type": "number"
            },
            "vae_name_9": {
              "type": "string"
            },
            "ckpt_name_10": {
              "type": "string"
            },
            "clip_skip_10": {
              "type": "number"
            },
            "vae_name_10": {
              "type": "string"
            },
            "ckpt_name_11": {
              "type": "string"
            },
            "clip_skip_11": {
              "type": "number"
            },
            "vae_name_11": {
              "type": "string"
            },
            "ckpt_name_12": {
              "type": "string"
            },
            "clip_skip_12": {
              "type": "number"
            },
            "vae_name_12": {
              "type": "string"
            },
            "ckpt_name_13": {
              "type": "string"
            },
            "clip_skip_13": {
              "type": "number"
            },
            "vae_name_13": {
              "type": "string"
            },
            "ckpt_name_14": {
              "type": "string"
            },
            "clip_skip_14": {
              "type": "number"
            },
            "vae_name_14": {
              "type": "string"
            },
            "ckpt_name_15": {
              "type": "string"
            },
            "clip_skip_15": {
              "type": "number"
            },
            "vae_name_15": {
              "type": "string"
            },
            "ckpt_name_16": {
              "type": "string"
            },
            "clip_skip_16": {
              "type": "number"
            },
            "vae_name_16": {
              "type": "string"
            },
            "ckpt_name_17": {
              "type": "string"
            },
            "clip_skip_17": {
              "type": "number"
            },
            "vae_name_17": {
              "type": "string"
            },
            "ckpt_name_18": {
              "type": "string"
            },
            "clip_skip_18": {
              "type": "number"
            },
            "vae_name_18": {
              "type": "string"
            },
            "ckpt_name_19": {
              "type": "string"
            },
            "clip_skip_19": {
              "type": "number"
            },
            "vae_name_19": {
              "type": "string"
            },
            "ckpt_name_20": {
              "type": "string"
            },
            "clip_skip_20": {
              "type": "number"
            },
            "vae_name_20": {
              "type": "string"
            },
            "ckpt_name_21": {
              "type": "string"
            },
            "clip_skip_21": {
              "type": "number"
            },
            "vae_name_21": {
              "type": "string"
            },
            "ckpt_name_22": {
              "type": "string"
            },
            "clip_skip_22": {
              "type": "number"
            },
            "vae_name_22": {
              "type": "string"
            },
            "ckpt_name_23": {
              "type": "string"
            },
            "clip_skip_23": {
              "type": "number"
            },
            "vae_name_23": {
              "type": "string"
            },
            "ckpt_name_24": {
              "type": "string"
            },
            "clip_skip_24": {
              "type": "number"
            },
            "vae_name_24": {
              "type": "string"
            },
            "ckpt_name_25": {
              "type": "string"
            },
            "clip_skip_25": {
              "type": "number"
            },
            "vae_name_25": {
              "type": "string"
            },
            "ckpt_name_26": {
              "type": "string"
            },
            "clip_skip_26": {
              "type": "number"
            },
            "vae_name_26": {
              "type": "string"
            },
            "ckpt_name_27": {
              "type": "string"
            },
            "clip_skip_27": {
              "type": "number"
            },
            "vae_name_27": {
              "type": "string"
            },
            "ckpt_name_28": {
              "type": "string"
            },
            "clip_skip_28": {
              "type": "number"
            },
            "vae_name_28": {
              "type": "string"
            },
            "ckpt_name_29": {
              "type": "string"
            },
            "clip_skip_29": {
              "type": "number"
            },
            "vae_name_29": {
              "type": "string"
            },
            "ckpt_name_30": {
              "type": "string"
            },
            "clip_skip_30": {
              "type": "number"
            },
            "vae_name_30": {
              "type": "string"
            },
            "ckpt_name_31": {
              "type": "string"
            },
            "clip_skip_31": {
              "type": "number"
            },
            "vae_name_31": {
              "type": "string"
            },
            "ckpt_name_32": {
              "type": "string"
            },
            "clip_skip_32": {
              "type": "number"
            },
            "vae_name_32": {
              "type": "string"
            },
            "ckpt_name_33": {
              "type": "string"
            },
            "clip_skip_33": {
              "type": "number"
            },
            "vae_name_33": {
              "type": "string"
            },
            "ckpt_name_34": {
              "type": "string"
            },
            "clip_skip_34": {
              "type": "number"
            },
            "vae_name_34": {
              "type": "string"
            },
            "ckpt_name_35": {
              "type": "string"
            },
            "clip_skip_35": {
              "type": "number"
            },
            "vae_name_35": {
              "type": "string"
            },
            "ckpt_name_36": {
              "type": "string"
            },
            "clip_skip_36": {
              "type": "number"
            },
            "vae_name_36": {
              "type": "string"
            },
            "ckpt_name_37": {
              "type": "string"
            },
            "clip_skip_37": {
              "type": "number"
            },
            "vae_name_37": {
              "type": "string"
            },
            "ckpt_name_38": {
              "type": "string"
            },
            "clip_skip_38": {
              "type": "number"
            },
            "vae_name_38": {
              "type": "string"
            },
            "ckpt_name_39": {
              "type": "string"
            },
            "clip_skip_39": {
              "type": "number"
            },
            "vae_name_39": {
              "type": "string"
            },
            "ckpt_name_40": {
              "type": "string"
            },
            "clip_skip_40": {
              "type": "number"
            },
            "vae_name_40": {
              "type": "string"
            },
            "ckpt_name_41": {
              "type": "string"
            },
            "clip_skip_41": {
              "type": "number"
            },
            "vae_name_41": {
              "type": "string"
            },
            "ckpt_name_42": {
              "type": "string"
            },
            "clip_skip_42": {
              "type": "number"
            },
            "vae_name_42": {
              "type": "string"
            },
            "ckpt_name_43": {
              "type": "string"
            },
            "clip_skip_43": {
              "type": "number"
            },
            "vae_name_43": {
              "type": "string"
            },
            "ckpt_name_44": {
              "type": "string"
            },
            "clip_skip_44": {
              "type": "number"
            },
            "vae_name_44": {
              "type": "string"
            },
            "ckpt_name_45": {
              "type": "string"
            },
            "clip_skip_45": {
              "type": "number"
            },
            "vae_name_45": {
              "type": "string"
            },
            "ckpt_name_46": {
              "type": "string"
            },
            "clip_skip_46": {
              "type": "number"
            },
            "vae_name_46": {
              "type": "string"
            },
            "ckpt_name_47": {
              "type": "string"
            },
            "clip_skip_47": {
              "type": "number"
            },
            "vae_name_47": {
              "type": "string"
            },
            "ckpt_name_48": {
              "type": "string"
            },
            "clip_skip_48": {
              "type": "number"
            },
            "vae_name_48": {
              "type": "string"
            },
            "ckpt_name_49": {
              "type": "string"
            },
            "clip_skip_49": {
              "type": "number"
            },
            "vae_name_49": {
              "type": "string"
            },
            "ckpt_name_50": {
              "type": "string"
            },
            "clip_skip_50": {
              "type": "number"
            },
            "vae_name_50": {
              "type": "string"
            }
          },
          "required": [
            "target_ckpt",
            "input_mode",
            "batch_path",
            "subdirectories",
            "batch_sort",
            "batch_max",
            "ckpt_count",
            "ckpt_name_1",
            "clip_skip_1",
            "vae_name_1",
            "ckpt_name_2",
            "clip_skip_2",
            "vae_name_2",
            "ckpt_name_3",
            "clip_skip_3",
            "vae_name_3",
            "ckpt_name_4",
            "clip_skip_4",
            "vae_name_4",
            "ckpt_name_5",
            "clip_skip_5",
            "vae_name_5",
            "ckpt_name_6",
            "clip_skip_6",
            "vae_name_6",
            "ckpt_name_7",
            "clip_skip_7",
            "vae_name_7",
            "ckpt_name_8",
            "clip_skip_8",
            "vae_name_8",
            "ckpt_name_9",
            "clip_skip_9",
            "vae_name_9",
            "ckpt_name_10",
            "clip_skip_10",
            "vae_name_10",
            "ckpt_name_11",
            "clip_skip_11",
            "vae_name_11",
            "ckpt_name_12",
            "clip_skip_12",
            "vae_name_12",
            "ckpt_name_13",
            "clip_skip_13",
            "vae_name_13",
            "ckpt_name_14",
            "clip_skip_14",
            "vae_name_14",
            "ckpt_name_15",
            "clip_skip_15",
            "vae_name_15",
            "ckpt_name_16",
            "clip_skip_16",
            "vae_name_16",
            "ckpt_name_17",
            "clip_skip_17",
            "vae_name_17",
            "ckpt_name_18",
            "clip_skip_18",
            "vae_name_18",
            "ckpt_name_19",
            "clip_skip_19",
            "vae_name_19",
            "ckpt_name_20",
            "clip_skip_20",
            "vae_name_20",
            "ckpt_name_21",
            "clip_skip_21",
            "vae_name_21",
            "ckpt_name_22",
            "clip_skip_22",
            "vae_name_22",
            "ckpt_name_23",
            "clip_skip_23",
            "vae_name_23",
            "ckpt_name_24",
            "clip_skip_24",
            "vae_name_24",
            "ckpt_name_25",
            "clip_skip_25",
            "vae_name_25",
            "ckpt_name_26",
            "clip_skip_26",
            "vae_name_26",
            "ckpt_name_27",
            "clip_skip_27",
            "vae_name_27",
            "ckpt_name_28",
            "clip_skip_28",
            "vae_name_28",
            "ckpt_name_29",
            "clip_skip_29",
            "vae_name_29",
            "ckpt_name_30",
            "clip_skip_30",
            "vae_name_30",
            "ckpt_name_31",
            "clip_skip_31",
            "vae_name_31",
            "ckpt_name_32",
            "clip_skip_32",
            "vae_name_32",
            "ckpt_name_33",
            "clip_skip_33",
            "vae_name_33",
            "ckpt_name_34",
            "clip_skip_34",
            "vae_name_34",
            "ckpt_name_35",
            "clip_skip_35",
            "vae_name_35",
            "ckpt_name_36",
            "clip_skip_36",
            "vae_name_36",
            "ckpt_name_37",
            "clip_skip_37",
            "vae_name_37",
            "ckpt_name_38",
            "clip_skip_38",
            "vae_name_38",
            "ckpt_name_39",
            "clip_skip_39",
            "vae_name_39",
            "ckpt_name_40",
            "clip_skip_40",
            "vae_name_40",
            "ckpt_name_41",
            "clip_skip_41",
            "vae_name_41",
            "ckpt_name_42",
            "clip_skip_42",
            "vae_name_42",
            "ckpt_name_43",
            "clip_skip_43",
            "vae_name_43",
            "ckpt_name_44",
            "clip_skip_44",
            "vae_name_44",
            "ckpt_name_45",
            "clip_skip_45",
            "vae_name_45",
            "ckpt_name_46",
            "clip_skip_46",
            "vae_name_46",
            "ckpt_name_47",
            "clip_skip_47",
            "vae_name_47",
            "ckpt_name_48",
            "clip_skip_48",
            "vae_name_48",
            "ckpt_name_49",
            "clip_skip_49",
            "vae_name_49",
            "ckpt_name_50",
            "clip_skip_50",
            "vae_name_50"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Clip Skip": {
      "title": "TSC_XYplot_ClipSkip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_ckpt, batch_count, first_clip_skip, last_clip_skip",
          "properties": {
            "target_ckpt": {
              "type": "string"
            },
            "batch_count": {
              "type": "number"
            },
            "first_clip_skip": {
              "type": "number"
            },
            "last_clip_skip": {
              "type": "number"
            }
          },
          "required": [
            "target_ckpt",
            "batch_count",
            "first_clip_skip",
            "last_clip_skip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: LoRA": {
      "title": "TSC_XYplot_LoRA",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_mode, batch_path, subdirectories, batch_sort, batch_max, lora_count, model_strength, clip_strength, lora_name_1, model_str_1, clip_str_1, lora_name_2, model_str_2, clip_str_2, lora_name_3, model_str_3, clip_str_3, lora_name_4, model_str_4, clip_str_4, lora_name_5, model_str_5, clip_str_5, lora_name_6, model_str_6, clip_str_6, lora_name_7, model_str_7, clip_str_7, lora_name_8, model_str_8, clip_str_8, lora_name_9, model_str_9, clip_str_9, lora_name_10, model_str_10, clip_str_10, lora_name_11, model_str_11, clip_str_11, lora_name_12, model_str_12, clip_str_12, lora_name_13, model_str_13, clip_str_13, lora_name_14, model_str_14, clip_str_14, lora_name_15, model_str_15, clip_str_15, lora_name_16, model_str_16, clip_str_16, lora_name_17, model_str_17, clip_str_17, lora_name_18, model_str_18, clip_str_18, lora_name_19, model_str_19, clip_str_19, lora_name_20, model_str_20, clip_str_20, lora_name_21, model_str_21, clip_str_21, lora_name_22, model_str_22, clip_str_22, lora_name_23, model_str_23, clip_str_23, lora_name_24, model_str_24, clip_str_24, lora_name_25, model_str_25, clip_str_25, lora_name_26, model_str_26, clip_str_26, lora_name_27, model_str_27, clip_str_27, lora_name_28, model_str_28, clip_str_28, lora_name_29, model_str_29, clip_str_29, lora_name_30, model_str_30, clip_str_30, lora_name_31, model_str_31, clip_str_31, lora_name_32, model_str_32, clip_str_32, lora_name_33, model_str_33, clip_str_33, lora_name_34, model_str_34, clip_str_34, lora_name_35, model_str_35, clip_str_35, lora_name_36, model_str_36, clip_str_36, lora_name_37, model_str_37, clip_str_37, lora_name_38, model_str_38, clip_str_38, lora_name_39, model_str_39, clip_str_39, lora_name_40, model_str_40, clip_str_40, lora_name_41, model_str_41, clip_str_41, lora_name_42, model_str_42, clip_str_42, lora_name_43, model_str_43, clip_str_43, lora_name_44, model_str_44, clip_str_44, lora_name_45, model_str_45, clip_str_45, lora_name_46, model_str_46, clip_str_46, lora_name_47, model_str_47, clip_str_47, lora_name_48, model_str_48, clip_str_48, lora_name_49, model_str_49, clip_str_49, lora_name_50, model_str_50, clip_str_50",
          "properties": {
            "input_mode": {
              "type": "string"
            },
            "batch_path": {
              "type": "string"
            },
            "subdirectories": {
              "type": "BOOLEAN"
            },
            "batch_sort": {
              "type": "string"
            },
            "batch_max": {
              "type": "number"
            },
            "lora_count": {
              "type": "number"
            },
            "model_strength": {
              "type": "number"
            },
            "clip_strength": {
              "type": "number"
            },
            "lora_name_1": {
              "type": "string"
            },
            "model_str_1": {
              "type": "number"
            },
            "clip_str_1": {
              "type": "number"
            },
            "lora_name_2": {
              "type": "string"
            },
            "model_str_2": {
              "type": "number"
            },
            "clip_str_2": {
              "type": "number"
            },
            "lora_name_3": {
              "type": "string"
            },
            "model_str_3": {
              "type": "number"
            },
            "clip_str_3": {
              "type": "number"
            },
            "lora_name_4": {
              "type": "string"
            },
            "model_str_4": {
              "type": "number"
            },
            "clip_str_4": {
              "type": "number"
            },
            "lora_name_5": {
              "type": "string"
            },
            "model_str_5": {
              "type": "number"
            },
            "clip_str_5": {
              "type": "number"
            },
            "lora_name_6": {
              "type": "string"
            },
            "model_str_6": {
              "type": "number"
            },
            "clip_str_6": {
              "type": "number"
            },
            "lora_name_7": {
              "type": "string"
            },
            "model_str_7": {
              "type": "number"
            },
            "clip_str_7": {
              "type": "number"
            },
            "lora_name_8": {
              "type": "string"
            },
            "model_str_8": {
              "type": "number"
            },
            "clip_str_8": {
              "type": "number"
            },
            "lora_name_9": {
              "type": "string"
            },
            "model_str_9": {
              "type": "number"
            },
            "clip_str_9": {
              "type": "number"
            },
            "lora_name_10": {
              "type": "string"
            },
            "model_str_10": {
              "type": "number"
            },
            "clip_str_10": {
              "type": "number"
            },
            "lora_name_11": {
              "type": "string"
            },
            "model_str_11": {
              "type": "number"
            },
            "clip_str_11": {
              "type": "number"
            },
            "lora_name_12": {
              "type": "string"
            },
            "model_str_12": {
              "type": "number"
            },
            "clip_str_12": {
              "type": "number"
            },
            "lora_name_13": {
              "type": "string"
            },
            "model_str_13": {
              "type": "number"
            },
            "clip_str_13": {
              "type": "number"
            },
            "lora_name_14": {
              "type": "string"
            },
            "model_str_14": {
              "type": "number"
            },
            "clip_str_14": {
              "type": "number"
            },
            "lora_name_15": {
              "type": "string"
            },
            "model_str_15": {
              "type": "number"
            },
            "clip_str_15": {
              "type": "number"
            },
            "lora_name_16": {
              "type": "string"
            },
            "model_str_16": {
              "type": "number"
            },
            "clip_str_16": {
              "type": "number"
            },
            "lora_name_17": {
              "type": "string"
            },
            "model_str_17": {
              "type": "number"
            },
            "clip_str_17": {
              "type": "number"
            },
            "lora_name_18": {
              "type": "string"
            },
            "model_str_18": {
              "type": "number"
            },
            "clip_str_18": {
              "type": "number"
            },
            "lora_name_19": {
              "type": "string"
            },
            "model_str_19": {
              "type": "number"
            },
            "clip_str_19": {
              "type": "number"
            },
            "lora_name_20": {
              "type": "string"
            },
            "model_str_20": {
              "type": "number"
            },
            "clip_str_20": {
              "type": "number"
            },
            "lora_name_21": {
              "type": "string"
            },
            "model_str_21": {
              "type": "number"
            },
            "clip_str_21": {
              "type": "number"
            },
            "lora_name_22": {
              "type": "string"
            },
            "model_str_22": {
              "type": "number"
            },
            "clip_str_22": {
              "type": "number"
            },
            "lora_name_23": {
              "type": "string"
            },
            "model_str_23": {
              "type": "number"
            },
            "clip_str_23": {
              "type": "number"
            },
            "lora_name_24": {
              "type": "string"
            },
            "model_str_24": {
              "type": "number"
            },
            "clip_str_24": {
              "type": "number"
            },
            "lora_name_25": {
              "type": "string"
            },
            "model_str_25": {
              "type": "number"
            },
            "clip_str_25": {
              "type": "number"
            },
            "lora_name_26": {
              "type": "string"
            },
            "model_str_26": {
              "type": "number"
            },
            "clip_str_26": {
              "type": "number"
            },
            "lora_name_27": {
              "type": "string"
            },
            "model_str_27": {
              "type": "number"
            },
            "clip_str_27": {
              "type": "number"
            },
            "lora_name_28": {
              "type": "string"
            },
            "model_str_28": {
              "type": "number"
            },
            "clip_str_28": {
              "type": "number"
            },
            "lora_name_29": {
              "type": "string"
            },
            "model_str_29": {
              "type": "number"
            },
            "clip_str_29": {
              "type": "number"
            },
            "lora_name_30": {
              "type": "string"
            },
            "model_str_30": {
              "type": "number"
            },
            "clip_str_30": {
              "type": "number"
            },
            "lora_name_31": {
              "type": "string"
            },
            "model_str_31": {
              "type": "number"
            },
            "clip_str_31": {
              "type": "number"
            },
            "lora_name_32": {
              "type": "string"
            },
            "model_str_32": {
              "type": "number"
            },
            "clip_str_32": {
              "type": "number"
            },
            "lora_name_33": {
              "type": "string"
            },
            "model_str_33": {
              "type": "number"
            },
            "clip_str_33": {
              "type": "number"
            },
            "lora_name_34": {
              "type": "string"
            },
            "model_str_34": {
              "type": "number"
            },
            "clip_str_34": {
              "type": "number"
            },
            "lora_name_35": {
              "type": "string"
            },
            "model_str_35": {
              "type": "number"
            },
            "clip_str_35": {
              "type": "number"
            },
            "lora_name_36": {
              "type": "string"
            },
            "model_str_36": {
              "type": "number"
            },
            "clip_str_36": {
              "type": "number"
            },
            "lora_name_37": {
              "type": "string"
            },
            "model_str_37": {
              "type": "number"
            },
            "clip_str_37": {
              "type": "number"
            },
            "lora_name_38": {
              "type": "string"
            },
            "model_str_38": {
              "type": "number"
            },
            "clip_str_38": {
              "type": "number"
            },
            "lora_name_39": {
              "type": "string"
            },
            "model_str_39": {
              "type": "number"
            },
            "clip_str_39": {
              "type": "number"
            },
            "lora_name_40": {
              "type": "string"
            },
            "model_str_40": {
              "type": "number"
            },
            "clip_str_40": {
              "type": "number"
            },
            "lora_name_41": {
              "type": "string"
            },
            "model_str_41": {
              "type": "number"
            },
            "clip_str_41": {
              "type": "number"
            },
            "lora_name_42": {
              "type": "string"
            },
            "model_str_42": {
              "type": "number"
            },
            "clip_str_42": {
              "type": "number"
            },
            "lora_name_43": {
              "type": "string"
            },
            "model_str_43": {
              "type": "number"
            },
            "clip_str_43": {
              "type": "number"
            },
            "lora_name_44": {
              "type": "string"
            },
            "model_str_44": {
              "type": "number"
            },
            "clip_str_44": {
              "type": "number"
            },
            "lora_name_45": {
              "type": "string"
            },
            "model_str_45": {
              "type": "number"
            },
            "clip_str_45": {
              "type": "number"
            },
            "lora_name_46": {
              "type": "string"
            },
            "model_str_46": {
              "type": "number"
            },
            "clip_str_46": {
              "type": "number"
            },
            "lora_name_47": {
              "type": "string"
            },
            "model_str_47": {
              "type": "number"
            },
            "clip_str_47": {
              "type": "number"
            },
            "lora_name_48": {
              "type": "string"
            },
            "model_str_48": {
              "type": "number"
            },
            "clip_str_48": {
              "type": "number"
            },
            "lora_name_49": {
              "type": "string"
            },
            "model_str_49": {
              "type": "number"
            },
            "clip_str_49": {
              "type": "number"
            },
            "lora_name_50": {
              "type": "string"
            },
            "model_str_50": {
              "type": "number"
            },
            "clip_str_50": {
              "type": "number"
            }
          },
          "required": [
            "input_mode",
            "batch_path",
            "subdirectories",
            "batch_sort",
            "batch_max",
            "lora_count",
            "model_strength",
            "clip_strength",
            "lora_name_1",
            "model_str_1",
            "clip_str_1",
            "lora_name_2",
            "model_str_2",
            "clip_str_2",
            "lora_name_3",
            "model_str_3",
            "clip_str_3",
            "lora_name_4",
            "model_str_4",
            "clip_str_4",
            "lora_name_5",
            "model_str_5",
            "clip_str_5",
            "lora_name_6",
            "model_str_6",
            "clip_str_6",
            "lora_name_7",
            "model_str_7",
            "clip_str_7",
            "lora_name_8",
            "model_str_8",
            "clip_str_8",
            "lora_name_9",
            "model_str_9",
            "clip_str_9",
            "lora_name_10",
            "model_str_10",
            "clip_str_10",
            "lora_name_11",
            "model_str_11",
            "clip_str_11",
            "lora_name_12",
            "model_str_12",
            "clip_str_12",
            "lora_name_13",
            "model_str_13",
            "clip_str_13",
            "lora_name_14",
            "model_str_14",
            "clip_str_14",
            "lora_name_15",
            "model_str_15",
            "clip_str_15",
            "lora_name_16",
            "model_str_16",
            "clip_str_16",
            "lora_name_17",
            "model_str_17",
            "clip_str_17",
            "lora_name_18",
            "model_str_18",
            "clip_str_18",
            "lora_name_19",
            "model_str_19",
            "clip_str_19",
            "lora_name_20",
            "model_str_20",
            "clip_str_20",
            "lora_name_21",
            "model_str_21",
            "clip_str_21",
            "lora_name_22",
            "model_str_22",
            "clip_str_22",
            "lora_name_23",
            "model_str_23",
            "clip_str_23",
            "lora_name_24",
            "model_str_24",
            "clip_str_24",
            "lora_name_25",
            "model_str_25",
            "clip_str_25",
            "lora_name_26",
            "model_str_26",
            "clip_str_26",
            "lora_name_27",
            "model_str_27",
            "clip_str_27",
            "lora_name_28",
            "model_str_28",
            "clip_str_28",
            "lora_name_29",
            "model_str_29",
            "clip_str_29",
            "lora_name_30",
            "model_str_30",
            "clip_str_30",
            "lora_name_31",
            "model_str_31",
            "clip_str_31",
            "lora_name_32",
            "model_str_32",
            "clip_str_32",
            "lora_name_33",
            "model_str_33",
            "clip_str_33",
            "lora_name_34",
            "model_str_34",
            "clip_str_34",
            "lora_name_35",
            "model_str_35",
            "clip_str_35",
            "lora_name_36",
            "model_str_36",
            "clip_str_36",
            "lora_name_37",
            "model_str_37",
            "clip_str_37",
            "lora_name_38",
            "model_str_38",
            "clip_str_38",
            "lora_name_39",
            "model_str_39",
            "clip_str_39",
            "lora_name_40",
            "model_str_40",
            "clip_str_40",
            "lora_name_41",
            "model_str_41",
            "clip_str_41",
            "lora_name_42",
            "model_str_42",
            "clip_str_42",
            "lora_name_43",
            "model_str_43",
            "clip_str_43",
            "lora_name_44",
            "model_str_44",
            "clip_str_44",
            "lora_name_45",
            "model_str_45",
            "clip_str_45",
            "lora_name_46",
            "model_str_46",
            "clip_str_46",
            "lora_name_47",
            "model_str_47",
            "clip_str_47",
            "lora_name_48",
            "model_str_48",
            "clip_str_48",
            "lora_name_49",
            "model_str_49",
            "clip_str_49",
            "lora_name_50",
            "model_str_50",
            "clip_str_50"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: LoRA Plot": {
      "title": "TSC_XYplot_LoRA_Plot",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_mode, lora_name, model_strength, clip_strength, X_batch_count, X_batch_path, X_subdirectories, X_batch_sort, X_first_value, X_last_value, Y_batch_count, Y_first_value, Y_last_value",
          "properties": {
            "input_mode": {
              "type": "string"
            },
            "lora_name": {
              "type": "string"
            },
            "model_strength": {
              "type": "number"
            },
            "clip_strength": {
              "type": "number"
            },
            "X_batch_count": {
              "type": "number"
            },
            "X_batch_path": {
              "type": "string"
            },
            "X_subdirectories": {
              "type": "BOOLEAN"
            },
            "X_batch_sort": {
              "type": "string"
            },
            "X_first_value": {
              "type": "number"
            },
            "X_last_value": {
              "type": "number"
            },
            "Y_batch_count": {
              "type": "number"
            },
            "Y_first_value": {
              "type": "number"
            },
            "Y_last_value": {
              "type": "number"
            }
          },
          "required": [
            "input_mode",
            "lora_name",
            "model_strength",
            "clip_strength",
            "X_batch_count",
            "X_batch_path",
            "X_subdirectories",
            "X_batch_sort",
            "X_first_value",
            "X_last_value",
            "Y_batch_count",
            "Y_first_value",
            "Y_last_value"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY, XY",
          "items": [
            {
              "type": "XY"
            },
            {
              "type": "XY"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: LoRA Stacks": {
      "title": "TSC_XYplot_LoRA_Stacks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: node_state",
          "properties": {
            "node_state": {
              "type": "string"
            }
          },
          "required": ["node_state"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Control Net": {
      "title": "TSC_XYplot_Control_Net",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, image, target_parameter, batch_count, first_strength, last_strength, first_start_percent, last_start_percent, first_end_percent, last_end_percent, strength, start_percent, end_percent",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "target_parameter": {
              "type": "string"
            },
            "batch_count": {
              "type": "number"
            },
            "first_strength": {
              "type": "number"
            },
            "last_strength": {
              "type": "number"
            },
            "first_start_percent": {
              "type": "number"
            },
            "last_start_percent": {
              "type": "number"
            },
            "first_end_percent": {
              "type": "number"
            },
            "last_end_percent": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "control_net",
            "image",
            "target_parameter",
            "batch_count",
            "first_strength",
            "last_strength",
            "first_start_percent",
            "last_start_percent",
            "first_end_percent",
            "last_end_percent",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Control Net Plot": {
      "title": "TSC_XYplot_Control_Net_Plot",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, image, plot_type, strength, start_percent, end_percent, X_batch_count, X_first_value, X_last_value, Y_batch_count, Y_first_value, Y_last_value",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "plot_type": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "X_batch_count": {
              "type": "number"
            },
            "X_first_value": {
              "type": "number"
            },
            "X_last_value": {
              "type": "number"
            },
            "Y_batch_count": {
              "type": "number"
            },
            "Y_first_value": {
              "type": "number"
            },
            "Y_last_value": {
              "type": "number"
            }
          },
          "required": [
            "control_net",
            "image",
            "plot_type",
            "strength",
            "start_percent",
            "end_percent",
            "X_batch_count",
            "X_first_value",
            "X_last_value",
            "Y_batch_count",
            "Y_first_value",
            "Y_last_value"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY, XY",
          "items": [
            {
              "type": "XY"
            },
            {
              "type": "XY"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Manual XY Entry": {
      "title": "TSC_XYplot_Manual_XY_Entry",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: plot_type, plot_value",
          "properties": {
            "plot_type": {
              "type": "string"
            },
            "plot_value": {
              "type": "string"
            }
          },
          "required": ["plot_type", "plot_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "Join XY Inputs of Same Type": {
      "title": "TSC_XYplot_JoinInputs",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: XY_1, XY_2",
          "properties": {
            "XY_1": {
              "type": "XY"
            },
            "XY_2": {
              "type": "XY"
            }
          },
          "required": ["XY_1", "XY_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "Image Overlay": {
      "title": "TSC_ImageOverlay",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_image, overlay_image, overlay_resize, resize_method, rescale_factor, width, height, x_offset, y_offset, rotation, opacity",
          "properties": {
            "base_image": {
              "type": "IMAGE"
            },
            "overlay_image": {
              "type": "IMAGE"
            },
            "overlay_resize": {
              "type": "string"
            },
            "resize_method": {
              "type": "string"
            },
            "rescale_factor": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x_offset": {
              "type": "number"
            },
            "y_offset": {
              "type": "number"
            },
            "rotation": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": [
            "base_image",
            "overlay_image",
            "overlay_resize",
            "resize_method",
            "rescale_factor",
            "width",
            "height",
            "x_offset",
            "y_offset",
            "rotation",
            "opacity"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Image"
    },
    "Noise Control Script": {
      "title": "TSC_Noise_Control_Script",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: rng_source, cfg_denoiser, add_seed_noise, seed, weight",
          "properties": {
            "rng_source": {
              "type": "string"
            },
            "cfg_denoiser": {
              "type": "BOOLEAN"
            },
            "add_seed_noise": {
              "type": "BOOLEAN"
            },
            "seed": {
              "type": "number"
            },
            "weight": {
              "type": "number"
            }
          },
          "required": [
            "rng_source",
            "cfg_denoiser",
            "add_seed_noise",
            "seed",
            "weight"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SCRIPT",
          "items": [
            {
              "type": "SCRIPT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Scripts"
    },
    "HighRes-Fix Script": {
      "title": "TSC_HighRes_Fix",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_type, hires_ckpt_name, latent_upscaler, pixel_upscaler, upscale_by, use_same_seed, seed, hires_steps, denoise, iterations, use_controlnet, control_net_name, strength, preprocessor, preprocessor_imgs",
          "properties": {
            "upscale_type": {
              "type": "string"
            },
            "hires_ckpt_name": {
              "type": "string"
            },
            "latent_upscaler": {
              "type": "string"
            },
            "pixel_upscaler": {
              "type": "string"
            },
            "upscale_by": {
              "type": "number"
            },
            "use_same_seed": {
              "type": "BOOLEAN"
            },
            "seed": {
              "type": "number"
            },
            "hires_steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            },
            "iterations": {
              "type": "number"
            },
            "use_controlnet": {
              "type": "BOOLEAN"
            },
            "control_net_name": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            },
            "preprocessor": {
              "type": "string"
            },
            "preprocessor_imgs": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "upscale_type",
            "hires_ckpt_name",
            "latent_upscaler",
            "pixel_upscaler",
            "upscale_by",
            "use_same_seed",
            "seed",
            "hires_steps",
            "denoise",
            "iterations",
            "use_controlnet",
            "control_net_name",
            "strength",
            "preprocessor",
            "preprocessor_imgs"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SCRIPT",
          "items": [
            {
              "type": "SCRIPT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Scripts"
    },
    "Tiled Upscaler Script": {
      "title": "TSC_Tiled_Upscaler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_by, tile_size, tiling_strategy, tiling_steps, seed, denoise, use_controlnet, tile_controlnet, strength",
          "properties": {
            "upscale_by": {
              "type": "number"
            },
            "tile_size": {
              "type": "number"
            },
            "tiling_strategy": {
              "type": "string"
            },
            "tiling_steps": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            },
            "use_controlnet": {
              "type": "BOOLEAN"
            },
            "tile_controlnet": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": [
            "upscale_by",
            "tile_size",
            "tiling_strategy",
            "tiling_steps",
            "seed",
            "denoise",
            "use_controlnet",
            "tile_controlnet",
            "strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SCRIPT",
          "items": [
            {
              "type": "SCRIPT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Scripts"
    },
    "LoRA Stack to String converter": {
      "title": "TSC_LoRA_Stack2String",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora_stack",
          "properties": {
            "lora_stack": {
              "type": "LORA_STACK"
            }
          },
          "required": ["lora_stack"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Misc"
    },
    "Evaluate Integers": {
      "title": "TSC_EvaluateInts",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: python_expression, print_to_console",
          "properties": {
            "python_expression": {
              "type": "string"
            },
            "print_to_console": {
              "type": "string"
            }
          },
          "required": ["python_expression", "print_to_console"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, STRING",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Efficiency Nodes/Simple Eval"
    },
    "Evaluate Floats": {
      "title": "TSC_EvaluateFloats",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: python_expression, print_to_console",
          "properties": {
            "python_expression": {
              "type": "string"
            },
            "print_to_console": {
              "type": "string"
            }
          },
          "required": ["python_expression", "print_to_console"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, STRING",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Efficiency Nodes/Simple Eval"
    },
    "Evaluate Strings": {
      "title": "TSC_EvaluateStrs",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: python_expression, print_to_console",
          "properties": {
            "python_expression": {
              "type": "string"
            },
            "print_to_console": {
              "type": "string"
            }
          },
          "required": ["python_expression", "print_to_console"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Simple Eval"
    },
    "SaveImageWebsocket": {
      "title": "SaveImageWebsocket",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        }
      },
      "$category": "api/image"
    }
  }
}
