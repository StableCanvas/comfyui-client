{
  "title": "Node Types",
  "type": "object",
  "properties": {
    "KSampler": {
      "title": "KSampler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "denoise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling"
    },
    "CheckpointLoaderSimple": {
      "title": "CheckpointLoaderSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "loaders"
    },
    "CLIPTextEncode": {
      "title": "CLIPTextEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, clip",
          "properties": {
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "string"
            }
          },
          "required": ["text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "CLIPSetLastLayer": {
      "title": "CLIPSetLastLayer",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, stop_at_clip_layer",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "stop_at_clip_layer": {
              "type": "number"
            }
          },
          "required": ["clip", "stop_at_clip_layer"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "VAEDecode": {
      "title": "VAEDecode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["samples", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "VAEEncode": {
      "title": "VAEEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["pixels", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "VAEEncodeForInpaint": {
      "title": "VAEEncodeForInpaint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae, mask, grow_mask_by",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "mask": {
              "type": "MASK"
            },
            "grow_mask_by": {
              "type": "number"
            }
          },
          "required": ["pixels", "vae", "mask", "grow_mask_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/inpaint"
    },
    "VAELoader": {
      "title": "VAELoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae_name",
          "properties": {
            "vae_name": {
              "type": "string"
            }
          },
          "required": ["vae_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VAE",
          "items": [
            {
              "type": "VAE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "EmptyLatentImage": {
      "title": "EmptyLatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentUpscale": {
      "title": "LatentUpscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, upscale_method, width, height, crop",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "upscale_method": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["samples", "upscale_method", "width", "height", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentUpscaleBy": {
      "title": "LatentUpscaleBy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, upscale_method, scale_by",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "upscale_method": {
              "type": "string"
            },
            "scale_by": {
              "type": "number"
            }
          },
          "required": ["samples", "upscale_method", "scale_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentFromBatch": {
      "title": "LatentFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, batch_index, length",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "batch_index": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["samples", "batch_index", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "RepeatLatentBatch": {
      "title": "RepeatLatentBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, amount",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["samples", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "SaveImage": {
      "title": "SaveImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["images", "filename_prefix"]
        }
      },
      "$category": "image"
    },
    "PreviewImage": {
      "title": "PreviewImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        }
      },
      "$category": "image"
    },
    "LoadImage": {
      "title": "LoadImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "string"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "image"
    },
    "LoadImageMask": {
      "title": "LoadImageMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel",
          "properties": {
            "image": {
              "type": "string"
            },
            "channel": {
              "type": "string"
            }
          },
          "required": ["image", "channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "LoadImageOutput": {
      "title": "LoadImageOutput",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "COMBO"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "image"
    },
    "ImageScale": {
      "title": "ImageScale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, width, height, crop",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["image", "upscale_method", "width", "height", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageScaleBy": {
      "title": "ImageScaleBy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, scale_by",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "scale_by": {
              "type": "number"
            }
          },
          "required": ["image", "upscale_method", "scale_by"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageInvert": {
      "title": "ImageInvert",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ImageBatch": {
      "title": "ImageBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            }
          },
          "required": ["image1", "image2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ImagePadForOutpaint": {
      "title": "ImagePadForOutpaint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, left, top, right, bottom, feathering",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "left": {
              "type": "number"
            },
            "top": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            },
            "feathering": {
              "type": "number"
            }
          },
          "required": ["image", "left", "top", "right", "bottom", "feathering"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "image"
    },
    "EmptyImage": {
      "title": "EmptyImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size, color",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "color": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size", "color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "ConditioningAverage": {
      "title": "ConditioningAverage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, conditioning_from, conditioning_to_strength",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "conditioning_from": {
              "type": "CONDITIONING"
            },
            "conditioning_to_strength": {
              "type": "number"
            }
          },
          "required": [
            "conditioning_to",
            "conditioning_from",
            "conditioning_to_strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningCombine": {
      "title": "ConditioningCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_1, conditioning_2",
          "properties": {
            "conditioning_1": {
              "type": "CONDITIONING"
            },
            "conditioning_2": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning_1", "conditioning_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningConcat": {
      "title": "ConditioningConcat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, conditioning_from",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "conditioning_from": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning_to", "conditioning_from"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetArea": {
      "title": "ConditioningSetArea",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, width, height, x, y, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "width", "height", "x", "y", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetAreaPercentage": {
      "title": "ConditioningSetAreaPercentage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, width, height, x, y, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "width", "height", "x", "y", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetAreaStrength": {
      "title": "ConditioningSetAreaStrength",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ConditioningSetMask": {
      "title": "ConditioningSetMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, mask, strength, set_cond_area",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "mask": {
              "type": "MASK"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["conditioning", "mask", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "KSamplerAdvanced": {
      "title": "KSamplerAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, add_noise, noise_seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, start_at_step, end_at_step, return_with_leftover_noise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "add_noise": {
              "type": "string"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "start_at_step": {
              "type": "number"
            },
            "end_at_step": {
              "type": "number"
            },
            "return_with_leftover_noise": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "add_noise",
            "noise_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "start_at_step",
            "end_at_step",
            "return_with_leftover_noise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling"
    },
    "SetLatentNoiseMask": {
      "title": "SetLatentNoiseMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, mask",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["samples", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/inpaint"
    },
    "LatentComposite": {
      "title": "LatentComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples_to, samples_from, x, y, feather",
          "properties": {
            "samples_to": {
              "type": "LATENT"
            },
            "samples_from": {
              "type": "LATENT"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "feather": {
              "type": "number"
            }
          },
          "required": ["samples_to", "samples_from", "x", "y", "feather"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "LatentBlend": {
      "title": "LatentBlend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2, blend_factor",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            },
            "blend_factor": {
              "type": "number"
            }
          },
          "required": ["samples1", "samples2", "blend_factor"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "LatentRotate": {
      "title": "LatentRotate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, rotation",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "rotation": {
              "type": "string"
            }
          },
          "required": ["samples", "rotation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LatentFlip": {
      "title": "LatentFlip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, flip_method",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "flip_method": {
              "type": "string"
            }
          },
          "required": ["samples", "flip_method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LatentCrop": {
      "title": "LatentCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, width, height, x, y",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": ["samples", "width", "height", "x", "y"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/transform"
    },
    "LoraLoader": {
      "title": "LoraLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, lora_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "lora_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "loaders"
    },
    "CLIPLoader": {
      "title": "CLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name, type",
          "properties": {
            "clip_name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "UNETLoader": {
      "title": "UNETLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: unet_name, weight_dtype",
          "properties": {
            "unet_name": {
              "type": "string"
            },
            "weight_dtype": {
              "type": "string"
            }
          },
          "required": ["unet_name", "weight_dtype"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "DualCLIPLoader": {
      "title": "DualCLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, type",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "CLIPVisionEncode": {
      "title": "CLIPVisionEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, image, crop",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "image": {
              "type": "IMAGE"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["clip_vision", "image", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP_VISION_OUTPUT",
          "items": [
            {
              "type": "CLIP_VISION_OUTPUT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "StyleModelApply": {
      "title": "StyleModelApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, style_model, clip_vision_output, strength, strength_type",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "style_model": {
              "type": "STYLE_MODEL"
            },
            "clip_vision_output": {
              "type": "CLIP_VISION_OUTPUT"
            },
            "strength": {
              "type": "number"
            },
            "strength_type": {
              "type": "string"
            }
          },
          "required": [
            "conditioning",
            "style_model",
            "clip_vision_output",
            "strength",
            "strength_type"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/style_model"
    },
    "unCLIPConditioning": {
      "title": "unCLIPConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, clip_vision_output, strength, noise_augmentation",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "clip_vision_output": {
              "type": "CLIP_VISION_OUTPUT"
            },
            "strength": {
              "type": "number"
            },
            "noise_augmentation": {
              "type": "number"
            }
          },
          "required": [
            "conditioning",
            "clip_vision_output",
            "strength",
            "noise_augmentation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "ControlNetApply": {
      "title": "ControlNetApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, control_net, image, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["conditioning", "control_net", "image", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/controlnet"
    },
    "ControlNetApplyAdvanced": {
      "title": "ControlNetApplyAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/controlnet"
    },
    "ControlNetLoader": {
      "title": "ControlNetLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net_name",
          "properties": {
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "DiffControlNetLoader": {
      "title": "DiffControlNetLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, control_net_name",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["model", "control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "StyleModelLoader": {
      "title": "StyleModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: style_model_name",
          "properties": {
            "style_model_name": {
              "type": "string"
            }
          },
          "required": ["style_model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STYLE_MODEL",
          "items": [
            {
              "type": "STYLE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "CLIPVisionLoader": {
      "title": "CLIPVisionLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name",
          "properties": {
            "clip_name": {
              "type": "string"
            }
          },
          "required": ["clip_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP_VISION",
          "items": [
            {
              "type": "CLIP_VISION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "VAEDecodeTiled": {
      "title": "VAEDecodeTiled",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae, tile_size, overlap, temporal_size, temporal_overlap",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            },
            "tile_size": {
              "type": "number"
            },
            "overlap": {
              "type": "number"
            },
            "temporal_size": {
              "type": "number"
            },
            "temporal_overlap": {
              "type": "number"
            }
          },
          "required": [
            "samples",
            "vae",
            "tile_size",
            "overlap",
            "temporal_size",
            "temporal_overlap"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "VAEEncodeTiled": {
      "title": "VAEEncodeTiled",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pixels, vae, tile_size, overlap, temporal_size, temporal_overlap",
          "properties": {
            "pixels": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "tile_size": {
              "type": "number"
            },
            "overlap": {
              "type": "number"
            },
            "temporal_size": {
              "type": "number"
            },
            "temporal_overlap": {
              "type": "number"
            }
          },
          "required": [
            "pixels",
            "vae",
            "tile_size",
            "overlap",
            "temporal_size",
            "temporal_overlap"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "unCLIPCheckpointLoader": {
      "title": "unCLIPCheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE, CLIP_VISION",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "CLIP_VISION"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "loaders"
    },
    "GLIGENLoader": {
      "title": "GLIGENLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: gligen_name",
          "properties": {
            "gligen_name": {
              "type": "string"
            }
          },
          "required": ["gligen_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GLIGEN",
          "items": [
            {
              "type": "GLIGEN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "GLIGENTextBoxApply": {
      "title": "GLIGENTextBoxApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_to, clip, gligen_textbox_model, text, width, height, x, y",
          "properties": {
            "conditioning_to": {
              "type": "CONDITIONING"
            },
            "clip": {
              "type": "CLIP"
            },
            "gligen_textbox_model": {
              "type": "GLIGEN"
            },
            "text": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": [
            "conditioning_to",
            "clip",
            "gligen_textbox_model",
            "text",
            "width",
            "height",
            "x",
            "y"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/gligen"
    },
    "InpaintModelConditioning": {
      "title": "InpaintModelConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, pixels, mask, noise_mask",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "pixels": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "noise_mask": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "pixels",
            "mask",
            "noise_mask"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/inpaint"
    },
    "CheckpointLoader": {
      "title": "CheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: config_name, ckpt_name",
          "properties": {
            "config_name": {
              "type": "string"
            },
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["config_name", "ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "advanced/loaders"
    },
    "DiffusersLoader": {
      "title": "DiffusersLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_path",
          "properties": {
            "model_path": {
              "type": "string"
            }
          },
          "required": ["model_path"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "advanced/loaders/deprecated"
    },
    "LoadLatent": {
      "title": "LoadLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent",
          "properties": {
            "latent": {
              "type": "string"
            }
          },
          "required": ["latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "SaveLatent": {
      "title": "SaveLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, filename_prefix",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["samples", "filename_prefix"]
        }
      },
      "$category": "_for_testing"
    },
    "ConditioningZeroOut": {
      "title": "ConditioningZeroOut",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "ConditioningSetTimestepRange": {
      "title": "ConditioningSetTimestepRange",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, start, end",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "start": {
              "type": "number"
            },
            "end": {
              "type": "number"
            }
          },
          "required": ["conditioning", "start", "end"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "LoraLoaderModelOnly": {
      "title": "LoraLoaderModelOnly",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, lora_name, strength_model",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["model", "lora_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "LatentAdd": {
      "title": "LatentAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentSubtract": {
      "title": "LatentSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentMultiply": {
      "title": "LatentMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, multiplier",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["samples", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentInterpolate": {
      "title": "LatentInterpolate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2, ratio",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["samples1", "samples2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentConcat": {
      "title": "LatentConcat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2, dim",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            },
            "dim": {
              "type": "string"
            }
          },
          "required": ["samples1", "samples2", "dim"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentCut": {
      "title": "LatentCut",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, dim, index, amount",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "dim": {
              "type": "string"
            },
            "index": {
              "type": "number"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["samples", "dim", "index", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentBatch": {
      "title": "LatentBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples1, samples2",
          "properties": {
            "samples1": {
              "type": "LATENT"
            },
            "samples2": {
              "type": "LATENT"
            }
          },
          "required": ["samples1", "samples2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "LatentBatchSeedBehavior": {
      "title": "LatentBatchSeedBehavior",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, seed_behavior",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "seed_behavior": {
              "type": "string"
            }
          },
          "required": ["samples", "seed_behavior"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced"
    },
    "LatentApplyOperation": {
      "title": "LatentApplyOperation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, operation",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "operation": {
              "type": "LATENT_OPERATION"
            }
          },
          "required": ["samples", "operation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced/operations"
    },
    "LatentApplyOperationCFG": {
      "title": "LatentApplyOperationCFG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, operation",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "operation": {
              "type": "LATENT_OPERATION"
            }
          },
          "required": ["model", "operation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced/operations"
    },
    "LatentOperationTonemapReinhard": {
      "title": "LatentOperationTonemapReinhard",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: multiplier",
          "properties": {
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_OPERATION",
          "items": [
            {
              "type": "LATENT_OPERATION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced/operations"
    },
    "LatentOperationSharpen": {
      "title": "LatentOperationSharpen",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sharpen_radius, sigma, alpha",
          "properties": {
            "sharpen_radius": {
              "type": "number"
            },
            "sigma": {
              "type": "number"
            },
            "alpha": {
              "type": "number"
            }
          },
          "required": ["sharpen_radius", "sigma", "alpha"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_OPERATION",
          "items": [
            {
              "type": "LATENT_OPERATION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/advanced/operations"
    },
    "HypernetworkLoader": {
      "title": "HypernetworkLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, hypernetwork_name, strength",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "hypernetwork_name": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["model", "hypernetwork_name", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "UpscaleModelLoader": {
      "title": "UpscaleModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name",
          "properties": {
            "model_name": {
              "type": "string"
            }
          },
          "required": ["model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: UPSCALE_MODEL",
          "items": [
            {
              "type": "UPSCALE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "ImageUpscaleWithModel": {
      "title": "ImageUpscaleWithModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_model, image",
          "properties": {
            "upscale_model": {
              "type": "UPSCALE_MODEL"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["upscale_model", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "ImageBlend": {
      "title": "Blend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, blend_factor, blend_mode",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "blend_factor": {
              "type": "number"
            },
            "blend_mode": {
              "type": "string"
            }
          },
          "required": ["image1", "image2", "blend_factor", "blend_mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageBlur": {
      "title": "Blur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, blur_radius, sigma",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "blur_radius": {
              "type": "number"
            },
            "sigma": {
              "type": "number"
            }
          },
          "required": ["image", "blur_radius", "sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageQuantize": {
      "title": "Quantize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, colors, dither",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "colors": {
              "type": "number"
            },
            "dither": {
              "type": "string"
            }
          },
          "required": ["image", "colors", "dither"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageSharpen": {
      "title": "Sharpen",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sharpen_radius, sigma, alpha",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sharpen_radius": {
              "type": "number"
            },
            "sigma": {
              "type": "number"
            },
            "alpha": {
              "type": "number"
            }
          },
          "required": ["image", "sharpen_radius", "sigma", "alpha"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageScaleToTotalPixels": {
      "title": "ImageScaleToTotalPixels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, upscale_method, megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "upscale_method": {
              "type": "string"
            },
            "megapixels": {
              "type": "number"
            }
          },
          "required": ["image", "upscale_method", "megapixels"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "LatentCompositeMasked": {
      "title": "LatentCompositeMasked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, resize_source",
          "properties": {
            "destination": {
              "type": "LATENT"
            },
            "source": {
              "type": "LATENT"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "resize_source": {
              "type": "BOOLEAN"
            }
          },
          "required": ["destination", "source", "x", "y", "resize_source"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent"
    },
    "ImageCompositeMasked": {
      "title": "ImageCompositeMasked",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, resize_source",
          "properties": {
            "destination": {
              "type": "IMAGE"
            },
            "source": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "resize_source": {
              "type": "BOOLEAN"
            }
          },
          "required": ["destination", "source", "x", "y", "resize_source"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "MaskToImage": {
      "title": "MaskToImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ImageToMask": {
      "title": "ImageToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "channel": {
              "type": "string"
            }
          },
          "required": ["image", "channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ImageColorToMask": {
      "title": "ImageColorToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, color",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "color": {
              "type": "number"
            }
          },
          "required": ["image", "color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "SolidMask": {
      "title": "SolidMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value, width, height",
          "properties": {
            "value": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["value", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "InvertMask": {
      "title": "InvertMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "CropMask": {
      "title": "CropMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, x, y, width, height",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["mask", "x", "y", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "MaskComposite": {
      "title": "MaskComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, operation",
          "properties": {
            "destination": {
              "type": "MASK"
            },
            "source": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "operation": {
              "type": "string"
            }
          },
          "required": ["destination", "source", "x", "y", "operation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "FeatherMask": {
      "title": "FeatherMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, left, top, right, bottom",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "left": {
              "type": "number"
            },
            "top": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            }
          },
          "required": ["mask", "left", "top", "right", "bottom"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "GrowMask": {
      "title": "GrowMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, expand, tapered_corners",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "expand": {
              "type": "number"
            },
            "tapered_corners": {
              "type": "BOOLEAN"
            }
          },
          "required": ["mask", "expand", "tapered_corners"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "ThresholdMask": {
      "title": "ThresholdMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, value",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "value": {
              "type": "number"
            }
          },
          "required": ["mask", "value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask"
    },
    "MaskPreview": {
      "title": "MaskPreview",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        }
      },
      "$category": "mask"
    },
    "PorterDuffImageComposite": {
      "title": "PorterDuffImageComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: source, source_alpha, destination, destination_alpha, mode",
          "properties": {
            "source": {
              "type": "IMAGE"
            },
            "source_alpha": {
              "type": "MASK"
            },
            "destination": {
              "type": "IMAGE"
            },
            "destination_alpha": {
              "type": "MASK"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": [
            "source",
            "source_alpha",
            "destination",
            "destination_alpha",
            "mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mask/compositing"
    },
    "SplitImageWithAlpha": {
      "title": "SplitImageWithAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mask/compositing"
    },
    "JoinImageWithAlpha": {
      "title": "JoinImageWithAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, alpha",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "alpha": {
              "type": "MASK"
            }
          },
          "required": ["image", "alpha"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mask/compositing"
    },
    "RebatchLatents": {
      "title": "LatentRebatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latents, batch_size",
          "properties": {
            "latents": {
              "type": "LATENT"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["latents", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/batch"
    },
    "RebatchImages": {
      "title": "ImageRebatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, batch_size",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["images", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/batch"
    },
    "ModelMergeSimple": {
      "title": "ModelMergeSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, ratio",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeBlocks": {
      "title": "ModelMergeBlocks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, input, middle, out",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "input": {
              "type": "number"
            },
            "middle": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "input", "middle", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeSubtract": {
      "title": "ModelSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, multiplier",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["model1", "model2", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelMergeAdd": {
      "title": "ModelAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            }
          },
          "required": ["model1", "model2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CheckpointSave": {
      "title": "CheckpointSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, vae, filename_prefix",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["model", "clip", "vae", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeSimple": {
      "title": "CLIPMergeSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2, ratio",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["clip1", "clip2", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeSubtract": {
      "title": "CLIPSubtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2, multiplier",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["clip1", "clip2", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPMergeAdd": {
      "title": "CLIPAdd",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip1, clip2",
          "properties": {
            "clip1": {
              "type": "CLIP"
            },
            "clip2": {
              "type": "CLIP"
            }
          },
          "required": ["clip1", "clip2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging"
    },
    "CLIPSave": {
      "title": "CLIPSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, filename_prefix",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["clip", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "VAESave": {
      "title": "VAESave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae, filename_prefix",
          "properties": {
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["vae", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "ModelSave": {
      "title": "ModelSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, filename_prefix",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["model", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "TomePatchModel": {
      "title": "TomePatchModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ratio",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": ["model", "ratio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "CLIPTextEncodeSDXLRefiner": {
      "title": "CLIPTextEncodeSDXLRefiner",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ascore, width, height, text, clip",
          "properties": {
            "ascore": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["ascore", "width", "height", "text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "CLIPTextEncodeSDXL": {
      "title": "CLIPTextEncodeSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, width, height, crop_w, crop_h, target_width, target_height, text_g, text_l",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "crop_w": {
              "type": "number"
            },
            "crop_h": {
              "type": "number"
            },
            "target_width": {
              "type": "number"
            },
            "target_height": {
              "type": "number"
            },
            "text_g": {
              "type": "string"
            },
            "text_l": {
              "type": "string"
            }
          },
          "required": [
            "clip",
            "width",
            "height",
            "crop_w",
            "crop_h",
            "target_width",
            "target_height",
            "text_g",
            "text_l"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "Canny": {
      "title": "Canny",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, low_threshold, high_threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "low_threshold": {
              "type": "number"
            },
            "high_threshold": {
              "type": "number"
            }
          },
          "required": ["image", "low_threshold", "high_threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/preprocessors"
    },
    "FreeU": {
      "title": "FreeU",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, b1, b2, s1, s2",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "b1": {
              "type": "number"
            },
            "b2": {
              "type": "number"
            },
            "s1": {
              "type": "number"
            },
            "s2": {
              "type": "number"
            }
          },
          "required": ["model", "b1", "b2", "s1", "s2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "FreeU_V2": {
      "title": "FreeU_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, b1, b2, s1, s2",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "b1": {
              "type": "number"
            },
            "b2": {
              "type": "number"
            },
            "s1": {
              "type": "number"
            },
            "s2": {
              "type": "number"
            }
          },
          "required": ["model", "b1", "b2", "s1", "s2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "SamplerCustom": {
      "title": "SamplerCustom",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, add_noise, noise_seed, cfg, positive, negative, sampler, sigmas, latent_image",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "add_noise": {
              "type": "BOOLEAN"
            },
            "noise_seed": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "sampler": {
              "type": "SAMPLER"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": [
            "model",
            "add_noise",
            "noise_seed",
            "cfg",
            "positive",
            "negative",
            "sampler",
            "sigmas",
            "latent_image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling"
    },
    "BasicScheduler": {
      "title": "BasicScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scheduler, steps, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scheduler": {
              "type": "string"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model", "scheduler", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "KarrasScheduler": {
      "title": "KarrasScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min, rho",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            },
            "rho": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min", "rho"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "ExponentialScheduler": {
      "title": "ExponentialScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "PolyexponentialScheduler": {
      "title": "PolyexponentialScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min, rho",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            },
            "rho": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min", "rho"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "LaplaceScheduler": {
      "title": "LaplaceScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, sigma_max, sigma_min, mu, beta",
          "properties": {
            "steps": {
              "type": "number"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            },
            "mu": {
              "type": "number"
            },
            "beta": {
              "type": "number"
            }
          },
          "required": ["steps", "sigma_max", "sigma_min", "mu", "beta"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "VPScheduler": {
      "title": "VPScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, beta_d, beta_min, eps_s",
          "properties": {
            "steps": {
              "type": "number"
            },
            "beta_d": {
              "type": "number"
            },
            "beta_min": {
              "type": "number"
            },
            "eps_s": {
              "type": "number"
            }
          },
          "required": ["steps", "beta_d", "beta_min", "eps_s"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "BetaSamplingScheduler": {
      "title": "BetaSamplingScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, steps, alpha, beta",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "steps": {
              "type": "number"
            },
            "alpha": {
              "type": "number"
            },
            "beta": {
              "type": "number"
            }
          },
          "required": ["model", "steps", "alpha", "beta"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "SDTurboScheduler": {
      "title": "SDTurboScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, steps, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "KSamplerSelect": {
      "title": "KSamplerSelect",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sampler_name",
          "properties": {
            "sampler_name": {
              "type": "string"
            }
          },
          "required": ["sampler_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerAncestral": {
      "title": "SamplerEulerAncestral",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerAncestralCFGPP": {
      "title": "SamplerEulerAncestralCFGPP",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerLMS": {
      "title": "SamplerLMS",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: order",
          "properties": {
            "order": {
              "type": "number"
            }
          },
          "required": ["order"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_3M_SDE": {
      "title": "SamplerDPMPP_3M_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise, noise_device",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["eta", "s_noise", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_2M_SDE": {
      "title": "SamplerDPMPP_2M_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: solver_type, eta, s_noise, noise_device",
          "properties": {
            "solver_type": {
              "type": "string"
            },
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["solver_type", "eta", "s_noise", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_SDE": {
      "title": "SamplerDPMPP_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise, r, noise_device",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "r": {
              "type": "number"
            },
            "noise_device": {
              "type": "string"
            }
          },
          "required": ["eta", "s_noise", "r", "noise_device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMPP_2S_Ancestral": {
      "title": "SamplerDPMPP_2S_Ancestral",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: eta, s_noise",
          "properties": {
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerDPMAdaptative": {
      "title": "SamplerDPMAdaptative",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: order, rtol, atol, h_init, pcoeff, icoeff, dcoeff, accept_safety, eta, s_noise",
          "properties": {
            "order": {
              "type": "number"
            },
            "rtol": {
              "type": "number"
            },
            "atol": {
              "type": "number"
            },
            "h_init": {
              "type": "number"
            },
            "pcoeff": {
              "type": "number"
            },
            "icoeff": {
              "type": "number"
            },
            "dcoeff": {
              "type": "number"
            },
            "accept_safety": {
              "type": "number"
            },
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": [
            "order",
            "rtol",
            "atol",
            "h_init",
            "pcoeff",
            "icoeff",
            "dcoeff",
            "accept_safety",
            "eta",
            "s_noise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerER_SDE": {
      "title": "SamplerER_SDE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: solver_type, max_stage, eta, s_noise",
          "properties": {
            "solver_type": {
              "type": "string"
            },
            "max_stage": {
              "type": "number"
            },
            "eta": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            }
          },
          "required": ["solver_type", "max_stage", "eta", "s_noise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerSASolver": {
      "title": "SamplerSASolver",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, eta, sde_start_percent, sde_end_percent, s_noise, predictor_order, corrector_order, use_pece, simple_order_2",
          "properties": {
            "model": {
              "type": "string"
            },
            "eta": {
              "type": "number"
            },
            "sde_start_percent": {
              "type": "number"
            },
            "sde_end_percent": {
              "type": "number"
            },
            "s_noise": {
              "type": "number"
            },
            "predictor_order": {
              "type": "number"
            },
            "corrector_order": {
              "type": "number"
            },
            "use_pece": {
              "type": "string"
            },
            "simple_order_2": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "eta",
            "sde_start_percent",
            "sde_end_percent",
            "s_noise",
            "predictor_order",
            "corrector_order",
            "use_pece",
            "simple_order_2"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SplitSigmas": {
      "title": "SplitSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, step",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "step": {
              "type": "number"
            }
          },
          "required": ["sigmas", "step"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS, SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            },
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "SplitSigmasDenoise": {
      "title": "SplitSigmasDenoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, denoise",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["sigmas", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS, SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            },
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "FlipSigmas": {
      "title": "FlipSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            }
          },
          "required": ["sigmas"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "SetFirstSigma": {
      "title": "SetFirstSigma",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, sigma",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "sigma": {
              "type": "number"
            }
          },
          "required": ["sigmas", "sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "ExtendIntermediateSigmas": {
      "title": "ExtendIntermediateSigmas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigmas, steps, start_at_sigma, end_at_sigma, spacing",
          "properties": {
            "sigmas": {
              "type": "SIGMAS"
            },
            "steps": {
              "type": "number"
            },
            "start_at_sigma": {
              "type": "number"
            },
            "end_at_sigma": {
              "type": "number"
            },
            "spacing": {
              "type": "string"
            }
          },
          "required": [
            "sigmas",
            "steps",
            "start_at_sigma",
            "end_at_sigma",
            "spacing"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "SamplingPercentToSigma": {
      "title": "SamplingPercentToSigma",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling_percent, return_actual_sigma",
          "properties": {
            "model": {
              "type": "string"
            },
            "sampling_percent": {
              "type": "number"
            },
            "return_actual_sigma": {
              "type": "string"
            }
          },
          "required": ["model", "sampling_percent", "return_actual_sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/sigmas"
    },
    "CFGGuider": {
      "title": "CFGGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, positive, negative, cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "cfg": {
              "type": "number"
            }
          },
          "required": ["model", "positive", "negative", "cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "DualCFGGuider": {
      "title": "DualCFGGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, cond1, cond2, negative, cfg_conds, cfg_cond2_negative, style",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "cond1": {
              "type": "CONDITIONING"
            },
            "cond2": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "cfg_conds": {
              "type": "number"
            },
            "cfg_cond2_negative": {
              "type": "number"
            },
            "style": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "cond1",
            "cond2",
            "negative",
            "cfg_conds",
            "cfg_cond2_negative",
            "style"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "BasicGuider": {
      "title": "BasicGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, conditioning",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["model", "conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/guiders"
    },
    "RandomNoise": {
      "title": "RandomNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: noise_seed",
          "properties": {
            "noise_seed": {
              "type": "number"
            }
          },
          "required": ["noise_seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE",
          "items": [
            {
              "type": "NOISE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/noise"
    },
    "DisableNoise": {
      "title": "DisableNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE",
          "items": [
            {
              "type": "NOISE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/noise"
    },
    "AddNoise": {
      "title": "AddNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, noise, sigmas, latent_image",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "noise": {
              "type": "NOISE"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": ["model", "noise", "sigmas", "latent_image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/custom_sampling/noise"
    },
    "SamplerCustomAdvanced": {
      "title": "SamplerCustomAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: noise, guider, sampler, sigmas, latent_image",
          "properties": {
            "noise": {
              "type": "NOISE"
            },
            "guider": {
              "type": "GUIDER"
            },
            "sampler": {
              "type": "SAMPLER"
            },
            "sigmas": {
              "type": "SIGMAS"
            },
            "latent_image": {
              "type": "LATENT"
            }
          },
          "required": ["noise", "guider", "sampler", "sigmas", "latent_image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "sampling/custom_sampling"
    },
    "HyperTile": {
      "title": "HyperTile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, tile_size, swap_size, max_depth, scale_depth",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "tile_size": {
              "type": "number"
            },
            "swap_size": {
              "type": "number"
            },
            "max_depth": {
              "type": "number"
            },
            "scale_depth": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "model",
            "tile_size",
            "swap_size",
            "max_depth",
            "scale_depth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "ModelSamplingDiscrete": {
      "title": "ModelSamplingDiscrete",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, zsnr",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "zsnr": {
              "type": "BOOLEAN"
            }
          },
          "required": ["model", "sampling", "zsnr"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingContinuousEDM": {
      "title": "ModelSamplingContinuousEDM",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, sigma_max, sigma_min",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["model", "sampling", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingContinuousV": {
      "title": "ModelSamplingContinuousV",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampling, sigma_max, sigma_min",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampling": {
              "type": "string"
            },
            "sigma_max": {
              "type": "number"
            },
            "sigma_min": {
              "type": "number"
            }
          },
          "required": ["model", "sampling", "sigma_max", "sigma_min"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingStableCascade": {
      "title": "ModelSamplingStableCascade",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingSD3": {
      "title": "ModelSamplingSD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingAuraFlow": {
      "title": "ModelSamplingAuraFlow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            }
          },
          "required": ["model", "shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelSamplingFlux": {
      "title": "ModelSamplingFlux",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, max_shift, base_shift, width, height",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "max_shift": {
              "type": "number"
            },
            "base_shift": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["model", "max_shift", "base_shift", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "RescaleCFG": {
      "title": "RescaleCFG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, multiplier",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["model", "multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "ModelComputeDtype": {
      "title": "ModelComputeDtype",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, dtype",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "dtype": {
              "type": "string"
            }
          },
          "required": ["model", "dtype"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/debug/model"
    },
    "PatchModelAddDownscale": {
      "title": "PatchModelAddDownscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, block_number, downscale_factor, start_percent, end_percent, downscale_after_skip, downscale_method, upscale_method",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "block_number": {
              "type": "number"
            },
            "downscale_factor": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "downscale_after_skip": {
              "type": "BOOLEAN"
            },
            "downscale_method": {
              "type": "string"
            },
            "upscale_method": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "block_number",
            "downscale_factor",
            "start_percent",
            "end_percent",
            "downscale_after_skip",
            "downscale_method",
            "upscale_method"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "ImageOnlyCheckpointLoader": {
      "title": "ImageOnlyCheckpointLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP_VISION, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP_VISION"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "loaders/video_models"
    },
    "SVD_img2vid_Conditioning": {
      "title": "SVD_img2vid_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, video_frames, motion_bucket_id, fps, augmentation_level",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "video_frames": {
              "type": "number"
            },
            "motion_bucket_id": {
              "type": "number"
            },
            "fps": {
              "type": "number"
            },
            "augmentation_level": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "video_frames",
            "motion_bucket_id",
            "fps",
            "augmentation_level"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "VideoLinearCFGGuidance": {
      "title": "VideoLinearCFGGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, min_cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "min_cfg": {
              "type": "number"
            }
          },
          "required": ["model", "min_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/video_models"
    },
    "VideoTriangleCFGGuidance": {
      "title": "VideoTriangleCFGGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, min_cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "min_cfg": {
              "type": "number"
            }
          },
          "required": ["model", "min_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/video_models"
    },
    "ImageOnlyCheckpointSave": {
      "title": "ImageOnlyCheckpointSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip_vision, vae, filename_prefix",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "vae": {
              "type": "VAE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["model", "clip_vision", "vae", "filename_prefix"]
        }
      },
      "$category": "advanced/model_merging"
    },
    "ConditioningSetAreaPercentageVideo": {
      "title": "ConditioningSetAreaPercentageVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, width, height, temporal, x, y, z, strength",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "temporal": {
              "type": "number"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "z": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": [
            "conditioning",
            "width",
            "height",
            "temporal",
            "x",
            "y",
            "z",
            "strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "TrainLoraNode": {
      "title": "TrainLoraNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latents, positive, batch_size, grad_accumulation_steps, steps, learning_rate, rank, optimizer, loss_function, seed, training_dtype, lora_dtype, algorithm, gradient_checkpointing, existing_lora",
          "properties": {
            "model": {
              "type": "string"
            },
            "latents": {
              "type": "LATENT"
            },
            "positive": {
              "type": "string"
            },
            "batch_size": {
              "type": "number"
            },
            "grad_accumulation_steps": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "learning_rate": {
              "type": "number"
            },
            "rank": {
              "type": "number"
            },
            "optimizer": {
              "type": "string"
            },
            "loss_function": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            },
            "training_dtype": {
              "type": "string"
            },
            "lora_dtype": {
              "type": "string"
            },
            "algorithm": {
              "type": "string"
            },
            "gradient_checkpointing": {
              "type": "string"
            },
            "existing_lora": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "latents",
            "positive",
            "batch_size",
            "grad_accumulation_steps",
            "steps",
            "learning_rate",
            "rank",
            "optimizer",
            "loss_function",
            "seed",
            "training_dtype",
            "lora_dtype",
            "algorithm",
            "gradient_checkpointing",
            "existing_lora"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, LORA_MODEL, LOSS_MAP, INT",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "LORA_MODEL"
            },
            {
              "type": "LOSS_MAP"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "training"
    },
    "SaveLoRANode": {
      "title": "SaveLoRA",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora, prefix",
          "properties": {
            "lora": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            }
          },
          "required": ["lora", "prefix"]
        }
      },
      "$category": "loaders"
    },
    "LoraModelLoader": {
      "title": "LoraModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, lora, strength_model",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "lora": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["model", "lora", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "LoadImageSetFromFolderNode": {
      "title": "LoadImageSetFromFolderNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: folder",
          "properties": {
            "folder": {
              "type": "string"
            }
          },
          "required": ["folder"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "LoadImageTextSetFromFolderNode": {
      "title": "LoadImageTextSetFromFolderNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: folder, clip",
          "properties": {
            "folder": {
              "type": "string"
            },
            "clip": {
              "type": "string"
            }
          },
          "required": ["folder", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, CONDITIONING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "loaders"
    },
    "LossGraphNode": {
      "title": "LossGraphNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: loss, filename_prefix",
          "properties": {
            "loss": {
              "type": "string"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["loss", "filename_prefix"]
        }
      },
      "$category": "training"
    },
    "SelfAttentionGuidance": {
      "title": "SelfAttentionGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scale, blur_sigma",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scale": {
              "type": "number"
            },
            "blur_sigma": {
              "type": "number"
            }
          },
          "required": ["model", "scale", "blur_sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "PerpNeg": {
      "title": "PerpNeg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, empty_conditioning, neg_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "empty_conditioning": {
              "type": "CONDITIONING"
            },
            "neg_scale": {
              "type": "number"
            }
          },
          "required": ["model", "empty_conditioning", "neg_scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "PerpNegGuider": {
      "title": "PerpNegGuider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, positive, negative, empty_conditioning, cfg, neg_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "empty_conditioning": {
              "type": "CONDITIONING"
            },
            "cfg": {
              "type": "number"
            },
            "neg_scale": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "positive",
            "negative",
            "empty_conditioning",
            "cfg",
            "neg_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GUIDER",
          "items": [
            {
              "type": "GUIDER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "StableZero123_Conditioning": {
      "title": "StableZero123_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, batch_size, elevation, azimuth",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            },
            "azimuth": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "batch_size",
            "elevation",
            "azimuth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "StableZero123_Conditioning_Batched": {
      "title": "StableZero123_Conditioning_Batched",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, batch_size, elevation, azimuth, elevation_batch_increment, azimuth_batch_increment",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            },
            "azimuth": {
              "type": "number"
            },
            "elevation_batch_increment": {
              "type": "number"
            },
            "azimuth_batch_increment": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "batch_size",
            "elevation",
            "azimuth",
            "elevation_batch_increment",
            "azimuth_batch_increment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "SV3D_Conditioning": {
      "title": "SV3D_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision, init_image, vae, width, height, video_frames, elevation",
          "properties": {
            "clip_vision": {
              "type": "CLIP_VISION"
            },
            "init_image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "video_frames": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            }
          },
          "required": [
            "clip_vision",
            "init_image",
            "vae",
            "width",
            "height",
            "video_frames",
            "elevation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/3d_models"
    },
    "SD_4XUpscale_Conditioning": {
      "title": "SD_4XUpscale_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, positive, negative, scale_ratio, noise_augmentation",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "scale_ratio": {
              "type": "number"
            },
            "noise_augmentation": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "positive",
            "negative",
            "scale_ratio",
            "noise_augmentation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/upscale_diffusion"
    },
    "PhotoMakerLoader": {
      "title": "PhotoMakerLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: photomaker_model_name",
          "properties": {
            "photomaker_model_name": {
              "type": "string"
            }
          },
          "required": ["photomaker_model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PHOTOMAKER",
          "items": [
            {
              "type": "PHOTOMAKER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/photomaker"
    },
    "PhotoMakerEncode": {
      "title": "PhotoMakerEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: photomaker, image, clip, text",
          "properties": {
            "photomaker": {
              "type": "PHOTOMAKER"
            },
            "image": {
              "type": "IMAGE"
            },
            "clip": {
              "type": "CLIP"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["photomaker", "image", "clip", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/photomaker"
    },
    "CLIPTextEncodePixArtAlpha": {
      "title": "CLIPTextEncodePixArtAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, text, clip",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["width", "height", "text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "CLIPTextEncodeControlnet": {
      "title": "CLIPTextEncodeControlnet",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, conditioning, text",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "conditioning": {
              "type": "CONDITIONING"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["clip", "conditioning", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/conditioning"
    },
    "T5TokenizerOptions": {
      "title": "T5TokenizerOptions",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, min_padding, min_length",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "min_padding": {
              "type": "number"
            },
            "min_length": {
              "type": "number"
            }
          },
          "required": ["clip", "min_padding", "min_length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/conditioning"
    },
    "Morphology": {
      "title": "Morphology",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, operation, kernel_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "operation": {
              "type": "string"
            },
            "kernel_size": {
              "type": "number"
            }
          },
          "required": ["image", "operation", "kernel_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/postprocessing"
    },
    "ImageRGBToYUV": {
      "title": "ImageRGBToYUV",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "image/batch"
    },
    "ImageYUVToRGB": {
      "title": "ImageYUVToRGB",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: Y, U, V",
          "properties": {
            "Y": {
              "type": "IMAGE"
            },
            "U": {
              "type": "IMAGE"
            },
            "V": {
              "type": "IMAGE"
            }
          },
          "required": ["Y", "U", "V"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/batch"
    },
    "StableCascade_EmptyLatentImage": {
      "title": "StableCascade_EmptyLatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, compression, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "compression": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "compression", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "latent/stable_cascade"
    },
    "StableCascade_StageB_Conditioning": {
      "title": "StableCascade_StageB_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, stage_c",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "stage_c": {
              "type": "LATENT"
            }
          },
          "required": ["conditioning", "stage_c"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/stable_cascade"
    },
    "StableCascade_StageC_VAEEncode": {
      "title": "StableCascade_StageC_VAEEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, compression",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "compression": {
              "type": "number"
            }
          },
          "required": ["image", "vae", "compression"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, LATENT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "latent/stable_cascade"
    },
    "StableCascade_SuperResolutionControlnet": {
      "title": "StableCascade_SuperResolutionControlnet",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["image", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, LATENT, LATENT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "_for_testing/stable_cascade"
    },
    "DifferentialDiffusion": {
      "title": "DifferentialDiffusion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "InstructPixToPixConditioning": {
      "title": "InstructPixToPixConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, pixels",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "pixels": {
              "type": "IMAGE"
            }
          },
          "required": ["positive", "negative", "vae", "pixels"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/instructpix2pix"
    },
    "ModelMergeSD1": {
      "title": "ModelMergeSD1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0., input_blocks.1., input_blocks.2., input_blocks.3., input_blocks.4., input_blocks.5., input_blocks.6., input_blocks.7., input_blocks.8., input_blocks.9., input_blocks.10., input_blocks.11., middle_block.0., middle_block.1., middle_block.2., output_blocks.0., output_blocks.1., output_blocks.2., output_blocks.3., output_blocks.4., output_blocks.5., output_blocks.6., output_blocks.7., output_blocks.8., output_blocks.9., output_blocks.10., output_blocks.11., out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0.": {
              "type": "number"
            },
            "input_blocks.1.": {
              "type": "number"
            },
            "input_blocks.2.": {
              "type": "number"
            },
            "input_blocks.3.": {
              "type": "number"
            },
            "input_blocks.4.": {
              "type": "number"
            },
            "input_blocks.5.": {
              "type": "number"
            },
            "input_blocks.6.": {
              "type": "number"
            },
            "input_blocks.7.": {
              "type": "number"
            },
            "input_blocks.8.": {
              "type": "number"
            },
            "input_blocks.9.": {
              "type": "number"
            },
            "input_blocks.10.": {
              "type": "number"
            },
            "input_blocks.11.": {
              "type": "number"
            },
            "middle_block.0.": {
              "type": "number"
            },
            "middle_block.1.": {
              "type": "number"
            },
            "middle_block.2.": {
              "type": "number"
            },
            "output_blocks.0.": {
              "type": "number"
            },
            "output_blocks.1.": {
              "type": "number"
            },
            "output_blocks.2.": {
              "type": "number"
            },
            "output_blocks.3.": {
              "type": "number"
            },
            "output_blocks.4.": {
              "type": "number"
            },
            "output_blocks.5.": {
              "type": "number"
            },
            "output_blocks.6.": {
              "type": "number"
            },
            "output_blocks.7.": {
              "type": "number"
            },
            "output_blocks.8.": {
              "type": "number"
            },
            "output_blocks.9.": {
              "type": "number"
            },
            "output_blocks.10.": {
              "type": "number"
            },
            "output_blocks.11.": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0.",
            "input_blocks.1.",
            "input_blocks.2.",
            "input_blocks.3.",
            "input_blocks.4.",
            "input_blocks.5.",
            "input_blocks.6.",
            "input_blocks.7.",
            "input_blocks.8.",
            "input_blocks.9.",
            "input_blocks.10.",
            "input_blocks.11.",
            "middle_block.0.",
            "middle_block.1.",
            "middle_block.2.",
            "output_blocks.0.",
            "output_blocks.1.",
            "output_blocks.2.",
            "output_blocks.3.",
            "output_blocks.4.",
            "output_blocks.5.",
            "output_blocks.6.",
            "output_blocks.7.",
            "output_blocks.8.",
            "output_blocks.9.",
            "output_blocks.10.",
            "output_blocks.11.",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSD2": {
      "title": "ModelMergeSD1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0., input_blocks.1., input_blocks.2., input_blocks.3., input_blocks.4., input_blocks.5., input_blocks.6., input_blocks.7., input_blocks.8., input_blocks.9., input_blocks.10., input_blocks.11., middle_block.0., middle_block.1., middle_block.2., output_blocks.0., output_blocks.1., output_blocks.2., output_blocks.3., output_blocks.4., output_blocks.5., output_blocks.6., output_blocks.7., output_blocks.8., output_blocks.9., output_blocks.10., output_blocks.11., out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0.": {
              "type": "number"
            },
            "input_blocks.1.": {
              "type": "number"
            },
            "input_blocks.2.": {
              "type": "number"
            },
            "input_blocks.3.": {
              "type": "number"
            },
            "input_blocks.4.": {
              "type": "number"
            },
            "input_blocks.5.": {
              "type": "number"
            },
            "input_blocks.6.": {
              "type": "number"
            },
            "input_blocks.7.": {
              "type": "number"
            },
            "input_blocks.8.": {
              "type": "number"
            },
            "input_blocks.9.": {
              "type": "number"
            },
            "input_blocks.10.": {
              "type": "number"
            },
            "input_blocks.11.": {
              "type": "number"
            },
            "middle_block.0.": {
              "type": "number"
            },
            "middle_block.1.": {
              "type": "number"
            },
            "middle_block.2.": {
              "type": "number"
            },
            "output_blocks.0.": {
              "type": "number"
            },
            "output_blocks.1.": {
              "type": "number"
            },
            "output_blocks.2.": {
              "type": "number"
            },
            "output_blocks.3.": {
              "type": "number"
            },
            "output_blocks.4.": {
              "type": "number"
            },
            "output_blocks.5.": {
              "type": "number"
            },
            "output_blocks.6.": {
              "type": "number"
            },
            "output_blocks.7.": {
              "type": "number"
            },
            "output_blocks.8.": {
              "type": "number"
            },
            "output_blocks.9.": {
              "type": "number"
            },
            "output_blocks.10.": {
              "type": "number"
            },
            "output_blocks.11.": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0.",
            "input_blocks.1.",
            "input_blocks.2.",
            "input_blocks.3.",
            "input_blocks.4.",
            "input_blocks.5.",
            "input_blocks.6.",
            "input_blocks.7.",
            "input_blocks.8.",
            "input_blocks.9.",
            "input_blocks.10.",
            "input_blocks.11.",
            "middle_block.0.",
            "middle_block.1.",
            "middle_block.2.",
            "output_blocks.0.",
            "output_blocks.1.",
            "output_blocks.2.",
            "output_blocks.3.",
            "output_blocks.4.",
            "output_blocks.5.",
            "output_blocks.6.",
            "output_blocks.7.",
            "output_blocks.8.",
            "output_blocks.9.",
            "output_blocks.10.",
            "output_blocks.11.",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSDXL": {
      "title": "ModelMergeSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, time_embed., label_emb., input_blocks.0, input_blocks.1, input_blocks.2, input_blocks.3, input_blocks.4, input_blocks.5, input_blocks.6, input_blocks.7, input_blocks.8, middle_block.0, middle_block.1, middle_block.2, output_blocks.0, output_blocks.1, output_blocks.2, output_blocks.3, output_blocks.4, output_blocks.5, output_blocks.6, output_blocks.7, output_blocks.8, out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "time_embed.": {
              "type": "number"
            },
            "label_emb.": {
              "type": "number"
            },
            "input_blocks.0": {
              "type": "number"
            },
            "input_blocks.1": {
              "type": "number"
            },
            "input_blocks.2": {
              "type": "number"
            },
            "input_blocks.3": {
              "type": "number"
            },
            "input_blocks.4": {
              "type": "number"
            },
            "input_blocks.5": {
              "type": "number"
            },
            "input_blocks.6": {
              "type": "number"
            },
            "input_blocks.7": {
              "type": "number"
            },
            "input_blocks.8": {
              "type": "number"
            },
            "middle_block.0": {
              "type": "number"
            },
            "middle_block.1": {
              "type": "number"
            },
            "middle_block.2": {
              "type": "number"
            },
            "output_blocks.0": {
              "type": "number"
            },
            "output_blocks.1": {
              "type": "number"
            },
            "output_blocks.2": {
              "type": "number"
            },
            "output_blocks.3": {
              "type": "number"
            },
            "output_blocks.4": {
              "type": "number"
            },
            "output_blocks.5": {
              "type": "number"
            },
            "output_blocks.6": {
              "type": "number"
            },
            "output_blocks.7": {
              "type": "number"
            },
            "output_blocks.8": {
              "type": "number"
            },
            "out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "time_embed.",
            "label_emb.",
            "input_blocks.0",
            "input_blocks.1",
            "input_blocks.2",
            "input_blocks.3",
            "input_blocks.4",
            "input_blocks.5",
            "input_blocks.6",
            "input_blocks.7",
            "input_blocks.8",
            "middle_block.0",
            "middle_block.1",
            "middle_block.2",
            "output_blocks.0",
            "output_blocks.1",
            "output_blocks.2",
            "output_blocks.3",
            "output_blocks.4",
            "output_blocks.5",
            "output_blocks.6",
            "output_blocks.7",
            "output_blocks.8",
            "out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSD3_2B": {
      "title": "ModelMergeSD3_2B",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embed., x_embedder., context_embedder., y_embedder., t_embedder., joint_blocks.0., joint_blocks.1., joint_blocks.2., joint_blocks.3., joint_blocks.4., joint_blocks.5., joint_blocks.6., joint_blocks.7., joint_blocks.8., joint_blocks.9., joint_blocks.10., joint_blocks.11., joint_blocks.12., joint_blocks.13., joint_blocks.14., joint_blocks.15., joint_blocks.16., joint_blocks.17., joint_blocks.18., joint_blocks.19., joint_blocks.20., joint_blocks.21., joint_blocks.22., joint_blocks.23., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embed.": {
              "type": "number"
            },
            "x_embedder.": {
              "type": "number"
            },
            "context_embedder.": {
              "type": "number"
            },
            "y_embedder.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "joint_blocks.0.": {
              "type": "number"
            },
            "joint_blocks.1.": {
              "type": "number"
            },
            "joint_blocks.2.": {
              "type": "number"
            },
            "joint_blocks.3.": {
              "type": "number"
            },
            "joint_blocks.4.": {
              "type": "number"
            },
            "joint_blocks.5.": {
              "type": "number"
            },
            "joint_blocks.6.": {
              "type": "number"
            },
            "joint_blocks.7.": {
              "type": "number"
            },
            "joint_blocks.8.": {
              "type": "number"
            },
            "joint_blocks.9.": {
              "type": "number"
            },
            "joint_blocks.10.": {
              "type": "number"
            },
            "joint_blocks.11.": {
              "type": "number"
            },
            "joint_blocks.12.": {
              "type": "number"
            },
            "joint_blocks.13.": {
              "type": "number"
            },
            "joint_blocks.14.": {
              "type": "number"
            },
            "joint_blocks.15.": {
              "type": "number"
            },
            "joint_blocks.16.": {
              "type": "number"
            },
            "joint_blocks.17.": {
              "type": "number"
            },
            "joint_blocks.18.": {
              "type": "number"
            },
            "joint_blocks.19.": {
              "type": "number"
            },
            "joint_blocks.20.": {
              "type": "number"
            },
            "joint_blocks.21.": {
              "type": "number"
            },
            "joint_blocks.22.": {
              "type": "number"
            },
            "joint_blocks.23.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embed.",
            "x_embedder.",
            "context_embedder.",
            "y_embedder.",
            "t_embedder.",
            "joint_blocks.0.",
            "joint_blocks.1.",
            "joint_blocks.2.",
            "joint_blocks.3.",
            "joint_blocks.4.",
            "joint_blocks.5.",
            "joint_blocks.6.",
            "joint_blocks.7.",
            "joint_blocks.8.",
            "joint_blocks.9.",
            "joint_blocks.10.",
            "joint_blocks.11.",
            "joint_blocks.12.",
            "joint_blocks.13.",
            "joint_blocks.14.",
            "joint_blocks.15.",
            "joint_blocks.16.",
            "joint_blocks.17.",
            "joint_blocks.18.",
            "joint_blocks.19.",
            "joint_blocks.20.",
            "joint_blocks.21.",
            "joint_blocks.22.",
            "joint_blocks.23.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeAuraflow": {
      "title": "ModelMergeAuraflow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, init_x_linear., positional_encoding, cond_seq_linear., register_tokens, t_embedder., double_layers.0., double_layers.1., double_layers.2., double_layers.3., single_layers.0., single_layers.1., single_layers.2., single_layers.3., single_layers.4., single_layers.5., single_layers.6., single_layers.7., single_layers.8., single_layers.9., single_layers.10., single_layers.11., single_layers.12., single_layers.13., single_layers.14., single_layers.15., single_layers.16., single_layers.17., single_layers.18., single_layers.19., single_layers.20., single_layers.21., single_layers.22., single_layers.23., single_layers.24., single_layers.25., single_layers.26., single_layers.27., single_layers.28., single_layers.29., single_layers.30., single_layers.31., modF., final_linear.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "init_x_linear.": {
              "type": "number"
            },
            "positional_encoding": {
              "type": "number"
            },
            "cond_seq_linear.": {
              "type": "number"
            },
            "register_tokens": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "double_layers.0.": {
              "type": "number"
            },
            "double_layers.1.": {
              "type": "number"
            },
            "double_layers.2.": {
              "type": "number"
            },
            "double_layers.3.": {
              "type": "number"
            },
            "single_layers.0.": {
              "type": "number"
            },
            "single_layers.1.": {
              "type": "number"
            },
            "single_layers.2.": {
              "type": "number"
            },
            "single_layers.3.": {
              "type": "number"
            },
            "single_layers.4.": {
              "type": "number"
            },
            "single_layers.5.": {
              "type": "number"
            },
            "single_layers.6.": {
              "type": "number"
            },
            "single_layers.7.": {
              "type": "number"
            },
            "single_layers.8.": {
              "type": "number"
            },
            "single_layers.9.": {
              "type": "number"
            },
            "single_layers.10.": {
              "type": "number"
            },
            "single_layers.11.": {
              "type": "number"
            },
            "single_layers.12.": {
              "type": "number"
            },
            "single_layers.13.": {
              "type": "number"
            },
            "single_layers.14.": {
              "type": "number"
            },
            "single_layers.15.": {
              "type": "number"
            },
            "single_layers.16.": {
              "type": "number"
            },
            "single_layers.17.": {
              "type": "number"
            },
            "single_layers.18.": {
              "type": "number"
            },
            "single_layers.19.": {
              "type": "number"
            },
            "single_layers.20.": {
              "type": "number"
            },
            "single_layers.21.": {
              "type": "number"
            },
            "single_layers.22.": {
              "type": "number"
            },
            "single_layers.23.": {
              "type": "number"
            },
            "single_layers.24.": {
              "type": "number"
            },
            "single_layers.25.": {
              "type": "number"
            },
            "single_layers.26.": {
              "type": "number"
            },
            "single_layers.27.": {
              "type": "number"
            },
            "single_layers.28.": {
              "type": "number"
            },
            "single_layers.29.": {
              "type": "number"
            },
            "single_layers.30.": {
              "type": "number"
            },
            "single_layers.31.": {
              "type": "number"
            },
            "modF.": {
              "type": "number"
            },
            "final_linear.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "init_x_linear.",
            "positional_encoding",
            "cond_seq_linear.",
            "register_tokens",
            "t_embedder.",
            "double_layers.0.",
            "double_layers.1.",
            "double_layers.2.",
            "double_layers.3.",
            "single_layers.0.",
            "single_layers.1.",
            "single_layers.2.",
            "single_layers.3.",
            "single_layers.4.",
            "single_layers.5.",
            "single_layers.6.",
            "single_layers.7.",
            "single_layers.8.",
            "single_layers.9.",
            "single_layers.10.",
            "single_layers.11.",
            "single_layers.12.",
            "single_layers.13.",
            "single_layers.14.",
            "single_layers.15.",
            "single_layers.16.",
            "single_layers.17.",
            "single_layers.18.",
            "single_layers.19.",
            "single_layers.20.",
            "single_layers.21.",
            "single_layers.22.",
            "single_layers.23.",
            "single_layers.24.",
            "single_layers.25.",
            "single_layers.26.",
            "single_layers.27.",
            "single_layers.28.",
            "single_layers.29.",
            "single_layers.30.",
            "single_layers.31.",
            "modF.",
            "final_linear."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeFlux1": {
      "title": "ModelMergeFlux1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, img_in., time_in., guidance_in, vector_in., txt_in., double_blocks.0., double_blocks.1., double_blocks.2., double_blocks.3., double_blocks.4., double_blocks.5., double_blocks.6., double_blocks.7., double_blocks.8., double_blocks.9., double_blocks.10., double_blocks.11., double_blocks.12., double_blocks.13., double_blocks.14., double_blocks.15., double_blocks.16., double_blocks.17., double_blocks.18., single_blocks.0., single_blocks.1., single_blocks.2., single_blocks.3., single_blocks.4., single_blocks.5., single_blocks.6., single_blocks.7., single_blocks.8., single_blocks.9., single_blocks.10., single_blocks.11., single_blocks.12., single_blocks.13., single_blocks.14., single_blocks.15., single_blocks.16., single_blocks.17., single_blocks.18., single_blocks.19., single_blocks.20., single_blocks.21., single_blocks.22., single_blocks.23., single_blocks.24., single_blocks.25., single_blocks.26., single_blocks.27., single_blocks.28., single_blocks.29., single_blocks.30., single_blocks.31., single_blocks.32., single_blocks.33., single_blocks.34., single_blocks.35., single_blocks.36., single_blocks.37., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "img_in.": {
              "type": "number"
            },
            "time_in.": {
              "type": "number"
            },
            "guidance_in": {
              "type": "number"
            },
            "vector_in.": {
              "type": "number"
            },
            "txt_in.": {
              "type": "number"
            },
            "double_blocks.0.": {
              "type": "number"
            },
            "double_blocks.1.": {
              "type": "number"
            },
            "double_blocks.2.": {
              "type": "number"
            },
            "double_blocks.3.": {
              "type": "number"
            },
            "double_blocks.4.": {
              "type": "number"
            },
            "double_blocks.5.": {
              "type": "number"
            },
            "double_blocks.6.": {
              "type": "number"
            },
            "double_blocks.7.": {
              "type": "number"
            },
            "double_blocks.8.": {
              "type": "number"
            },
            "double_blocks.9.": {
              "type": "number"
            },
            "double_blocks.10.": {
              "type": "number"
            },
            "double_blocks.11.": {
              "type": "number"
            },
            "double_blocks.12.": {
              "type": "number"
            },
            "double_blocks.13.": {
              "type": "number"
            },
            "double_blocks.14.": {
              "type": "number"
            },
            "double_blocks.15.": {
              "type": "number"
            },
            "double_blocks.16.": {
              "type": "number"
            },
            "double_blocks.17.": {
              "type": "number"
            },
            "double_blocks.18.": {
              "type": "number"
            },
            "single_blocks.0.": {
              "type": "number"
            },
            "single_blocks.1.": {
              "type": "number"
            },
            "single_blocks.2.": {
              "type": "number"
            },
            "single_blocks.3.": {
              "type": "number"
            },
            "single_blocks.4.": {
              "type": "number"
            },
            "single_blocks.5.": {
              "type": "number"
            },
            "single_blocks.6.": {
              "type": "number"
            },
            "single_blocks.7.": {
              "type": "number"
            },
            "single_blocks.8.": {
              "type": "number"
            },
            "single_blocks.9.": {
              "type": "number"
            },
            "single_blocks.10.": {
              "type": "number"
            },
            "single_blocks.11.": {
              "type": "number"
            },
            "single_blocks.12.": {
              "type": "number"
            },
            "single_blocks.13.": {
              "type": "number"
            },
            "single_blocks.14.": {
              "type": "number"
            },
            "single_blocks.15.": {
              "type": "number"
            },
            "single_blocks.16.": {
              "type": "number"
            },
            "single_blocks.17.": {
              "type": "number"
            },
            "single_blocks.18.": {
              "type": "number"
            },
            "single_blocks.19.": {
              "type": "number"
            },
            "single_blocks.20.": {
              "type": "number"
            },
            "single_blocks.21.": {
              "type": "number"
            },
            "single_blocks.22.": {
              "type": "number"
            },
            "single_blocks.23.": {
              "type": "number"
            },
            "single_blocks.24.": {
              "type": "number"
            },
            "single_blocks.25.": {
              "type": "number"
            },
            "single_blocks.26.": {
              "type": "number"
            },
            "single_blocks.27.": {
              "type": "number"
            },
            "single_blocks.28.": {
              "type": "number"
            },
            "single_blocks.29.": {
              "type": "number"
            },
            "single_blocks.30.": {
              "type": "number"
            },
            "single_blocks.31.": {
              "type": "number"
            },
            "single_blocks.32.": {
              "type": "number"
            },
            "single_blocks.33.": {
              "type": "number"
            },
            "single_blocks.34.": {
              "type": "number"
            },
            "single_blocks.35.": {
              "type": "number"
            },
            "single_blocks.36.": {
              "type": "number"
            },
            "single_blocks.37.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "img_in.",
            "time_in.",
            "guidance_in",
            "vector_in.",
            "txt_in.",
            "double_blocks.0.",
            "double_blocks.1.",
            "double_blocks.2.",
            "double_blocks.3.",
            "double_blocks.4.",
            "double_blocks.5.",
            "double_blocks.6.",
            "double_blocks.7.",
            "double_blocks.8.",
            "double_blocks.9.",
            "double_blocks.10.",
            "double_blocks.11.",
            "double_blocks.12.",
            "double_blocks.13.",
            "double_blocks.14.",
            "double_blocks.15.",
            "double_blocks.16.",
            "double_blocks.17.",
            "double_blocks.18.",
            "single_blocks.0.",
            "single_blocks.1.",
            "single_blocks.2.",
            "single_blocks.3.",
            "single_blocks.4.",
            "single_blocks.5.",
            "single_blocks.6.",
            "single_blocks.7.",
            "single_blocks.8.",
            "single_blocks.9.",
            "single_blocks.10.",
            "single_blocks.11.",
            "single_blocks.12.",
            "single_blocks.13.",
            "single_blocks.14.",
            "single_blocks.15.",
            "single_blocks.16.",
            "single_blocks.17.",
            "single_blocks.18.",
            "single_blocks.19.",
            "single_blocks.20.",
            "single_blocks.21.",
            "single_blocks.22.",
            "single_blocks.23.",
            "single_blocks.24.",
            "single_blocks.25.",
            "single_blocks.26.",
            "single_blocks.27.",
            "single_blocks.28.",
            "single_blocks.29.",
            "single_blocks.30.",
            "single_blocks.31.",
            "single_blocks.32.",
            "single_blocks.33.",
            "single_blocks.34.",
            "single_blocks.35.",
            "single_blocks.36.",
            "single_blocks.37.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeSD35_Large": {
      "title": "ModelMergeSD35_Large",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embed., x_embedder., context_embedder., y_embedder., t_embedder., joint_blocks.0., joint_blocks.1., joint_blocks.2., joint_blocks.3., joint_blocks.4., joint_blocks.5., joint_blocks.6., joint_blocks.7., joint_blocks.8., joint_blocks.9., joint_blocks.10., joint_blocks.11., joint_blocks.12., joint_blocks.13., joint_blocks.14., joint_blocks.15., joint_blocks.16., joint_blocks.17., joint_blocks.18., joint_blocks.19., joint_blocks.20., joint_blocks.21., joint_blocks.22., joint_blocks.23., joint_blocks.24., joint_blocks.25., joint_blocks.26., joint_blocks.27., joint_blocks.28., joint_blocks.29., joint_blocks.30., joint_blocks.31., joint_blocks.32., joint_blocks.33., joint_blocks.34., joint_blocks.35., joint_blocks.36., joint_blocks.37., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embed.": {
              "type": "number"
            },
            "x_embedder.": {
              "type": "number"
            },
            "context_embedder.": {
              "type": "number"
            },
            "y_embedder.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "joint_blocks.0.": {
              "type": "number"
            },
            "joint_blocks.1.": {
              "type": "number"
            },
            "joint_blocks.2.": {
              "type": "number"
            },
            "joint_blocks.3.": {
              "type": "number"
            },
            "joint_blocks.4.": {
              "type": "number"
            },
            "joint_blocks.5.": {
              "type": "number"
            },
            "joint_blocks.6.": {
              "type": "number"
            },
            "joint_blocks.7.": {
              "type": "number"
            },
            "joint_blocks.8.": {
              "type": "number"
            },
            "joint_blocks.9.": {
              "type": "number"
            },
            "joint_blocks.10.": {
              "type": "number"
            },
            "joint_blocks.11.": {
              "type": "number"
            },
            "joint_blocks.12.": {
              "type": "number"
            },
            "joint_blocks.13.": {
              "type": "number"
            },
            "joint_blocks.14.": {
              "type": "number"
            },
            "joint_blocks.15.": {
              "type": "number"
            },
            "joint_blocks.16.": {
              "type": "number"
            },
            "joint_blocks.17.": {
              "type": "number"
            },
            "joint_blocks.18.": {
              "type": "number"
            },
            "joint_blocks.19.": {
              "type": "number"
            },
            "joint_blocks.20.": {
              "type": "number"
            },
            "joint_blocks.21.": {
              "type": "number"
            },
            "joint_blocks.22.": {
              "type": "number"
            },
            "joint_blocks.23.": {
              "type": "number"
            },
            "joint_blocks.24.": {
              "type": "number"
            },
            "joint_blocks.25.": {
              "type": "number"
            },
            "joint_blocks.26.": {
              "type": "number"
            },
            "joint_blocks.27.": {
              "type": "number"
            },
            "joint_blocks.28.": {
              "type": "number"
            },
            "joint_blocks.29.": {
              "type": "number"
            },
            "joint_blocks.30.": {
              "type": "number"
            },
            "joint_blocks.31.": {
              "type": "number"
            },
            "joint_blocks.32.": {
              "type": "number"
            },
            "joint_blocks.33.": {
              "type": "number"
            },
            "joint_blocks.34.": {
              "type": "number"
            },
            "joint_blocks.35.": {
              "type": "number"
            },
            "joint_blocks.36.": {
              "type": "number"
            },
            "joint_blocks.37.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embed.",
            "x_embedder.",
            "context_embedder.",
            "y_embedder.",
            "t_embedder.",
            "joint_blocks.0.",
            "joint_blocks.1.",
            "joint_blocks.2.",
            "joint_blocks.3.",
            "joint_blocks.4.",
            "joint_blocks.5.",
            "joint_blocks.6.",
            "joint_blocks.7.",
            "joint_blocks.8.",
            "joint_blocks.9.",
            "joint_blocks.10.",
            "joint_blocks.11.",
            "joint_blocks.12.",
            "joint_blocks.13.",
            "joint_blocks.14.",
            "joint_blocks.15.",
            "joint_blocks.16.",
            "joint_blocks.17.",
            "joint_blocks.18.",
            "joint_blocks.19.",
            "joint_blocks.20.",
            "joint_blocks.21.",
            "joint_blocks.22.",
            "joint_blocks.23.",
            "joint_blocks.24.",
            "joint_blocks.25.",
            "joint_blocks.26.",
            "joint_blocks.27.",
            "joint_blocks.28.",
            "joint_blocks.29.",
            "joint_blocks.30.",
            "joint_blocks.31.",
            "joint_blocks.32.",
            "joint_blocks.33.",
            "joint_blocks.34.",
            "joint_blocks.35.",
            "joint_blocks.36.",
            "joint_blocks.37.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeMochiPreview": {
      "title": "ModelMergeMochiPreview",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_frequencies., t_embedder., t5_y_embedder., t5_yproj., blocks.0., blocks.1., blocks.2., blocks.3., blocks.4., blocks.5., blocks.6., blocks.7., blocks.8., blocks.9., blocks.10., blocks.11., blocks.12., blocks.13., blocks.14., blocks.15., blocks.16., blocks.17., blocks.18., blocks.19., blocks.20., blocks.21., blocks.22., blocks.23., blocks.24., blocks.25., blocks.26., blocks.27., blocks.28., blocks.29., blocks.30., blocks.31., blocks.32., blocks.33., blocks.34., blocks.35., blocks.36., blocks.37., blocks.38., blocks.39., blocks.40., blocks.41., blocks.42., blocks.43., blocks.44., blocks.45., blocks.46., blocks.47., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_frequencies.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "t5_y_embedder.": {
              "type": "number"
            },
            "t5_yproj.": {
              "type": "number"
            },
            "blocks.0.": {
              "type": "number"
            },
            "blocks.1.": {
              "type": "number"
            },
            "blocks.2.": {
              "type": "number"
            },
            "blocks.3.": {
              "type": "number"
            },
            "blocks.4.": {
              "type": "number"
            },
            "blocks.5.": {
              "type": "number"
            },
            "blocks.6.": {
              "type": "number"
            },
            "blocks.7.": {
              "type": "number"
            },
            "blocks.8.": {
              "type": "number"
            },
            "blocks.9.": {
              "type": "number"
            },
            "blocks.10.": {
              "type": "number"
            },
            "blocks.11.": {
              "type": "number"
            },
            "blocks.12.": {
              "type": "number"
            },
            "blocks.13.": {
              "type": "number"
            },
            "blocks.14.": {
              "type": "number"
            },
            "blocks.15.": {
              "type": "number"
            },
            "blocks.16.": {
              "type": "number"
            },
            "blocks.17.": {
              "type": "number"
            },
            "blocks.18.": {
              "type": "number"
            },
            "blocks.19.": {
              "type": "number"
            },
            "blocks.20.": {
              "type": "number"
            },
            "blocks.21.": {
              "type": "number"
            },
            "blocks.22.": {
              "type": "number"
            },
            "blocks.23.": {
              "type": "number"
            },
            "blocks.24.": {
              "type": "number"
            },
            "blocks.25.": {
              "type": "number"
            },
            "blocks.26.": {
              "type": "number"
            },
            "blocks.27.": {
              "type": "number"
            },
            "blocks.28.": {
              "type": "number"
            },
            "blocks.29.": {
              "type": "number"
            },
            "blocks.30.": {
              "type": "number"
            },
            "blocks.31.": {
              "type": "number"
            },
            "blocks.32.": {
              "type": "number"
            },
            "blocks.33.": {
              "type": "number"
            },
            "blocks.34.": {
              "type": "number"
            },
            "blocks.35.": {
              "type": "number"
            },
            "blocks.36.": {
              "type": "number"
            },
            "blocks.37.": {
              "type": "number"
            },
            "blocks.38.": {
              "type": "number"
            },
            "blocks.39.": {
              "type": "number"
            },
            "blocks.40.": {
              "type": "number"
            },
            "blocks.41.": {
              "type": "number"
            },
            "blocks.42.": {
              "type": "number"
            },
            "blocks.43.": {
              "type": "number"
            },
            "blocks.44.": {
              "type": "number"
            },
            "blocks.45.": {
              "type": "number"
            },
            "blocks.46.": {
              "type": "number"
            },
            "blocks.47.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_frequencies.",
            "t_embedder.",
            "t5_y_embedder.",
            "t5_yproj.",
            "blocks.0.",
            "blocks.1.",
            "blocks.2.",
            "blocks.3.",
            "blocks.4.",
            "blocks.5.",
            "blocks.6.",
            "blocks.7.",
            "blocks.8.",
            "blocks.9.",
            "blocks.10.",
            "blocks.11.",
            "blocks.12.",
            "blocks.13.",
            "blocks.14.",
            "blocks.15.",
            "blocks.16.",
            "blocks.17.",
            "blocks.18.",
            "blocks.19.",
            "blocks.20.",
            "blocks.21.",
            "blocks.22.",
            "blocks.23.",
            "blocks.24.",
            "blocks.25.",
            "blocks.26.",
            "blocks.27.",
            "blocks.28.",
            "blocks.29.",
            "blocks.30.",
            "blocks.31.",
            "blocks.32.",
            "blocks.33.",
            "blocks.34.",
            "blocks.35.",
            "blocks.36.",
            "blocks.37.",
            "blocks.38.",
            "blocks.39.",
            "blocks.40.",
            "blocks.41.",
            "blocks.42.",
            "blocks.43.",
            "blocks.44.",
            "blocks.45.",
            "blocks.46.",
            "blocks.47.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeLTXV": {
      "title": "ModelMergeLTXV",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, patchify_proj., adaln_single., caption_projection., transformer_blocks.0., transformer_blocks.1., transformer_blocks.2., transformer_blocks.3., transformer_blocks.4., transformer_blocks.5., transformer_blocks.6., transformer_blocks.7., transformer_blocks.8., transformer_blocks.9., transformer_blocks.10., transformer_blocks.11., transformer_blocks.12., transformer_blocks.13., transformer_blocks.14., transformer_blocks.15., transformer_blocks.16., transformer_blocks.17., transformer_blocks.18., transformer_blocks.19., transformer_blocks.20., transformer_blocks.21., transformer_blocks.22., transformer_blocks.23., transformer_blocks.24., transformer_blocks.25., transformer_blocks.26., transformer_blocks.27., scale_shift_table, proj_out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "patchify_proj.": {
              "type": "number"
            },
            "adaln_single.": {
              "type": "number"
            },
            "caption_projection.": {
              "type": "number"
            },
            "transformer_blocks.0.": {
              "type": "number"
            },
            "transformer_blocks.1.": {
              "type": "number"
            },
            "transformer_blocks.2.": {
              "type": "number"
            },
            "transformer_blocks.3.": {
              "type": "number"
            },
            "transformer_blocks.4.": {
              "type": "number"
            },
            "transformer_blocks.5.": {
              "type": "number"
            },
            "transformer_blocks.6.": {
              "type": "number"
            },
            "transformer_blocks.7.": {
              "type": "number"
            },
            "transformer_blocks.8.": {
              "type": "number"
            },
            "transformer_blocks.9.": {
              "type": "number"
            },
            "transformer_blocks.10.": {
              "type": "number"
            },
            "transformer_blocks.11.": {
              "type": "number"
            },
            "transformer_blocks.12.": {
              "type": "number"
            },
            "transformer_blocks.13.": {
              "type": "number"
            },
            "transformer_blocks.14.": {
              "type": "number"
            },
            "transformer_blocks.15.": {
              "type": "number"
            },
            "transformer_blocks.16.": {
              "type": "number"
            },
            "transformer_blocks.17.": {
              "type": "number"
            },
            "transformer_blocks.18.": {
              "type": "number"
            },
            "transformer_blocks.19.": {
              "type": "number"
            },
            "transformer_blocks.20.": {
              "type": "number"
            },
            "transformer_blocks.21.": {
              "type": "number"
            },
            "transformer_blocks.22.": {
              "type": "number"
            },
            "transformer_blocks.23.": {
              "type": "number"
            },
            "transformer_blocks.24.": {
              "type": "number"
            },
            "transformer_blocks.25.": {
              "type": "number"
            },
            "transformer_blocks.26.": {
              "type": "number"
            },
            "transformer_blocks.27.": {
              "type": "number"
            },
            "scale_shift_table": {
              "type": "number"
            },
            "proj_out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "patchify_proj.",
            "adaln_single.",
            "caption_projection.",
            "transformer_blocks.0.",
            "transformer_blocks.1.",
            "transformer_blocks.2.",
            "transformer_blocks.3.",
            "transformer_blocks.4.",
            "transformer_blocks.5.",
            "transformer_blocks.6.",
            "transformer_blocks.7.",
            "transformer_blocks.8.",
            "transformer_blocks.9.",
            "transformer_blocks.10.",
            "transformer_blocks.11.",
            "transformer_blocks.12.",
            "transformer_blocks.13.",
            "transformer_blocks.14.",
            "transformer_blocks.15.",
            "transformer_blocks.16.",
            "transformer_blocks.17.",
            "transformer_blocks.18.",
            "transformer_blocks.19.",
            "transformer_blocks.20.",
            "transformer_blocks.21.",
            "transformer_blocks.22.",
            "transformer_blocks.23.",
            "transformer_blocks.24.",
            "transformer_blocks.25.",
            "transformer_blocks.26.",
            "transformer_blocks.27.",
            "scale_shift_table",
            "proj_out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeCosmos7B": {
      "title": "ModelMergeCosmos7B",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embedder., extra_pos_embedder., x_embedder., t_embedder., affline_norm., blocks.block0., blocks.block1., blocks.block2., blocks.block3., blocks.block4., blocks.block5., blocks.block6., blocks.block7., blocks.block8., blocks.block9., blocks.block10., blocks.block11., blocks.block12., blocks.block13., blocks.block14., blocks.block15., blocks.block16., blocks.block17., blocks.block18., blocks.block19., blocks.block20., blocks.block21., blocks.block22., blocks.block23., blocks.block24., blocks.block25., blocks.block26., blocks.block27., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embedder.": {
              "type": "number"
            },
            "extra_pos_embedder.": {
              "type": "number"
            },
            "x_embedder.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "affline_norm.": {
              "type": "number"
            },
            "blocks.block0.": {
              "type": "number"
            },
            "blocks.block1.": {
              "type": "number"
            },
            "blocks.block2.": {
              "type": "number"
            },
            "blocks.block3.": {
              "type": "number"
            },
            "blocks.block4.": {
              "type": "number"
            },
            "blocks.block5.": {
              "type": "number"
            },
            "blocks.block6.": {
              "type": "number"
            },
            "blocks.block7.": {
              "type": "number"
            },
            "blocks.block8.": {
              "type": "number"
            },
            "blocks.block9.": {
              "type": "number"
            },
            "blocks.block10.": {
              "type": "number"
            },
            "blocks.block11.": {
              "type": "number"
            },
            "blocks.block12.": {
              "type": "number"
            },
            "blocks.block13.": {
              "type": "number"
            },
            "blocks.block14.": {
              "type": "number"
            },
            "blocks.block15.": {
              "type": "number"
            },
            "blocks.block16.": {
              "type": "number"
            },
            "blocks.block17.": {
              "type": "number"
            },
            "blocks.block18.": {
              "type": "number"
            },
            "blocks.block19.": {
              "type": "number"
            },
            "blocks.block20.": {
              "type": "number"
            },
            "blocks.block21.": {
              "type": "number"
            },
            "blocks.block22.": {
              "type": "number"
            },
            "blocks.block23.": {
              "type": "number"
            },
            "blocks.block24.": {
              "type": "number"
            },
            "blocks.block25.": {
              "type": "number"
            },
            "blocks.block26.": {
              "type": "number"
            },
            "blocks.block27.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embedder.",
            "extra_pos_embedder.",
            "x_embedder.",
            "t_embedder.",
            "affline_norm.",
            "blocks.block0.",
            "blocks.block1.",
            "blocks.block2.",
            "blocks.block3.",
            "blocks.block4.",
            "blocks.block5.",
            "blocks.block6.",
            "blocks.block7.",
            "blocks.block8.",
            "blocks.block9.",
            "blocks.block10.",
            "blocks.block11.",
            "blocks.block12.",
            "blocks.block13.",
            "blocks.block14.",
            "blocks.block15.",
            "blocks.block16.",
            "blocks.block17.",
            "blocks.block18.",
            "blocks.block19.",
            "blocks.block20.",
            "blocks.block21.",
            "blocks.block22.",
            "blocks.block23.",
            "blocks.block24.",
            "blocks.block25.",
            "blocks.block26.",
            "blocks.block27.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeCosmos14B": {
      "title": "ModelMergeCosmos14B",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embedder., extra_pos_embedder., x_embedder., t_embedder., affline_norm., blocks.block0., blocks.block1., blocks.block2., blocks.block3., blocks.block4., blocks.block5., blocks.block6., blocks.block7., blocks.block8., blocks.block9., blocks.block10., blocks.block11., blocks.block12., blocks.block13., blocks.block14., blocks.block15., blocks.block16., blocks.block17., blocks.block18., blocks.block19., blocks.block20., blocks.block21., blocks.block22., blocks.block23., blocks.block24., blocks.block25., blocks.block26., blocks.block27., blocks.block28., blocks.block29., blocks.block30., blocks.block31., blocks.block32., blocks.block33., blocks.block34., blocks.block35., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embedder.": {
              "type": "number"
            },
            "extra_pos_embedder.": {
              "type": "number"
            },
            "x_embedder.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "affline_norm.": {
              "type": "number"
            },
            "blocks.block0.": {
              "type": "number"
            },
            "blocks.block1.": {
              "type": "number"
            },
            "blocks.block2.": {
              "type": "number"
            },
            "blocks.block3.": {
              "type": "number"
            },
            "blocks.block4.": {
              "type": "number"
            },
            "blocks.block5.": {
              "type": "number"
            },
            "blocks.block6.": {
              "type": "number"
            },
            "blocks.block7.": {
              "type": "number"
            },
            "blocks.block8.": {
              "type": "number"
            },
            "blocks.block9.": {
              "type": "number"
            },
            "blocks.block10.": {
              "type": "number"
            },
            "blocks.block11.": {
              "type": "number"
            },
            "blocks.block12.": {
              "type": "number"
            },
            "blocks.block13.": {
              "type": "number"
            },
            "blocks.block14.": {
              "type": "number"
            },
            "blocks.block15.": {
              "type": "number"
            },
            "blocks.block16.": {
              "type": "number"
            },
            "blocks.block17.": {
              "type": "number"
            },
            "blocks.block18.": {
              "type": "number"
            },
            "blocks.block19.": {
              "type": "number"
            },
            "blocks.block20.": {
              "type": "number"
            },
            "blocks.block21.": {
              "type": "number"
            },
            "blocks.block22.": {
              "type": "number"
            },
            "blocks.block23.": {
              "type": "number"
            },
            "blocks.block24.": {
              "type": "number"
            },
            "blocks.block25.": {
              "type": "number"
            },
            "blocks.block26.": {
              "type": "number"
            },
            "blocks.block27.": {
              "type": "number"
            },
            "blocks.block28.": {
              "type": "number"
            },
            "blocks.block29.": {
              "type": "number"
            },
            "blocks.block30.": {
              "type": "number"
            },
            "blocks.block31.": {
              "type": "number"
            },
            "blocks.block32.": {
              "type": "number"
            },
            "blocks.block33.": {
              "type": "number"
            },
            "blocks.block34.": {
              "type": "number"
            },
            "blocks.block35.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embedder.",
            "extra_pos_embedder.",
            "x_embedder.",
            "t_embedder.",
            "affline_norm.",
            "blocks.block0.",
            "blocks.block1.",
            "blocks.block2.",
            "blocks.block3.",
            "blocks.block4.",
            "blocks.block5.",
            "blocks.block6.",
            "blocks.block7.",
            "blocks.block8.",
            "blocks.block9.",
            "blocks.block10.",
            "blocks.block11.",
            "blocks.block12.",
            "blocks.block13.",
            "blocks.block14.",
            "blocks.block15.",
            "blocks.block16.",
            "blocks.block17.",
            "blocks.block18.",
            "blocks.block19.",
            "blocks.block20.",
            "blocks.block21.",
            "blocks.block22.",
            "blocks.block23.",
            "blocks.block24.",
            "blocks.block25.",
            "blocks.block26.",
            "blocks.block27.",
            "blocks.block28.",
            "blocks.block29.",
            "blocks.block30.",
            "blocks.block31.",
            "blocks.block32.",
            "blocks.block33.",
            "blocks.block34.",
            "blocks.block35.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeWAN2_1": {
      "title": "ModelMergeWAN2_1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, patch_embedding., time_embedding., time_projection., text_embedding., img_emb., blocks.0., blocks.1., blocks.2., blocks.3., blocks.4., blocks.5., blocks.6., blocks.7., blocks.8., blocks.9., blocks.10., blocks.11., blocks.12., blocks.13., blocks.14., blocks.15., blocks.16., blocks.17., blocks.18., blocks.19., blocks.20., blocks.21., blocks.22., blocks.23., blocks.24., blocks.25., blocks.26., blocks.27., blocks.28., blocks.29., blocks.30., blocks.31., blocks.32., blocks.33., blocks.34., blocks.35., blocks.36., blocks.37., blocks.38., blocks.39., head.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "patch_embedding.": {
              "type": "number"
            },
            "time_embedding.": {
              "type": "number"
            },
            "time_projection.": {
              "type": "number"
            },
            "text_embedding.": {
              "type": "number"
            },
            "img_emb.": {
              "type": "number"
            },
            "blocks.0.": {
              "type": "number"
            },
            "blocks.1.": {
              "type": "number"
            },
            "blocks.2.": {
              "type": "number"
            },
            "blocks.3.": {
              "type": "number"
            },
            "blocks.4.": {
              "type": "number"
            },
            "blocks.5.": {
              "type": "number"
            },
            "blocks.6.": {
              "type": "number"
            },
            "blocks.7.": {
              "type": "number"
            },
            "blocks.8.": {
              "type": "number"
            },
            "blocks.9.": {
              "type": "number"
            },
            "blocks.10.": {
              "type": "number"
            },
            "blocks.11.": {
              "type": "number"
            },
            "blocks.12.": {
              "type": "number"
            },
            "blocks.13.": {
              "type": "number"
            },
            "blocks.14.": {
              "type": "number"
            },
            "blocks.15.": {
              "type": "number"
            },
            "blocks.16.": {
              "type": "number"
            },
            "blocks.17.": {
              "type": "number"
            },
            "blocks.18.": {
              "type": "number"
            },
            "blocks.19.": {
              "type": "number"
            },
            "blocks.20.": {
              "type": "number"
            },
            "blocks.21.": {
              "type": "number"
            },
            "blocks.22.": {
              "type": "number"
            },
            "blocks.23.": {
              "type": "number"
            },
            "blocks.24.": {
              "type": "number"
            },
            "blocks.25.": {
              "type": "number"
            },
            "blocks.26.": {
              "type": "number"
            },
            "blocks.27.": {
              "type": "number"
            },
            "blocks.28.": {
              "type": "number"
            },
            "blocks.29.": {
              "type": "number"
            },
            "blocks.30.": {
              "type": "number"
            },
            "blocks.31.": {
              "type": "number"
            },
            "blocks.32.": {
              "type": "number"
            },
            "blocks.33.": {
              "type": "number"
            },
            "blocks.34.": {
              "type": "number"
            },
            "blocks.35.": {
              "type": "number"
            },
            "blocks.36.": {
              "type": "number"
            },
            "blocks.37.": {
              "type": "number"
            },
            "blocks.38.": {
              "type": "number"
            },
            "blocks.39.": {
              "type": "number"
            },
            "head.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "patch_embedding.",
            "time_embedding.",
            "time_projection.",
            "text_embedding.",
            "img_emb.",
            "blocks.0.",
            "blocks.1.",
            "blocks.2.",
            "blocks.3.",
            "blocks.4.",
            "blocks.5.",
            "blocks.6.",
            "blocks.7.",
            "blocks.8.",
            "blocks.9.",
            "blocks.10.",
            "blocks.11.",
            "blocks.12.",
            "blocks.13.",
            "blocks.14.",
            "blocks.15.",
            "blocks.16.",
            "blocks.17.",
            "blocks.18.",
            "blocks.19.",
            "blocks.20.",
            "blocks.21.",
            "blocks.22.",
            "blocks.23.",
            "blocks.24.",
            "blocks.25.",
            "blocks.26.",
            "blocks.27.",
            "blocks.28.",
            "blocks.29.",
            "blocks.30.",
            "blocks.31.",
            "blocks.32.",
            "blocks.33.",
            "blocks.34.",
            "blocks.35.",
            "blocks.36.",
            "blocks.37.",
            "blocks.38.",
            "blocks.39.",
            "head."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeCosmosPredict2_2B": {
      "title": "ModelMergeCosmosPredict2_2B",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embedder., x_embedder., t_embedder., t_embedding_norm., blocks.0., blocks.1., blocks.2., blocks.3., blocks.4., blocks.5., blocks.6., blocks.7., blocks.8., blocks.9., blocks.10., blocks.11., blocks.12., blocks.13., blocks.14., blocks.15., blocks.16., blocks.17., blocks.18., blocks.19., blocks.20., blocks.21., blocks.22., blocks.23., blocks.24., blocks.25., blocks.26., blocks.27., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embedder.": {
              "type": "number"
            },
            "x_embedder.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "t_embedding_norm.": {
              "type": "number"
            },
            "blocks.0.": {
              "type": "number"
            },
            "blocks.1.": {
              "type": "number"
            },
            "blocks.2.": {
              "type": "number"
            },
            "blocks.3.": {
              "type": "number"
            },
            "blocks.4.": {
              "type": "number"
            },
            "blocks.5.": {
              "type": "number"
            },
            "blocks.6.": {
              "type": "number"
            },
            "blocks.7.": {
              "type": "number"
            },
            "blocks.8.": {
              "type": "number"
            },
            "blocks.9.": {
              "type": "number"
            },
            "blocks.10.": {
              "type": "number"
            },
            "blocks.11.": {
              "type": "number"
            },
            "blocks.12.": {
              "type": "number"
            },
            "blocks.13.": {
              "type": "number"
            },
            "blocks.14.": {
              "type": "number"
            },
            "blocks.15.": {
              "type": "number"
            },
            "blocks.16.": {
              "type": "number"
            },
            "blocks.17.": {
              "type": "number"
            },
            "blocks.18.": {
              "type": "number"
            },
            "blocks.19.": {
              "type": "number"
            },
            "blocks.20.": {
              "type": "number"
            },
            "blocks.21.": {
              "type": "number"
            },
            "blocks.22.": {
              "type": "number"
            },
            "blocks.23.": {
              "type": "number"
            },
            "blocks.24.": {
              "type": "number"
            },
            "blocks.25.": {
              "type": "number"
            },
            "blocks.26.": {
              "type": "number"
            },
            "blocks.27.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embedder.",
            "x_embedder.",
            "t_embedder.",
            "t_embedding_norm.",
            "blocks.0.",
            "blocks.1.",
            "blocks.2.",
            "blocks.3.",
            "blocks.4.",
            "blocks.5.",
            "blocks.6.",
            "blocks.7.",
            "blocks.8.",
            "blocks.9.",
            "blocks.10.",
            "blocks.11.",
            "blocks.12.",
            "blocks.13.",
            "blocks.14.",
            "blocks.15.",
            "blocks.16.",
            "blocks.17.",
            "blocks.18.",
            "blocks.19.",
            "blocks.20.",
            "blocks.21.",
            "blocks.22.",
            "blocks.23.",
            "blocks.24.",
            "blocks.25.",
            "blocks.26.",
            "blocks.27.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeCosmosPredict2_14B": {
      "title": "ModelMergeCosmosPredict2_14B",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embedder., x_embedder., t_embedder., t_embedding_norm., blocks.0., blocks.1., blocks.2., blocks.3., blocks.4., blocks.5., blocks.6., blocks.7., blocks.8., blocks.9., blocks.10., blocks.11., blocks.12., blocks.13., blocks.14., blocks.15., blocks.16., blocks.17., blocks.18., blocks.19., blocks.20., blocks.21., blocks.22., blocks.23., blocks.24., blocks.25., blocks.26., blocks.27., blocks.28., blocks.29., blocks.30., blocks.31., blocks.32., blocks.33., blocks.34., blocks.35., final_layer.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embedder.": {
              "type": "number"
            },
            "x_embedder.": {
              "type": "number"
            },
            "t_embedder.": {
              "type": "number"
            },
            "t_embedding_norm.": {
              "type": "number"
            },
            "blocks.0.": {
              "type": "number"
            },
            "blocks.1.": {
              "type": "number"
            },
            "blocks.2.": {
              "type": "number"
            },
            "blocks.3.": {
              "type": "number"
            },
            "blocks.4.": {
              "type": "number"
            },
            "blocks.5.": {
              "type": "number"
            },
            "blocks.6.": {
              "type": "number"
            },
            "blocks.7.": {
              "type": "number"
            },
            "blocks.8.": {
              "type": "number"
            },
            "blocks.9.": {
              "type": "number"
            },
            "blocks.10.": {
              "type": "number"
            },
            "blocks.11.": {
              "type": "number"
            },
            "blocks.12.": {
              "type": "number"
            },
            "blocks.13.": {
              "type": "number"
            },
            "blocks.14.": {
              "type": "number"
            },
            "blocks.15.": {
              "type": "number"
            },
            "blocks.16.": {
              "type": "number"
            },
            "blocks.17.": {
              "type": "number"
            },
            "blocks.18.": {
              "type": "number"
            },
            "blocks.19.": {
              "type": "number"
            },
            "blocks.20.": {
              "type": "number"
            },
            "blocks.21.": {
              "type": "number"
            },
            "blocks.22.": {
              "type": "number"
            },
            "blocks.23.": {
              "type": "number"
            },
            "blocks.24.": {
              "type": "number"
            },
            "blocks.25.": {
              "type": "number"
            },
            "blocks.26.": {
              "type": "number"
            },
            "blocks.27.": {
              "type": "number"
            },
            "blocks.28.": {
              "type": "number"
            },
            "blocks.29.": {
              "type": "number"
            },
            "blocks.30.": {
              "type": "number"
            },
            "blocks.31.": {
              "type": "number"
            },
            "blocks.32.": {
              "type": "number"
            },
            "blocks.33.": {
              "type": "number"
            },
            "blocks.34.": {
              "type": "number"
            },
            "blocks.35.": {
              "type": "number"
            },
            "final_layer.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embedder.",
            "x_embedder.",
            "t_embedder.",
            "t_embedding_norm.",
            "blocks.0.",
            "blocks.1.",
            "blocks.2.",
            "blocks.3.",
            "blocks.4.",
            "blocks.5.",
            "blocks.6.",
            "blocks.7.",
            "blocks.8.",
            "blocks.9.",
            "blocks.10.",
            "blocks.11.",
            "blocks.12.",
            "blocks.13.",
            "blocks.14.",
            "blocks.15.",
            "blocks.16.",
            "blocks.17.",
            "blocks.18.",
            "blocks.19.",
            "blocks.20.",
            "blocks.21.",
            "blocks.22.",
            "blocks.23.",
            "blocks.24.",
            "blocks.25.",
            "blocks.26.",
            "blocks.27.",
            "blocks.28.",
            "blocks.29.",
            "blocks.30.",
            "blocks.31.",
            "blocks.32.",
            "blocks.33.",
            "blocks.34.",
            "blocks.35.",
            "final_layer."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "ModelMergeQwenImage": {
      "title": "ModelMergeQwenImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model1, model2, pos_embeds., img_in., txt_norm., txt_in., time_text_embed., transformer_blocks.0., transformer_blocks.1., transformer_blocks.2., transformer_blocks.3., transformer_blocks.4., transformer_blocks.5., transformer_blocks.6., transformer_blocks.7., transformer_blocks.8., transformer_blocks.9., transformer_blocks.10., transformer_blocks.11., transformer_blocks.12., transformer_blocks.13., transformer_blocks.14., transformer_blocks.15., transformer_blocks.16., transformer_blocks.17., transformer_blocks.18., transformer_blocks.19., transformer_blocks.20., transformer_blocks.21., transformer_blocks.22., transformer_blocks.23., transformer_blocks.24., transformer_blocks.25., transformer_blocks.26., transformer_blocks.27., transformer_blocks.28., transformer_blocks.29., transformer_blocks.30., transformer_blocks.31., transformer_blocks.32., transformer_blocks.33., transformer_blocks.34., transformer_blocks.35., transformer_blocks.36., transformer_blocks.37., transformer_blocks.38., transformer_blocks.39., transformer_blocks.40., transformer_blocks.41., transformer_blocks.42., transformer_blocks.43., transformer_blocks.44., transformer_blocks.45., transformer_blocks.46., transformer_blocks.47., transformer_blocks.48., transformer_blocks.49., transformer_blocks.50., transformer_blocks.51., transformer_blocks.52., transformer_blocks.53., transformer_blocks.54., transformer_blocks.55., transformer_blocks.56., transformer_blocks.57., transformer_blocks.58., transformer_blocks.59., proj_out.",
          "properties": {
            "model1": {
              "type": "MODEL"
            },
            "model2": {
              "type": "MODEL"
            },
            "pos_embeds.": {
              "type": "number"
            },
            "img_in.": {
              "type": "number"
            },
            "txt_norm.": {
              "type": "number"
            },
            "txt_in.": {
              "type": "number"
            },
            "time_text_embed.": {
              "type": "number"
            },
            "transformer_blocks.0.": {
              "type": "number"
            },
            "transformer_blocks.1.": {
              "type": "number"
            },
            "transformer_blocks.2.": {
              "type": "number"
            },
            "transformer_blocks.3.": {
              "type": "number"
            },
            "transformer_blocks.4.": {
              "type": "number"
            },
            "transformer_blocks.5.": {
              "type": "number"
            },
            "transformer_blocks.6.": {
              "type": "number"
            },
            "transformer_blocks.7.": {
              "type": "number"
            },
            "transformer_blocks.8.": {
              "type": "number"
            },
            "transformer_blocks.9.": {
              "type": "number"
            },
            "transformer_blocks.10.": {
              "type": "number"
            },
            "transformer_blocks.11.": {
              "type": "number"
            },
            "transformer_blocks.12.": {
              "type": "number"
            },
            "transformer_blocks.13.": {
              "type": "number"
            },
            "transformer_blocks.14.": {
              "type": "number"
            },
            "transformer_blocks.15.": {
              "type": "number"
            },
            "transformer_blocks.16.": {
              "type": "number"
            },
            "transformer_blocks.17.": {
              "type": "number"
            },
            "transformer_blocks.18.": {
              "type": "number"
            },
            "transformer_blocks.19.": {
              "type": "number"
            },
            "transformer_blocks.20.": {
              "type": "number"
            },
            "transformer_blocks.21.": {
              "type": "number"
            },
            "transformer_blocks.22.": {
              "type": "number"
            },
            "transformer_blocks.23.": {
              "type": "number"
            },
            "transformer_blocks.24.": {
              "type": "number"
            },
            "transformer_blocks.25.": {
              "type": "number"
            },
            "transformer_blocks.26.": {
              "type": "number"
            },
            "transformer_blocks.27.": {
              "type": "number"
            },
            "transformer_blocks.28.": {
              "type": "number"
            },
            "transformer_blocks.29.": {
              "type": "number"
            },
            "transformer_blocks.30.": {
              "type": "number"
            },
            "transformer_blocks.31.": {
              "type": "number"
            },
            "transformer_blocks.32.": {
              "type": "number"
            },
            "transformer_blocks.33.": {
              "type": "number"
            },
            "transformer_blocks.34.": {
              "type": "number"
            },
            "transformer_blocks.35.": {
              "type": "number"
            },
            "transformer_blocks.36.": {
              "type": "number"
            },
            "transformer_blocks.37.": {
              "type": "number"
            },
            "transformer_blocks.38.": {
              "type": "number"
            },
            "transformer_blocks.39.": {
              "type": "number"
            },
            "transformer_blocks.40.": {
              "type": "number"
            },
            "transformer_blocks.41.": {
              "type": "number"
            },
            "transformer_blocks.42.": {
              "type": "number"
            },
            "transformer_blocks.43.": {
              "type": "number"
            },
            "transformer_blocks.44.": {
              "type": "number"
            },
            "transformer_blocks.45.": {
              "type": "number"
            },
            "transformer_blocks.46.": {
              "type": "number"
            },
            "transformer_blocks.47.": {
              "type": "number"
            },
            "transformer_blocks.48.": {
              "type": "number"
            },
            "transformer_blocks.49.": {
              "type": "number"
            },
            "transformer_blocks.50.": {
              "type": "number"
            },
            "transformer_blocks.51.": {
              "type": "number"
            },
            "transformer_blocks.52.": {
              "type": "number"
            },
            "transformer_blocks.53.": {
              "type": "number"
            },
            "transformer_blocks.54.": {
              "type": "number"
            },
            "transformer_blocks.55.": {
              "type": "number"
            },
            "transformer_blocks.56.": {
              "type": "number"
            },
            "transformer_blocks.57.": {
              "type": "number"
            },
            "transformer_blocks.58.": {
              "type": "number"
            },
            "transformer_blocks.59.": {
              "type": "number"
            },
            "proj_out.": {
              "type": "number"
            }
          },
          "required": [
            "model1",
            "model2",
            "pos_embeds.",
            "img_in.",
            "txt_norm.",
            "txt_in.",
            "time_text_embed.",
            "transformer_blocks.0.",
            "transformer_blocks.1.",
            "transformer_blocks.2.",
            "transformer_blocks.3.",
            "transformer_blocks.4.",
            "transformer_blocks.5.",
            "transformer_blocks.6.",
            "transformer_blocks.7.",
            "transformer_blocks.8.",
            "transformer_blocks.9.",
            "transformer_blocks.10.",
            "transformer_blocks.11.",
            "transformer_blocks.12.",
            "transformer_blocks.13.",
            "transformer_blocks.14.",
            "transformer_blocks.15.",
            "transformer_blocks.16.",
            "transformer_blocks.17.",
            "transformer_blocks.18.",
            "transformer_blocks.19.",
            "transformer_blocks.20.",
            "transformer_blocks.21.",
            "transformer_blocks.22.",
            "transformer_blocks.23.",
            "transformer_blocks.24.",
            "transformer_blocks.25.",
            "transformer_blocks.26.",
            "transformer_blocks.27.",
            "transformer_blocks.28.",
            "transformer_blocks.29.",
            "transformer_blocks.30.",
            "transformer_blocks.31.",
            "transformer_blocks.32.",
            "transformer_blocks.33.",
            "transformer_blocks.34.",
            "transformer_blocks.35.",
            "transformer_blocks.36.",
            "transformer_blocks.37.",
            "transformer_blocks.38.",
            "transformer_blocks.39.",
            "transformer_blocks.40.",
            "transformer_blocks.41.",
            "transformer_blocks.42.",
            "transformer_blocks.43.",
            "transformer_blocks.44.",
            "transformer_blocks.45.",
            "transformer_blocks.46.",
            "transformer_blocks.47.",
            "transformer_blocks.48.",
            "transformer_blocks.49.",
            "transformer_blocks.50.",
            "transformer_blocks.51.",
            "transformer_blocks.52.",
            "transformer_blocks.53.",
            "transformer_blocks.54.",
            "transformer_blocks.55.",
            "transformer_blocks.56.",
            "transformer_blocks.57.",
            "transformer_blocks.58.",
            "transformer_blocks.59.",
            "proj_out."
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model_merging/model_specific"
    },
    "PerturbedAttentionGuidance": {
      "title": "PerturbedAttentionGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scale": {
              "type": "number"
            }
          },
          "required": ["model", "scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "model_patches/unet"
    },
    "AlignYourStepsScheduler": {
      "title": "AlignYourStepsScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_type, steps, denoise",
          "properties": {
            "model_type": {
              "type": "string"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model_type", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "UNetSelfAttentionMultiply": {
      "title": "UNetSelfAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, q, k, v, out",
          "properties": {
            "model": {
              "type": "string"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "UNetCrossAttentionMultiply": {
      "title": "UNetCrossAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, q, k, v, out",
          "properties": {
            "model": {
              "type": "string"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["model", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "CLIPAttentionMultiply": {
      "title": "CLIPAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, q, k, v, out",
          "properties": {
            "clip": {
              "type": "string"
            },
            "q": {
              "type": "number"
            },
            "k": {
              "type": "number"
            },
            "v": {
              "type": "number"
            },
            "out": {
              "type": "number"
            }
          },
          "required": ["clip", "q", "k", "v", "out"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "UNetTemporalAttentionMultiply": {
      "title": "UNetTemporalAttentionMultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, self_structural, self_temporal, cross_structural, cross_temporal",
          "properties": {
            "model": {
              "type": "string"
            },
            "self_structural": {
              "type": "number"
            },
            "self_temporal": {
              "type": "number"
            },
            "cross_structural": {
              "type": "number"
            },
            "cross_temporal": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "self_structural",
            "self_temporal",
            "cross_structural",
            "cross_temporal"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing/attention_experiments"
    },
    "SamplerLCMUpscale": {
      "title": "SamplerLCMUpscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: scale_ratio, scale_steps, upscale_method",
          "properties": {
            "scale_ratio": {
              "type": "number"
            },
            "scale_steps": {
              "type": "number"
            },
            "upscale_method": {
              "type": "string"
            }
          },
          "required": ["scale_ratio", "scale_steps", "upscale_method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/samplers"
    },
    "SamplerEulerCFGpp": {
      "title": "SamplerEulerCFGpp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: version",
          "properties": {
            "version": {
              "type": "string"
            }
          },
          "required": ["version"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLER",
          "items": [
            {
              "type": "SAMPLER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "WebcamCapture": {
      "title": "WebcamCapture",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, capture_on_queue",
          "properties": {
            "image": {
              "type": "WEBCAM"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "capture_on_queue": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "width", "height", "capture_on_queue"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "EmptyLatentAudio": {
      "title": "EmptyLatentAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: seconds, batch_size",
          "properties": {
            "seconds": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["seconds", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "VAEEncodeAudio": {
      "title": "VAEEncodeAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, vae",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["audio", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "VAEDecodeAudio": {
      "title": "VAEDecodeAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["samples", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "SaveAudio": {
      "title": "SaveAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, filename_prefix",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["audio", "filename_prefix"]
        }
      },
      "$category": "audio"
    },
    "SaveAudioMP3": {
      "title": "SaveAudioMP3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, filename_prefix, quality",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "filename_prefix": {
              "type": "string"
            },
            "quality": {
              "type": "string"
            }
          },
          "required": ["audio", "filename_prefix", "quality"]
        }
      },
      "$category": "audio"
    },
    "SaveAudioOpus": {
      "title": "SaveAudioOpus",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, filename_prefix, quality",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "filename_prefix": {
              "type": "string"
            },
            "quality": {
              "type": "string"
            }
          },
          "required": ["audio", "filename_prefix", "quality"]
        }
      },
      "$category": "audio"
    },
    "LoadAudio": {
      "title": "LoadAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio",
          "properties": {
            "audio": {
              "type": "string"
            }
          },
          "required": ["audio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "audio"
    },
    "PreviewAudio": {
      "title": "PreviewAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio",
          "properties": {
            "audio": {
              "type": "AUDIO"
            }
          },
          "required": ["audio"]
        }
      },
      "$category": "audio"
    },
    "ConditioningStableAudio": {
      "title": "ConditioningStableAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, seconds_start, seconds_total",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "seconds_start": {
              "type": "number"
            },
            "seconds_total": {
              "type": "number"
            }
          },
          "required": ["positive", "negative", "seconds_start", "seconds_total"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning"
    },
    "RecordAudio": {
      "title": "RecordAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio",
          "properties": {
            "audio": {
              "type": "AUDIO_RECORD"
            }
          },
          "required": ["audio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "audio"
    },
    "TripleCLIPLoader": {
      "title": "TripleCLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, clip_name3",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "clip_name3": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "clip_name3"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "EmptySD3LatentImage": {
      "title": "EmptySD3LatentImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/sd3"
    },
    "CLIPTextEncodeSD3": {
      "title": "CLIPTextEncodeSD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, clip_l, clip_g, t5xxl, empty_padding",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "clip_l": {
              "type": "string"
            },
            "clip_g": {
              "type": "string"
            },
            "t5xxl": {
              "type": "string"
            },
            "empty_padding": {
              "type": "string"
            }
          },
          "required": ["clip", "clip_l", "clip_g", "t5xxl", "empty_padding"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "ControlNetApplySD3": {
      "title": "ControlNetApplySD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, vae, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "vae": {
              "type": "VAE"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "vae",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/controlnet"
    },
    "SkipLayerGuidanceSD3": {
      "title": "SkipLayerGuidanceSD3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, layers, scale, start_percent, end_percent",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "layers": {
              "type": "string"
            },
            "scale": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "layers",
            "scale",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/guidance"
    },
    "GITSScheduler": {
      "title": "GITSScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: coeff, steps, denoise",
          "properties": {
            "coeff": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["coeff", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "SetUnionControlNetType": {
      "title": "SetUnionControlNetType",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, type",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["control_net", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/controlnet"
    },
    "ControlNetInpaintingAliMamaApply": {
      "title": "ControlNetInpaintingAliMamaApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, vae, image, mask, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "vae": {
              "type": "VAE"
            },
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "vae",
            "image",
            "mask",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/controlnet"
    },
    "CLIPTextEncodeHunyuanDiT": {
      "title": "CLIPTextEncodeHunyuanDiT",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, bert, mt5xl",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "bert": {
              "type": "string"
            },
            "mt5xl": {
              "type": "string"
            }
          },
          "required": ["clip", "bert", "mt5xl"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "TextEncodeHunyuanVideo_ImageToVideo": {
      "title": "TextEncodeHunyuanVideo_ImageToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, clip_vision_output, prompt, image_interleave",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "clip_vision_output": {
              "type": "CLIP_VISION_OUTPUT"
            },
            "prompt": {
              "type": "string"
            },
            "image_interleave": {
              "type": "number"
            }
          },
          "required": [
            "clip",
            "clip_vision_output",
            "prompt",
            "image_interleave"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "EmptyHunyuanLatentVideo": {
      "title": "EmptyHunyuanLatentVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, length, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "length", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/video"
    },
    "HunyuanImageToVideo": {
      "title": "HunyuanImageToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, vae, width, height, length, batch_size, guidance_type",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "guidance_type": {
              "type": "string"
            }
          },
          "required": [
            "positive",
            "vae",
            "width",
            "height",
            "length",
            "batch_size",
            "guidance_type"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/video_models"
    },
    "CLIPTextEncodeFlux": {
      "title": "CLIPTextEncodeFlux",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, clip_l, t5xxl, guidance",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "clip_l": {
              "type": "string"
            },
            "t5xxl": {
              "type": "string"
            },
            "guidance": {
              "type": "number"
            }
          },
          "required": ["clip", "clip_l", "t5xxl", "guidance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    },
    "FluxGuidance": {
      "title": "FluxGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, guidance",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "guidance": {
              "type": "number"
            }
          },
          "required": ["conditioning", "guidance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    },
    "FluxDisableGuidance": {
      "title": "FluxDisableGuidance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    },
    "FluxKontextImageScale": {
      "title": "FluxKontextImageScale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    },
    "FluxKontextMultiReferenceLatentMethod": {
      "title": "FluxKontextMultiReferenceLatentMethod",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, reference_latents_method",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "reference_latents_method": {
              "type": "string"
            }
          },
          "required": ["conditioning", "reference_latents_method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/flux"
    },
    "LoraSave": {
      "title": "LoraSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: filename_prefix, rank, lora_type, bias_diff",
          "properties": {
            "filename_prefix": {
              "type": "string"
            },
            "rank": {
              "type": "number"
            },
            "lora_type": {
              "type": "string"
            },
            "bias_diff": {
              "type": "BOOLEAN"
            }
          },
          "required": ["filename_prefix", "rank", "lora_type", "bias_diff"]
        }
      },
      "$category": "_for_testing"
    },
    "TorchCompileModel": {
      "title": "TorchCompileModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, backend",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "backend": {
              "type": "string"
            }
          },
          "required": ["model", "backend"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "EmptyMochiLatentVideo": {
      "title": "EmptyMochiLatentVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, length, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "length", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/video"
    },
    "SkipLayerGuidanceDiT": {
      "title": "SkipLayerGuidanceDiT",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, double_layers, single_layers, scale, start_percent, end_percent, rescaling_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "double_layers": {
              "type": "string"
            },
            "single_layers": {
              "type": "string"
            },
            "scale": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "rescaling_scale": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "double_layers",
            "single_layers",
            "scale",
            "start_percent",
            "end_percent",
            "rescaling_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/guidance"
    },
    "SkipLayerGuidanceDiTSimple": {
      "title": "SkipLayerGuidanceDiTSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, double_layers, single_layers, start_percent, end_percent",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "double_layers": {
              "type": "string"
            },
            "single_layers": {
              "type": "string"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "double_layers",
            "single_layers",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/guidance"
    },
    "Mahiro": {
      "title": "Mahiro",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "EmptyLTXVLatentVideo": {
      "title": "EmptyLTXVLatentVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, length, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "length", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/video/ltxv"
    },
    "LTXVImgToVideo": {
      "title": "LTXVImgToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, image, width, height, length, batch_size, strength",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "image",
            "width",
            "height",
            "length",
            "batch_size",
            "strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "ModelSamplingLTXV": {
      "title": "ModelSamplingLTXV",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, max_shift, base_shift",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "max_shift": {
              "type": "number"
            },
            "base_shift": {
              "type": "number"
            }
          },
          "required": ["model", "max_shift", "base_shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "LTXVConditioning": {
      "title": "LTXVConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, frame_rate",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "frame_rate": {
              "type": "number"
            }
          },
          "required": ["positive", "negative", "frame_rate"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/video_models"
    },
    "LTXVScheduler": {
      "title": "LTXVScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: steps, max_shift, base_shift, stretch, terminal",
          "properties": {
            "steps": {
              "type": "number"
            },
            "max_shift": {
              "type": "number"
            },
            "base_shift": {
              "type": "number"
            },
            "stretch": {
              "type": "BOOLEAN"
            },
            "terminal": {
              "type": "number"
            }
          },
          "required": [
            "steps",
            "max_shift",
            "base_shift",
            "stretch",
            "terminal"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "LTXVAddGuide": {
      "title": "LTXVAddGuide",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, latent, image, frame_idx, strength",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "latent": {
              "type": "LATENT"
            },
            "image": {
              "type": "IMAGE"
            },
            "frame_idx": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "latent",
            "image",
            "frame_idx",
            "strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "LTXVPreprocess": {
      "title": "LTXVPreprocess",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, img_compression",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "img_compression": {
              "type": "number"
            }
          },
          "required": ["image", "img_compression"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "LTXVCropGuides": {
      "title": "LTXVCropGuides",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, latent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent": {
              "type": "LATENT"
            }
          },
          "required": ["positive", "negative", "latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "CreateHookLora": {
      "title": "CreateHookLora",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora_name, strength_model, strength_clip",
          "properties": {
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": ["lora_name", "strength_model", "strength_clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/create"
    },
    "CreateHookLoraModelOnly": {
      "title": "CreateHookLoraModelOnly",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora_name, strength_model",
          "properties": {
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["lora_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/create"
    },
    "CreateHookModelAsLora": {
      "title": "CreateHookModelAsLora",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name, strength_model, strength_clip",
          "properties": {
            "ckpt_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": ["ckpt_name", "strength_model", "strength_clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/create"
    },
    "CreateHookModelAsLoraModelOnly": {
      "title": "CreateHookModelAsLoraModelOnly",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name, strength_model",
          "properties": {
            "ckpt_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["ckpt_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/create"
    },
    "SetHookKeyframes": {
      "title": "SetHookKeyframes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: hooks",
          "properties": {
            "hooks": {
              "type": "HOOKS"
            }
          },
          "required": ["hooks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/scheduling"
    },
    "CreateHookKeyframe": {
      "title": "CreateHookKeyframe",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: strength_mult, start_percent",
          "properties": {
            "strength_mult": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            }
          },
          "required": ["strength_mult", "start_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOK_KEYFRAMES",
          "items": [
            {
              "type": "HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/scheduling"
    },
    "CreateHookKeyframesInterpolated": {
      "title": "CreateHookKeyframesInterpolated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: strength_start, strength_end, interpolation, start_percent, end_percent, keyframes_count, print_keyframes",
          "properties": {
            "strength_start": {
              "type": "number"
            },
            "strength_end": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "keyframes_count": {
              "type": "number"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "strength_start",
            "strength_end",
            "interpolation",
            "start_percent",
            "end_percent",
            "keyframes_count",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOK_KEYFRAMES",
          "items": [
            {
              "type": "HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/scheduling"
    },
    "CreateHookKeyframesFromFloats": {
      "title": "CreateHookKeyframesFromFloats",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: floats_strength, start_percent, end_percent, print_keyframes",
          "properties": {
            "floats_strength": {
              "type": "FLOATS"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "floats_strength",
            "start_percent",
            "end_percent",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOK_KEYFRAMES",
          "items": [
            {
              "type": "HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/scheduling"
    },
    "CombineHooks2": {
      "title": "CombineHooks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/combine"
    },
    "CombineHooks4": {
      "title": "CombineHooksFour",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/combine"
    },
    "CombineHooks8": {
      "title": "CombineHooksEight",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/combine"
    },
    "ConditioningSetProperties": {
      "title": "ConditioningSetProperties",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond_NEW, strength, set_cond_area",
          "properties": {
            "cond_NEW": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["cond_NEW", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/cond single"
    },
    "ConditioningSetPropertiesAndCombine": {
      "title": "ConditioningSetPropertiesAndCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond, cond_NEW, strength, set_cond_area",
          "properties": {
            "cond": {
              "type": "CONDITIONING"
            },
            "cond_NEW": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["cond", "cond_NEW", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/cond single"
    },
    "PairConditioningSetProperties": {
      "title": "PairConditioningSetProperties",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_NEW, negative_NEW, strength, set_cond_area",
          "properties": {
            "positive_NEW": {
              "type": "CONDITIONING"
            },
            "negative_NEW": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive_NEW",
            "negative_NEW",
            "strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "advanced/hooks/cond pair"
    },
    "PairConditioningSetPropertiesAndCombine": {
      "title": "PairConditioningSetPropertiesAndCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, positive_NEW, negative_NEW, strength, set_cond_area",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "positive_NEW": {
              "type": "CONDITIONING"
            },
            "negative_NEW": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive",
            "negative",
            "positive_NEW",
            "negative_NEW",
            "strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "advanced/hooks/cond pair"
    },
    "ConditioningSetDefaultCombine": {
      "title": "ConditioningSetDefaultAndCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond, cond_DEFAULT",
          "properties": {
            "cond": {
              "type": "CONDITIONING"
            },
            "cond_DEFAULT": {
              "type": "CONDITIONING"
            }
          },
          "required": ["cond", "cond_DEFAULT"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/cond single"
    },
    "PairConditioningSetDefaultCombine": {
      "title": "PairConditioningSetDefaultAndCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, positive_DEFAULT, negative_DEFAULT",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "positive_DEFAULT": {
              "type": "CONDITIONING"
            },
            "negative_DEFAULT": {
              "type": "CONDITIONING"
            }
          },
          "required": [
            "positive",
            "negative",
            "positive_DEFAULT",
            "negative_DEFAULT"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "advanced/hooks/cond pair"
    },
    "PairConditioningCombine": {
      "title": "PairConditioningCombine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_A, negative_A, positive_B, negative_B",
          "properties": {
            "positive_A": {
              "type": "CONDITIONING"
            },
            "negative_A": {
              "type": "CONDITIONING"
            },
            "positive_B": {
              "type": "CONDITIONING"
            },
            "negative_B": {
              "type": "CONDITIONING"
            }
          },
          "required": ["positive_A", "negative_A", "positive_B", "negative_B"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "advanced/hooks/cond pair"
    },
    "SetClipHooks": {
      "title": "SetClipHooks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, apply_to_conds, schedule_clip",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "apply_to_conds": {
              "type": "BOOLEAN"
            },
            "schedule_clip": {
              "type": "BOOLEAN"
            }
          },
          "required": ["clip", "apply_to_conds", "schedule_clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/hooks/clip"
    },
    "ConditioningTimestepsRange": {
      "title": "ConditioningTimestepsRange",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent", "end_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TIMESTEPS_RANGE, TIMESTEPS_RANGE, TIMESTEPS_RANGE",
          "items": [
            {
              "type": "TIMESTEPS_RANGE"
            },
            {
              "type": "TIMESTEPS_RANGE"
            },
            {
              "type": "TIMESTEPS_RANGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "advanced/hooks"
    },
    "Load3D": {
      "title": "Load3D",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_file, image, width, height",
          "properties": {
            "model_file": {
              "type": "string"
            },
            "image": {
              "type": "LOAD_3D"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["model_file", "image", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, STRING, IMAGE, IMAGE, LOAD3D_CAMERA, VIDEO",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "STRING"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "LOAD3D_CAMERA"
            },
            {
              "type": "VIDEO"
            }
          ],
          "maxItems": 7,
          "minItems": 7
        }
      },
      "$category": "3d"
    },
    "Load3DAnimation": {
      "title": "Load3DAnimation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_file, image, width, height",
          "properties": {
            "model_file": {
              "type": "string"
            },
            "image": {
              "type": "LOAD_3D_ANIMATION"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["model_file", "image", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, STRING, IMAGE, LOAD3D_CAMERA, VIDEO",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "STRING"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "LOAD3D_CAMERA"
            },
            {
              "type": "VIDEO"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "3d"
    },
    "Preview3D": {
      "title": "Preview3D",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_file",
          "properties": {
            "model_file": {
              "type": "string"
            }
          },
          "required": ["model_file"]
        }
      },
      "$category": "3d"
    },
    "Preview3DAnimation": {
      "title": "Preview3DAnimation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_file",
          "properties": {
            "model_file": {
              "type": "string"
            }
          },
          "required": ["model_file"]
        }
      },
      "$category": "3d"
    },
    "EmptyCosmosLatentVideo": {
      "title": "EmptyCosmosLatentVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, length, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "length", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/video"
    },
    "CosmosImageToVideoLatent": {
      "title": "CosmosImageToVideoLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae, width, height, length, batch_size",
          "properties": {
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["vae", "width", "height", "length", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/inpaint"
    },
    "CosmosPredict2ImageToVideoLatent": {
      "title": "CosmosPredict2ImageToVideoLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae, width, height, length, batch_size",
          "properties": {
            "vae": {
              "type": "VAE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["vae", "width", "height", "length", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/inpaint"
    },
    "SaveWEBM": {
      "title": "SaveWEBM",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix, codec, fps, crf",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            },
            "codec": {
              "type": "string"
            },
            "fps": {
              "type": "number"
            },
            "crf": {
              "type": "number"
            }
          },
          "required": ["images", "filename_prefix", "codec", "fps", "crf"]
        }
      },
      "$category": "image/video"
    },
    "SaveVideo": {
      "title": "SaveVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: video, filename_prefix, format, codec",
          "properties": {
            "video": {
              "type": "string"
            },
            "filename_prefix": {
              "type": "string"
            },
            "format": {
              "type": "string"
            },
            "codec": {
              "type": "string"
            }
          },
          "required": ["video", "filename_prefix", "format", "codec"]
        }
      },
      "$category": "image/video"
    },
    "CreateVideo": {
      "title": "CreateVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, fps",
          "properties": {
            "images": {
              "type": "string"
            },
            "fps": {
              "type": "number"
            }
          },
          "required": ["images", "fps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIDEO",
          "items": [
            {
              "type": "VIDEO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/video"
    },
    "GetVideoComponents": {
      "title": "GetVideoComponents",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: video",
          "properties": {
            "video": {
              "type": "string"
            }
          },
          "required": ["video"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, AUDIO, FLOAT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "AUDIO"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "image/video"
    },
    "LoadVideo": {
      "title": "LoadVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: file",
          "properties": {
            "file": {
              "type": "string"
            }
          },
          "required": ["file"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIDEO",
          "items": [
            {
              "type": "VIDEO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/video"
    },
    "CLIPTextEncodeLumina2": {
      "title": "CLIPTextEncodeLumina2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: system_prompt, user_prompt, clip",
          "properties": {
            "system_prompt": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            },
            "clip": {
              "type": "string"
            }
          },
          "required": ["system_prompt", "user_prompt", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "RenormCFG": {
      "title": "RenormCFG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, cfg_trunc, renorm_cfg",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "cfg_trunc": {
              "type": "number"
            },
            "renorm_cfg": {
              "type": "number"
            }
          },
          "required": ["model", "cfg_trunc", "renorm_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/model"
    },
    "WanTrackToVideo": {
      "title": "WanTrackToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, tracks, width, height, length, batch_size, temperature, topk, start_image",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "tracks": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            },
            "topk": {
              "type": "number"
            },
            "start_image": {
              "type": "string"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "tracks",
            "width",
            "height",
            "length",
            "batch_size",
            "temperature",
            "topk",
            "start_image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "WanImageToVideo": {
      "title": "WanImageToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "WanFunControlToVideo": {
      "title": "WanFunControlToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "Wan22FunControlToVideo": {
      "title": "Wan22FunControlToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "WanFunInpaintToVideo": {
      "title": "WanFunInpaintToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "WanFirstLastFrameToVideo": {
      "title": "WanFirstLastFrameToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "WanVaceToVideo": {
      "title": "WanVaceToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size, strength",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size",
            "strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT, INT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "conditioning/video_models"
    },
    "TrimVideoLatent": {
      "title": "TrimVideoLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, trim_amount",
          "properties": {
            "samples": {
              "type": "string"
            },
            "trim_amount": {
              "type": "number"
            }
          },
          "required": ["samples", "trim_amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/video"
    },
    "WanCameraImageToVideo": {
      "title": "WanCameraImageToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "WanPhantomSubjectToVideo": {
      "title": "WanPhantomSubjectToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "conditioning/video_models"
    },
    "WanSoundImageToVideo": {
      "title": "WanSoundImageToVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, width, height, length, batch_size",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "vae",
            "width",
            "height",
            "length",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "WanSoundImageToVideoExtend": {
      "title": "WanSoundImageToVideoExtend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, vae, length, video_latent",
          "properties": {
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "vae": {
              "type": "string"
            },
            "length": {
              "type": "number"
            },
            "video_latent": {
              "type": "string"
            }
          },
          "required": ["positive", "negative", "vae", "length", "video_latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "conditioning/video_models"
    },
    "Wan22ImageToVideoLatent": {
      "title": "Wan22ImageToVideoLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae, width, height, length, batch_size",
          "properties": {
            "vae": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["vae", "width", "height", "length", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/inpaint"
    },
    "LotusConditioning": {
      "title": "LotusConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning/lotus"
    },
    "EmptyLatentHunyuan3Dv2": {
      "title": "EmptyLatentHunyuan3Dv2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: resolution, batch_size",
          "properties": {
            "resolution": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["resolution", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/3d"
    },
    "Hunyuan3Dv2Conditioning": {
      "title": "Hunyuan3Dv2Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision_output",
          "properties": {
            "clip_vision_output": {
              "type": "CLIP_VISION_OUTPUT"
            }
          },
          "required": ["clip_vision_output"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/video_models"
    },
    "Hunyuan3Dv2ConditioningMultiView": {
      "title": "Hunyuan3Dv2ConditioningMultiView",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "conditioning/video_models"
    },
    "VAEDecodeHunyuan3D": {
      "title": "VAEDecodeHunyuan3D",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae, num_chunks, octree_resolution",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            },
            "num_chunks": {
              "type": "number"
            },
            "octree_resolution": {
              "type": "number"
            }
          },
          "required": ["samples", "vae", "num_chunks", "octree_resolution"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VOXEL",
          "items": [
            {
              "type": "VOXEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/3d"
    },
    "VoxelToMeshBasic": {
      "title": "VoxelToMeshBasic",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: voxel, threshold",
          "properties": {
            "voxel": {
              "type": "VOXEL"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["voxel", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MESH",
          "items": [
            {
              "type": "MESH"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "3d"
    },
    "VoxelToMesh": {
      "title": "VoxelToMesh",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: voxel, algorithm, threshold",
          "properties": {
            "voxel": {
              "type": "VOXEL"
            },
            "algorithm": {
              "type": "string"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["voxel", "algorithm", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MESH",
          "items": [
            {
              "type": "MESH"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "3d"
    },
    "SaveGLB": {
      "title": "SaveGLB",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mesh, filename_prefix",
          "properties": {
            "mesh": {
              "type": "MESH"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["mesh", "filename_prefix"]
        }
      },
      "$category": "3d"
    },
    "PrimitiveString": {
      "title": "String",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/primitive"
    },
    "PrimitiveStringMultiline": {
      "title": "StringMultiline",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/primitive"
    },
    "PrimitiveInt": {
      "title": "Int",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/primitive"
    },
    "PrimitiveFloat": {
      "title": "Float",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/primitive"
    },
    "PrimitiveBoolean": {
      "title": "Boolean",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/primitive"
    },
    "CFGZeroStar": {
      "title": "CFGZeroStar",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/guidance"
    },
    "CFGNorm": {
      "title": "CFGNorm",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, strength",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["model", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/guidance"
    },
    "OptimalStepsScheduler": {
      "title": "OptimalStepsScheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_type, steps, denoise",
          "properties": {
            "model_type": {
              "type": "string"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["model_type", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling/schedulers"
    },
    "QuadrupleCLIPLoader": {
      "title": "QuadrupleCLIPLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, clip_name3, clip_name4",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "clip_name3": {
              "type": "string"
            },
            "clip_name4": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "clip_name3", "clip_name4"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "CLIPTextEncodeHiDream": {
      "title": "CLIPTextEncodeHiDream",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, clip_l, clip_g, t5xxl, llama",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "clip_l": {
              "type": "string"
            },
            "clip_g": {
              "type": "string"
            },
            "t5xxl": {
              "type": "string"
            },
            "llama": {
              "type": "string"
            }
          },
          "required": ["clip", "clip_l", "clip_g", "t5xxl", "llama"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "FreSca": {
      "title": "FreSca",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scale_low, scale_high, freq_cutoff",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scale_low": {
              "type": "number"
            },
            "scale_high": {
              "type": "number"
            },
            "freq_cutoff": {
              "type": "number"
            }
          },
          "required": ["model", "scale_low", "scale_high", "freq_cutoff"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "_for_testing"
    },
    "APG": {
      "title": "APG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, eta, norm_threshold, momentum",
          "properties": {
            "model": {
              "type": "string"
            },
            "eta": {
              "type": "number"
            },
            "norm_threshold": {
              "type": "number"
            },
            "momentum": {
              "type": "number"
            }
          },
          "required": ["model", "eta", "norm_threshold", "momentum"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "sampling/custom_sampling"
    },
    "PreviewAny": {
      "title": "PreviewAny",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: source",
          "properties": {
            "source": {
              "type": "string"
            }
          },
          "required": ["source"]
        }
      },
      "$category": "utils"
    },
    "TextEncodeAceStepAudio": {
      "title": "TextEncodeAceStepAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, tags, lyrics, lyrics_strength",
          "properties": {
            "clip": {
              "type": "string"
            },
            "tags": {
              "type": "string"
            },
            "lyrics": {
              "type": "string"
            },
            "lyrics_strength": {
              "type": "number"
            }
          },
          "required": ["clip", "tags", "lyrics", "lyrics_strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "EmptyAceStepLatentAudio": {
      "title": "EmptyAceStepLatentAudio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: seconds, batch_size",
          "properties": {
            "seconds": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["seconds", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "latent/audio"
    },
    "StringConcatenate": {
      "title": "StringConcatenate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string_a, string_b, delimiter",
          "properties": {
            "string_a": {
              "type": "string"
            },
            "string_b": {
              "type": "string"
            },
            "delimiter": {
              "type": "string"
            }
          },
          "required": ["string_a", "string_b", "delimiter"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "StringSubstring": {
      "title": "StringSubstring",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, start, end",
          "properties": {
            "string": {
              "type": "string"
            },
            "start": {
              "type": "number"
            },
            "end": {
              "type": "number"
            }
          },
          "required": ["string", "start", "end"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "StringLength": {
      "title": "StringLength",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string",
          "properties": {
            "string": {
              "type": "string"
            }
          },
          "required": ["string"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "CaseConverter": {
      "title": "CaseConverter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, mode",
          "properties": {
            "string": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["string", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "StringTrim": {
      "title": "StringTrim",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, mode",
          "properties": {
            "string": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["string", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "StringReplace": {
      "title": "StringReplace",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, find, replace",
          "properties": {
            "string": {
              "type": "string"
            },
            "find": {
              "type": "string"
            },
            "replace": {
              "type": "string"
            }
          },
          "required": ["string", "find", "replace"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "StringContains": {
      "title": "StringContains",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, substring, case_sensitive",
          "properties": {
            "string": {
              "type": "string"
            },
            "substring": {
              "type": "string"
            },
            "case_sensitive": {
              "type": "string"
            }
          },
          "required": ["string", "substring", "case_sensitive"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "StringCompare": {
      "title": "StringCompare",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string_a, string_b, mode, case_sensitive",
          "properties": {
            "string_a": {
              "type": "string"
            },
            "string_b": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "case_sensitive": {
              "type": "string"
            }
          },
          "required": ["string_a", "string_b", "mode", "case_sensitive"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "RegexMatch": {
      "title": "RegexMatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, regex_pattern, case_insensitive, multiline, dotall",
          "properties": {
            "string": {
              "type": "string"
            },
            "regex_pattern": {
              "type": "string"
            },
            "case_insensitive": {
              "type": "string"
            },
            "multiline": {
              "type": "string"
            },
            "dotall": {
              "type": "string"
            }
          },
          "required": [
            "string",
            "regex_pattern",
            "case_insensitive",
            "multiline",
            "dotall"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "RegexExtract": {
      "title": "RegexExtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, regex_pattern, mode, case_insensitive, multiline, dotall, group_index",
          "properties": {
            "string": {
              "type": "string"
            },
            "regex_pattern": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "case_insensitive": {
              "type": "string"
            },
            "multiline": {
              "type": "string"
            },
            "dotall": {
              "type": "string"
            },
            "group_index": {
              "type": "number"
            }
          },
          "required": [
            "string",
            "regex_pattern",
            "mode",
            "case_insensitive",
            "multiline",
            "dotall",
            "group_index"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "RegexReplace": {
      "title": "RegexReplace",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, regex_pattern, replace",
          "properties": {
            "string": {
              "type": "string"
            },
            "regex_pattern": {
              "type": "string"
            },
            "replace": {
              "type": "string"
            }
          },
          "required": ["string", "regex_pattern", "replace"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "utils/string"
    },
    "WanCameraEmbedding": {
      "title": "WanCameraEmbedding",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: camera_pose, width, height, length",
          "properties": {
            "camera_pose": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["camera_pose", "width", "height", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WAN_CAMERA_EMBEDDING, INT, INT, INT",
          "items": [
            {
              "type": "WAN_CAMERA_EMBEDDING"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "camera"
    },
    "ReferenceLatent": {
      "title": "ReferenceLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning/edit_models"
    },
    "TCFG": {
      "title": "TCFG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "string"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/guidance"
    },
    "ContextWindowsManual": {
      "title": "ContextWindowsManualNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, context_length, context_overlap, context_schedule, context_stride, closed_loop, fuse_method, dim",
          "properties": {
            "model": {
              "type": "string"
            },
            "context_length": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            },
            "context_schedule": {
              "type": "string"
            },
            "context_stride": {
              "type": "number"
            },
            "closed_loop": {
              "type": "string"
            },
            "fuse_method": {
              "type": "string"
            },
            "dim": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "context_length",
            "context_overlap",
            "context_schedule",
            "context_stride",
            "closed_loop",
            "fuse_method",
            "dim"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "context"
    },
    "WanContextWindowsManual": {
      "title": "WanContextWindowsManualNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, context_length, context_overlap, context_schedule, context_stride, closed_loop, fuse_method",
          "properties": {
            "model": {
              "type": "string"
            },
            "context_length": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            },
            "context_schedule": {
              "type": "string"
            },
            "context_stride": {
              "type": "number"
            },
            "closed_loop": {
              "type": "string"
            },
            "fuse_method": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "context_length",
            "context_overlap",
            "context_schedule",
            "context_stride",
            "closed_loop",
            "fuse_method"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "context"
    },
    "TextEncodeQwenImageEdit": {
      "title": "TextEncodeQwenImageEdit",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, prompt",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "prompt": {
              "type": "string"
            }
          },
          "required": ["clip", "prompt"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/conditioning"
    },
    "ModelPatchLoader": {
      "title": "ModelPatchLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: name",
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": ["name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL_PATCH",
          "items": [
            {
              "type": "MODEL_PATCH"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders"
    },
    "QwenImageDiffsynthControlnet": {
      "title": "QwenImageDiffsynthControlnet",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, model_patch, vae, image, strength",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "model_patch": {
              "type": "MODEL_PATCH"
            },
            "vae": {
              "type": "VAE"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["model", "model_patch", "vae", "image", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/loaders/qwen"
    },
    "EasyCache": {
      "title": "EasyCacheNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, reuse_threshold, start_percent, end_percent, verbose",
          "properties": {
            "model": {
              "type": "string"
            },
            "reuse_threshold": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "verbose": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "reuse_threshold",
            "start_percent",
            "end_percent",
            "verbose"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/debug/model"
    },
    "LazyCache": {
      "title": "LazyCacheNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, reuse_threshold, start_percent, end_percent, verbose",
          "properties": {
            "model": {
              "type": "string"
            },
            "reuse_threshold": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "verbose": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "reuse_threshold",
            "start_percent",
            "end_percent",
            "verbose"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "advanced/debug/model"
    },
    "AudioEncoderLoader": {
      "title": "AudioEncoderLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio_encoder_name",
          "properties": {
            "audio_encoder_name": {
              "type": "string"
            }
          },
          "required": ["audio_encoder_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO_ENCODER",
          "items": [
            {
              "type": "AUDIO_ENCODER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "loaders"
    },
    "AudioEncoderEncode": {
      "title": "AudioEncoderEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio_encoder, audio",
          "properties": {
            "audio_encoder": {
              "type": "AUDIO_ENCODER"
            },
            "audio": {
              "type": "AUDIO"
            }
          },
          "required": ["audio_encoder", "audio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO_ENCODER_OUTPUT",
          "items": [
            {
              "type": "AUDIO_ENCODER_OUTPUT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "conditioning"
    },
    "Animation Builder (mtb)": {
      "title": "MTB_AnimationBuilder",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: total_frames, scale_float, loop_count, raw_iteration, raw_loop",
          "properties": {
            "total_frames": {
              "type": "number"
            },
            "scale_float": {
              "type": "number"
            },
            "loop_count": {
              "type": "number"
            },
            "raw_iteration": {
              "type": "number"
            },
            "raw_loop": {
              "type": "number"
            }
          },
          "required": [
            "total_frames",
            "scale_float",
            "loop_count",
            "raw_iteration",
            "raw_loop"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, INT, BOOLEAN",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            },
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "mtb/animation"
    },
    "Audio Sequence (mtb)": {
      "title": "MTB_AudioSequence",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: silence_duration",
          "properties": {
            "silence_duration": {
              "type": "number"
            }
          },
          "required": ["silence_duration"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/audio"
    },
    "Audio Stack (mtb)": {
      "title": "MTB_AudioStack",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/audio"
    },
    "Audio Cut (mtb)": {
      "title": "MTB_AudioCut",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, length, offset",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "length": {
              "type": "number"
            },
            "offset": {
              "type": "number"
            }
          },
          "required": ["audio", "length", "offset"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/audio"
    },
    "Audio Resample (mtb)": {
      "title": "MTB_AudioResample",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, sample_rate",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "sample_rate": {
              "type": "number"
            }
          },
          "required": ["audio", "sample_rate"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/audio"
    },
    "Audio Isolate Speaker (mtb)": {
      "title": "MTB_AudioIsolateSpeaker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio, whisper_data, target_speaker, mode, fade_ms",
          "properties": {
            "audio": {
              "type": "AUDIO"
            },
            "whisper_data": {
              "type": "WHISPER_CHUNKS"
            },
            "target_speaker": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "fade_ms": {
              "type": "number"
            }
          },
          "required": [
            "audio",
            "whisper_data",
            "target_speaker",
            "mode",
            "fade_ms"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO",
          "items": [
            {
              "type": "AUDIO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/audio"
    },
    "Load Whisper (mtb)": {
      "title": "MTB_LoadWhisper",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_size",
          "properties": {
            "model_size": {
              "type": "string"
            }
          },
          "required": ["model_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WHISPER_PIPELINE",
          "items": [
            {
              "type": "WHISPER_PIPELINE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/audio"
    },
    "Audio To Text (mtb)": {
      "title": "MTB_AudioToText",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pipeline, audio, language, return_timestamps",
          "properties": {
            "pipeline": {
              "type": "WHISPER_PIPELINE"
            },
            "audio": {
              "type": "AUDIO"
            },
            "language": {
              "type": "string"
            },
            "return_timestamps": {
              "type": "BOOLEAN"
            }
          },
          "required": ["pipeline", "audio", "language", "return_timestamps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, WHISPER_OUTPUT",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "WHISPER_OUTPUT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/audio"
    },
    "Process Whisper Output (mtb)": {
      "title": "MTB_ProcessWhisperOutput",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: whisper_output, min_chunk_length",
          "properties": {
            "whisper_output": {
              "type": "WHISPER_OUTPUT"
            },
            "min_chunk_length": {
              "type": "number"
            }
          },
          "required": ["whisper_output", "min_chunk_length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, WHISPER_CHUNKS",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "WHISPER_CHUNKS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/audio"
    },
    "Process Whisper Diarization (mtb)": {
      "title": "MTB_ProcessWhisperDiarization",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: whisper_chunks, audio, backend, num_speakers",
          "properties": {
            "whisper_chunks": {
              "type": "WHISPER_CHUNKS"
            },
            "audio": {
              "type": "AUDIO"
            },
            "backend": {
              "type": "string"
            },
            "num_speakers": {
              "type": "number"
            }
          },
          "required": ["whisper_chunks", "audio", "backend", "num_speakers"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WHISPER_CHUNKS",
          "items": [
            {
              "type": "WHISPER_CHUNKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/audio"
    },
    "Audio Duration (mtb)": {
      "title": "MTB_AudioDuration",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio",
          "properties": {
            "audio": {
              "type": "AUDIO"
            }
          },
          "required": ["audio"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/audio"
    },
    "Batch2d Transform (mtb)": {
      "title": "MTB_Batch2dTransform",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, border_handling, constant_color",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "border_handling": {
              "type": "string"
            },
            "constant_color": {
              "type": "COLOR"
            }
          },
          "required": ["image", "border_handling", "constant_color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Float (mtb)": {
      "title": "MTB_BatchFloat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mode, count, min, max, easing",
          "properties": {
            "mode": {
              "type": "string"
            },
            "count": {
              "type": "number"
            },
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            },
            "easing": {
              "type": "string"
            }
          },
          "required": ["mode", "count", "min", "max", "easing"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS",
          "items": [
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Float Assemble (mtb)": {
      "title": "MTB_BatchFloatAssemble",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: reverse",
          "properties": {
            "reverse": {
              "type": "BOOLEAN"
            }
          },
          "required": ["reverse"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS",
          "items": [
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Float Fill (mtb)": {
      "title": "MTB_BatchFloatFill",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: floats, direction, value, count",
          "properties": {
            "floats": {
              "type": "FLOATS"
            },
            "direction": {
              "type": "string"
            },
            "value": {
              "type": "number"
            },
            "count": {
              "type": "number"
            }
          },
          "required": ["floats", "direction", "value", "count"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS",
          "items": [
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Float Fit (mtb)": {
      "title": "MTB_BatchFloatFit",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: values, clamp, auto_compute_source, source_min, source_max, target_min, target_max, easing",
          "properties": {
            "values": {
              "type": "FLOATS"
            },
            "clamp": {
              "type": "BOOLEAN"
            },
            "auto_compute_source": {
              "type": "BOOLEAN"
            },
            "source_min": {
              "type": "number"
            },
            "source_max": {
              "type": "number"
            },
            "target_min": {
              "type": "number"
            },
            "target_max": {
              "type": "number"
            },
            "easing": {
              "type": "string"
            }
          },
          "required": [
            "values",
            "clamp",
            "auto_compute_source",
            "source_min",
            "source_max",
            "target_min",
            "target_max",
            "easing"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS",
          "items": [
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Float Math (mtb)": {
      "title": "MTB_BatchFloatMath",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: reverse, operation",
          "properties": {
            "reverse": {
              "type": "BOOLEAN"
            },
            "operation": {
              "type": "string"
            }
          },
          "required": ["reverse", "operation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS",
          "items": [
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/utils"
    },
    "Batch Float Normalize (mtb)": {
      "title": "MTB_BatchFloatNormalize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: floats",
          "properties": {
            "floats": {
              "type": "FLOATS"
            }
          },
          "required": ["floats"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS",
          "items": [
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch From Folder (mtb)": {
      "title": "MTB_BatchFromFolder",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: enable, folder_path, mode, count, filter",
          "properties": {
            "enable": {
              "type": "BOOLEAN"
            },
            "folder_path": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "count": {
              "type": "number"
            },
            "filter": {
              "type": "string"
            }
          },
          "required": ["enable", "folder_path", "mode", "count", "filter"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Make (mtb)": {
      "title": "MTB_BatchMake",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, count",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "count": {
              "type": "number"
            }
          },
          "required": ["image", "count"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Merge (mtb)": {
      "title": "MTB_BatchMerge",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: fusion_mode, fill",
          "properties": {
            "fusion_mode": {
              "type": "string"
            },
            "fill": {
              "type": "string"
            }
          },
          "required": ["fusion_mode", "fill"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Sequence (mtb)": {
      "title": "MTB_BatchSequence",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: reverse",
          "properties": {
            "reverse": {
              "type": "BOOLEAN"
            }
          },
          "required": ["reverse"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Sequence Plus (mtb)": {
      "title": "MTB_BatchSequencePlus",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: transition, overlap_frames, reverse",
          "properties": {
            "transition": {
              "type": "string"
            },
            "overlap_frames": {
              "type": "number"
            },
            "reverse": {
              "type": "BOOLEAN"
            }
          },
          "required": ["transition", "overlap_frames", "reverse"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Shake (mtb)": {
      "title": "MTB_BatchShake",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, position_amount_x, position_amount_y, rotation_amount, frequency, frequency_divider, octaves, seed",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "position_amount_x": {
              "type": "number"
            },
            "position_amount_y": {
              "type": "number"
            },
            "rotation_amount": {
              "type": "number"
            },
            "frequency": {
              "type": "number"
            },
            "frequency_divider": {
              "type": "number"
            },
            "octaves": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "position_amount_x",
            "position_amount_y",
            "rotation_amount",
            "frequency",
            "frequency_divider",
            "octaves",
            "seed"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, FLOATS, FLOATS, FLOATS",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "FLOATS"
            },
            {
              "type": "FLOATS"
            },
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Shape (mtb)": {
      "title": "MTB_BatchShape",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: count, shape, image_width, image_height, shape_size, color, bg_color, shade_color, thickness, shadex, shadey",
          "properties": {
            "count": {
              "type": "number"
            },
            "shape": {
              "type": "string"
            },
            "image_width": {
              "type": "number"
            },
            "image_height": {
              "type": "number"
            },
            "shape_size": {
              "type": "number"
            },
            "color": {
              "type": "COLOR"
            },
            "bg_color": {
              "type": "COLOR"
            },
            "shade_color": {
              "type": "COLOR"
            },
            "thickness": {
              "type": "number"
            },
            "shadex": {
              "type": "number"
            },
            "shadey": {
              "type": "number"
            }
          },
          "required": [
            "count",
            "shape",
            "image_width",
            "image_height",
            "shape_size",
            "color",
            "bg_color",
            "shade_color",
            "thickness",
            "shadex",
            "shadey"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Batch Time Wrap (mtb)": {
      "title": "MTB_BatchTimeWrap",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_count, frames, curve",
          "properties": {
            "target_count": {
              "type": "number"
            },
            "frames": {
              "type": "IMAGE"
            },
            "curve": {
              "type": "FLOATS"
            }
          },
          "required": ["target_count", "frames", "curve"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, FLOATS",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/batch"
    },
    "Plot Batch Float (mtb)": {
      "title": "MTB_PlotBatchFloat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, point_size, seed, start_at_zero",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "point_size": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            },
            "start_at_zero": {
              "type": "BOOLEAN"
            }
          },
          "required": ["width", "height", "point_size", "seed", "start_at_zero"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/batch"
    },
    "Sublist To Image Batch (mtb)": {
      "title": "MTB_SublistToImageBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: tensors",
          "properties": {
            "tensors": {
              "type": "IMAGE"
            }
          },
          "required": ["tensors"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "batch_processing"
    },
    "Image Batch To Sublist (mtb)": {
      "title": "MTB_ImageBatchToSublist",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sub_batch_size",
          "properties": {
            "sub_batch_size": {
              "type": "number"
            }
          },
          "required": ["sub_batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "batch_processing"
    },
    "Smart Step (mtb)": {
      "title": "MTB_SmartStep",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: step, start_percent, end_percent",
          "properties": {
            "step": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": ["step", "start_percent", "end_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "mtb/conditioning"
    },
    "Styles Loader (mtb)": {
      "title": "MTB_StylesLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: style_name",
          "properties": {
            "style_name": {
              "type": "string"
            }
          },
          "required": ["style_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/conditioning"
    },
    "Interpolate Clip Sequential (mtb)": {
      "title": "MTB_InterpolateClipSequential",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_text, text_to_replace, clip, interpolation_strength",
          "properties": {
            "base_text": {
              "type": "string"
            },
            "text_to_replace": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            },
            "interpolation_strength": {
              "type": "number"
            }
          },
          "required": [
            "base_text",
            "text_to_replace",
            "clip",
            "interpolation_strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/conditioning"
    },
    "Interpolate Condition (mtb)": {
      "title": "MTB_InterpolateCondition",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: blend",
          "properties": {
            "blend": {
              "type": "number"
            }
          },
          "required": ["blend"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/conditioning"
    },
    "Bbox From Mask (mtb)": {
      "title": "MTB_BboxFromMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, invert",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "invert": {
              "type": "BOOLEAN"
            }
          },
          "required": ["mask", "invert"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOX, IMAGE",
          "items": [
            {
              "type": "BBOX"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/crop"
    },
    "Bbox (mtb)": {
      "title": "MTB_Bbox",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: x, y, width, height",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["x", "y", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOX",
          "items": [
            {
              "type": "BBOX"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/crop"
    },
    "Crop (mtb)": {
      "title": "MTB_Crop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, BBOX",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BBOX"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "mtb/crop"
    },
    "Uncrop (mtb)": {
      "title": "MTB_Uncrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, crop_image, bbox, border_blending",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "crop_image": {
              "type": "IMAGE"
            },
            "bbox": {
              "type": "BBOX"
            },
            "border_blending": {
              "type": "number"
            }
          },
          "required": ["image", "crop_image", "bbox", "border_blending"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/crop"
    },
    "Split Bbox (mtb)": {
      "title": "MTB_SplitBbox",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: bbox",
          "properties": {
            "bbox": {
              "type": "BBOX"
            }
          },
          "required": ["bbox"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "mtb/crop"
    },
    "Upscale Bbox By (mtb)": {
      "title": "MTB_UpscaleBboxBy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: bbox, scale",
          "properties": {
            "bbox": {
              "type": "BBOX"
            },
            "scale": {
              "type": "number"
            }
          },
          "required": ["bbox", "scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOX",
          "items": [
            {
              "type": "BBOX"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/crop"
    },
    "BBox Force Dimensions (mtb)": {
      "title": "MTB_BBoxForceDimensions",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: bbox, width, height",
          "properties": {
            "bbox": {
              "type": "BBOX"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["bbox", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOX",
          "items": [
            {
              "type": "BBOX"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/crop"
    },
    "Curve (mtb)": {
      "title": "MTB_Curve",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: curve",
          "properties": {
            "curve": {
              "type": "FLOAT_CURVE"
            }
          },
          "required": ["curve"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT_CURVE",
          "items": [
            {
              "type": "FLOAT_CURVE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/curve"
    },
    "Curve To Float (mtb)": {
      "title": "MTB_CurveToFloat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: curve, steps",
          "properties": {
            "curve": {
              "type": "FLOAT_CURVE"
            },
            "steps": {
              "type": "number"
            }
          },
          "required": ["curve", "steps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS, FLOAT",
          "items": [
            {
              "type": "FLOATS"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/curve"
    },
    "Debug (mtb)": {
      "title": "MTB_Debug",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: output_to_console",
          "properties": {
            "output_to_console": {
              "type": "BOOLEAN"
            }
          },
          "required": ["output_to_console"]
        }
      },
      "$category": "mtb/debug"
    },
    "Save Tensors (mtb)": {
      "title": "MTB_SaveTensors",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: filename_prefix",
          "properties": {
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["filename_prefix"]
        }
      },
      "$category": "mtb/debug"
    },
    "Deep Bump (mtb)": {
      "title": "MTB_DeepBump",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mode, color_to_normals_overlap, normals_to_curvature_blur_radius, normals_to_height_seamless",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "color_to_normals_overlap": {
              "type": "string"
            },
            "normals_to_curvature_blur_radius": {
              "type": "string"
            },
            "normals_to_height_seamless": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "mode",
            "color_to_normals_overlap",
            "normals_to_curvature_blur_radius",
            "normals_to_height_seamless"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/textures"
    },
    "Restore Face (mtb)": {
      "title": "MTB_RestoreFace",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, aligned, only_center_face, weight, save_tmp_steps",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "FACEENHANCE_MODEL"
            },
            "aligned": {
              "type": "BOOLEAN"
            },
            "only_center_face": {
              "type": "BOOLEAN"
            },
            "weight": {
              "type": "number"
            },
            "save_tmp_steps": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "model",
            "aligned",
            "only_center_face",
            "weight",
            "save_tmp_steps"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/facetools"
    },
    "Load Face Enhance Model (mtb)": {
      "title": "MTB_LoadFaceEnhanceModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name, upscale",
          "properties": {
            "model_name": {
              "type": "string"
            },
            "upscale": {
              "type": "number"
            }
          },
          "required": ["model_name", "upscale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FACEENHANCE_MODEL",
          "items": [
            {
              "type": "FACEENHANCE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/facetools"
    },
    "Face Swap (mtb)": {
      "title": "MTB_FaceSwap",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, reference, faces_index, faceanalysis_model, faceswap_model",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "reference": {
              "type": "IMAGE"
            },
            "faces_index": {
              "type": "string"
            },
            "faceanalysis_model": {
              "type": "FACE_ANALYSIS_MODEL"
            },
            "faceswap_model": {
              "type": "FACESWAP_MODEL"
            }
          },
          "required": [
            "image",
            "reference",
            "faces_index",
            "faceanalysis_model",
            "faceswap_model"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/facetools"
    },
    "Load Face Swap Model (mtb)": {
      "title": "MTB_LoadFaceSwapModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: faceswap_model",
          "properties": {
            "faceswap_model": {
              "type": "string"
            }
          },
          "required": ["faceswap_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FACESWAP_MODEL",
          "items": [
            {
              "type": "FACESWAP_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/facetools"
    },
    "Load Face Analysis Model (mtb)": {
      "title": "MTB_LoadFaceAnalysisModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: faceswap_model",
          "properties": {
            "faceswap_model": {
              "type": "string"
            }
          },
          "required": ["faceswap_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FACE_ANALYSIS_MODEL",
          "items": [
            {
              "type": "FACE_ANALYSIS_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/facetools"
    },
    "Filter Z (mtb)": {
      "title": "MTB_FilterZ",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, depth, to_black, threshold, invert",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "depth": {
              "type": "IMAGE"
            },
            "to_black": {
              "type": "BOOLEAN"
            },
            "threshold": {
              "type": "number"
            },
            "invert": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "depth", "to_black", "threshold", "invert"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/filters"
    },
    "Unsplash Image (mtb)": {
      "title": "MTB_UnsplashImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, random_seed",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "random_seed": {
              "type": "number"
            }
          },
          "required": ["width", "height", "random_seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/generate"
    },
    "Text To Image (mtb)": {
      "title": "MTB_TextToImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, font, wrap, trim, line_height, font_size, width, height, color, background, h_align, v_align, h_offset, v_offset, h_coverage",
          "properties": {
            "text": {
              "type": "string"
            },
            "font": {
              "type": "string"
            },
            "wrap": {
              "type": "BOOLEAN"
            },
            "trim": {
              "type": "BOOLEAN"
            },
            "line_height": {
              "type": "number"
            },
            "font_size": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "color": {
              "type": "COLOR"
            },
            "background": {
              "type": "COLOR"
            },
            "h_align": {
              "type": "string"
            },
            "v_align": {
              "type": "string"
            },
            "h_offset": {
              "type": "number"
            },
            "v_offset": {
              "type": "number"
            },
            "h_coverage": {
              "type": "number"
            }
          },
          "required": [
            "text",
            "font",
            "wrap",
            "trim",
            "line_height",
            "font_size",
            "width",
            "height",
            "color",
            "background",
            "h_align",
            "v_align",
            "h_offset",
            "v_offset",
            "h_coverage"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/generate"
    },
    "String Replace (mtb)": {
      "title": "MTB_StringReplace",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string, old, new, use_regex",
          "properties": {
            "string": {
              "type": "string"
            },
            "old": {
              "type": "string"
            },
            "new": {
              "type": "string"
            },
            "use_regex": {
              "type": "BOOLEAN"
            }
          },
          "required": ["string", "old", "new", "use_regex"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/string"
    },
    "Fit Number (mtb)": {
      "title": "MTB_FitNumber",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value, clamp, source_min, source_max, target_min, target_max, easing",
          "properties": {
            "value": {
              "type": "number"
            },
            "clamp": {
              "type": "BOOLEAN"
            },
            "source_min": {
              "type": "number"
            },
            "source_max": {
              "type": "number"
            },
            "target_min": {
              "type": "number"
            },
            "target_max": {
              "type": "number"
            },
            "easing": {
              "type": "string"
            }
          },
          "required": [
            "value",
            "clamp",
            "source_min",
            "source_max",
            "target_min",
            "target_max",
            "easing"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/math"
    },
    "Get Batch From History (mtb)": {
      "title": "MTB_GetBatchFromHistory",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: enable, count, offset, internal_count",
          "properties": {
            "enable": {
              "type": "BOOLEAN"
            },
            "count": {
              "type": "number"
            },
            "offset": {
              "type": "number"
            },
            "internal_count": {
              "type": "number"
            }
          },
          "required": ["enable", "count", "offset", "internal_count"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/animation"
    },
    "Any To String (mtb)": {
      "title": "MTB_AnyToString",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input",
          "properties": {
            "input": {
              "type": "*"
            }
          },
          "required": ["input"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/converters"
    },
    "Concat Images (mtb)": {
      "title": "MTB_ConcatImages",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: reverse",
          "properties": {
            "reverse": {
              "type": "BOOLEAN"
            }
          },
          "required": ["reverse"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image"
    },
    "Math Expression (mtb)": {
      "title": "MTB_MathExpression",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: expression",
          "properties": {
            "expression": {
              "type": "string"
            }
          },
          "required": ["expression"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, INT",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/math"
    },
    "To Device (mtb)": {
      "title": "MTB_ToDevice",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ignore_errors, device",
          "properties": {
            "ignore_errors": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["ignore_errors", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/utils"
    },
    "Apply Text Template (mtb)": {
      "title": "MTB_ApplyTextTemplate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: template",
          "properties": {
            "template": {
              "type": "string"
            }
          },
          "required": ["template"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/utils"
    },
    "Match Dimensions (mtb)": {
      "title": "MTB_MatchDimensions",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: source, reference, match",
          "properties": {
            "source": {
              "type": "IMAGE"
            },
            "reference": {
              "type": "IMAGE"
            },
            "match": {
              "type": "string"
            }
          },
          "required": ["source", "reference", "match"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "mtb/utils"
    },
    "Auto Pan Equilateral (mtb)": {
      "title": "MTB_AutoPanEquilateral",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: equilateral_image, fovX, fovY, elevation, frame_count, width, height",
          "properties": {
            "equilateral_image": {
              "type": "IMAGE"
            },
            "fovX": {
              "type": "number"
            },
            "fovY": {
              "type": "number"
            },
            "elevation": {
              "type": "number"
            },
            "frame_count": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": [
            "equilateral_image",
            "fovX",
            "fovY",
            "elevation",
            "frame_count",
            "width",
            "height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/utils"
    },
    "Floats To Float (mtb)": {
      "title": "MTB_FloatsToFloat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: floats",
          "properties": {
            "floats": {
              "type": "FLOATS"
            }
          },
          "required": ["floats"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/utils"
    },
    "Float To Floats (mtb)": {
      "title": "MTB_FloatToFloats",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float",
          "properties": {
            "float": {
              "type": "number"
            }
          },
          "required": ["float"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS",
          "items": [
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/utils"
    },
    "Floats To Ints (mtb)": {
      "title": "MTB_FloatsToInts",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: floats",
          "properties": {
            "floats": {
              "type": "FLOATS"
            }
          },
          "required": ["floats"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INTS, INT",
          "items": [
            {
              "type": "INTS"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/utils"
    },
    "Tensor Ops (mtb)": {
      "title": "MTB_TensorOps",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: tensor, operation, value, source_min, source_max, target_min, target_max, dtype, use_mean",
          "properties": {
            "tensor": {
              "type": "IMAGE"
            },
            "operation": {
              "type": "string"
            },
            "value": {
              "type": "number"
            },
            "source_min": {
              "type": "number"
            },
            "source_max": {
              "type": "number"
            },
            "target_min": {
              "type": "number"
            },
            "target_max": {
              "type": "number"
            },
            "dtype": {
              "type": "string"
            },
            "use_mean": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "tensor",
            "operation",
            "value",
            "source_min",
            "source_max",
            "target_min",
            "target_max",
            "dtype",
            "use_mean"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/tensor_ops"
    },
    "Color Correct (mtb)": {
      "title": "MTB_ColorCorrect",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, clamp, gamma, contrast, exposure, offset, hue, saturation, value",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "clamp": {
              "type": "string"
            },
            "gamma": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "exposure": {
              "type": "number"
            },
            "offset": {
              "type": "number"
            },
            "hue": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "clamp",
            "gamma",
            "contrast",
            "exposure",
            "offset",
            "hue",
            "saturation",
            "value"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image processing"
    },
    "Color Correct GPU (mtb)": {
      "title": "MTB_ColorCorrectGPU",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, force_gpu, clamp, gamma, contrast, exposure, offset, hue, saturation, value",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "force_gpu": {
              "type": "BOOLEAN"
            },
            "clamp": {
              "type": "string"
            },
            "gamma": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "exposure": {
              "type": "number"
            },
            "offset": {
              "type": "number"
            },
            "hue": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "force_gpu",
            "clamp",
            "gamma",
            "contrast",
            "exposure",
            "offset",
            "hue",
            "saturation",
            "value"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image processing"
    },
    "Image Compare (mtb)": {
      "title": "MTB_ImageCompare",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: imageA, imageB, mode",
          "properties": {
            "imageA": {
              "type": "IMAGE"
            },
            "imageB": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["imageA", "imageB", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image"
    },
    "Image Tile Offset (mtb)": {
      "title": "MTB_ImageTileOffset",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, tilesX, tilesY",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "tilesX": {
              "type": "number"
            },
            "tilesY": {
              "type": "number"
            }
          },
          "required": ["image", "tilesX", "tilesY"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/generate"
    },
    "Blur (mtb)": {
      "title": "MTB_Blur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sigmaX, sigmaY",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sigmaX": {
              "type": "number"
            },
            "sigmaY": {
              "type": "number"
            }
          },
          "required": ["image", "sigmaX", "sigmaY"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image processing"
    },
    "Mask To Image (mtb)": {
      "title": "MTB_MaskToImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, color, background",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "color": {
              "type": "COLOR"
            },
            "background": {
              "type": "COLOR"
            }
          },
          "required": ["mask", "color", "background"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/generate"
    },
    "Colored Image (mtb)": {
      "title": "MTB_ColoredImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: color, width, height",
          "properties": {
            "color": {
              "type": "COLOR"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["color", "width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/generate"
    },
    "Image Premultiply (mtb)": {
      "title": "MTB_ImagePremultiply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, invert",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "invert": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "mask", "invert"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image"
    },
    "Image Resize Factor (mtb)": {
      "title": "MTB_ImageResizeFactor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, factor, supersample, resampling",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "factor": {
              "type": "number"
            },
            "supersample": {
              "type": "BOOLEAN"
            },
            "resampling": {
              "type": "string"
            }
          },
          "required": ["image", "factor", "supersample", "resampling"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/image"
    },
    "Save Image Grid (mtb)": {
      "title": "MTB_SaveImageGrid",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix, save_intermediate",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            },
            "save_intermediate": {
              "type": "BOOLEAN"
            }
          },
          "required": ["images", "filename_prefix", "save_intermediate"]
        }
      },
      "$category": "mtb/IO"
    },
    "Load Image From Url (mtb)": {
      "title": "MTB_LoadImageFromUrl",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: url",
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "required": ["url"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/IO"
    },
    "Sharpen (mtb)": {
      "title": "MTB_Sharpen",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sharpen_radius, sigma_x, sigma_y, alpha",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sharpen_radius": {
              "type": "number"
            },
            "sigma_x": {
              "type": "number"
            },
            "sigma_y": {
              "type": "number"
            },
            "alpha": {
              "type": "number"
            }
          },
          "required": ["image", "sharpen_radius", "sigma_x", "sigma_y", "alpha"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image processing"
    },
    "Extract Coordinates From Image (mtb)": {
      "title": "MTB_ExtractCoordinatesFromImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: threshold, max_points",
          "properties": {
            "threshold": {
              "type": "number"
            },
            "max_points": {
              "type": "number"
            }
          },
          "required": ["threshold", "max_points"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BATCH_COORDINATES, IMAGE",
          "items": [
            {
              "type": "BATCH_COORDINATES"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/coordinates"
    },
    "Coordinates To String (mtb)": {
      "title": "MTB_CoordinatesToString",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: coordinates, frame",
          "properties": {
            "coordinates": {
              "type": "BATCH_COORDINATES"
            },
            "frame": {
              "type": "number"
            }
          },
          "required": ["coordinates", "frame"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/coordinates"
    },
    "Stack Images (mtb)": {
      "title": "MTB_StackImages",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vertical",
          "properties": {
            "vertical": {
              "type": "BOOLEAN"
            }
          },
          "required": ["vertical"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image utils"
    },
    "Pick From Batch (mtb)": {
      "title": "MTB_PickFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, from_direction, count",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "from_direction": {
              "type": "string"
            },
            "count": {
              "type": "number"
            }
          },
          "required": ["image", "from_direction", "count"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/image utils"
    },
    "Save Image (mtb)": {
      "title": "MTB_SaveImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["images", "filename_prefix"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/image utils"
    },
    "Save Gif (mtb)": {
      "title": "MTB_SaveGif",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, fps, resize_by, optimize, pingpong, resample_filter, use_ffmpeg",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "fps": {
              "type": "number"
            },
            "resize_by": {
              "type": "number"
            },
            "optimize": {
              "type": "BOOLEAN"
            },
            "pingpong": {
              "type": "BOOLEAN"
            },
            "resample_filter": {
              "type": "string"
            },
            "use_ffmpeg": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "fps",
            "resize_by",
            "optimize",
            "pingpong",
            "resample_filter",
            "use_ffmpeg"
          ]
        }
      },
      "$category": "mtb/IO"
    },
    "Export With Ffmpeg (mtb)": {
      "title": "MTB_ExportWithFfmpeg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: fps, prefix, format, codec",
          "properties": {
            "fps": {
              "type": "number"
            },
            "prefix": {
              "type": "string"
            },
            "format": {
              "type": "string"
            },
            "codec": {
              "type": "string"
            }
          },
          "required": ["fps", "prefix", "format", "codec"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIDEO",
          "items": [
            {
              "type": "VIDEO"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/IO"
    },
    "Add To Playlist (mtb)": {
      "title": "MTB_AddToPlaylist",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: relative_paths, persistant_playlist, playlist_name, index",
          "properties": {
            "relative_paths": {
              "type": "BOOLEAN"
            },
            "persistant_playlist": {
              "type": "BOOLEAN"
            },
            "playlist_name": {
              "type": "string"
            },
            "index": {
              "type": "number"
            }
          },
          "required": [
            "relative_paths",
            "persistant_playlist",
            "playlist_name",
            "index"
          ]
        }
      },
      "$category": "mtb/IO"
    },
    "Read Playlist (mtb)": {
      "title": "MTB_ReadPlaylist",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: enable, persistant_playlist, playlist_name, index",
          "properties": {
            "enable": {
              "type": "BOOLEAN"
            },
            "persistant_playlist": {
              "type": "BOOLEAN"
            },
            "playlist_name": {
              "type": "string"
            },
            "index": {
              "type": "number"
            }
          },
          "required": [
            "enable",
            "persistant_playlist",
            "playlist_name",
            "index"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PLAYLIST",
          "items": [
            {
              "type": "PLAYLIST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/IO"
    },
    "Latent Lerp (mtb)": {
      "title": "MTB_LatentLerp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: A, B, t",
          "properties": {
            "A": {
              "type": "LATENT"
            },
            "B": {
              "type": "LATENT"
            },
            "t": {
              "type": "number"
            }
          },
          "required": ["A", "B", "t"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/latent"
    },
    "Image H264 Compression (mtb)": {
      "title": "ImageH264Compression",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, crf",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "crf": {
              "type": "number"
            }
          },
          "required": ["image", "crf"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image"
    },
    "Image Remove Background Rembg (mtb)": {
      "title": "MTB_ImageRemoveBackgroundRembg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, alpha_matting, alpha_matting_foreground_threshold, alpha_matting_background_threshold, alpha_matting_erode_size, post_process_mask, bgcolor",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "alpha_matting": {
              "type": "BOOLEAN"
            },
            "alpha_matting_foreground_threshold": {
              "type": "number"
            },
            "alpha_matting_background_threshold": {
              "type": "number"
            },
            "alpha_matting_erode_size": {
              "type": "number"
            },
            "post_process_mask": {
              "type": "BOOLEAN"
            },
            "bgcolor": {
              "type": "COLOR"
            }
          },
          "required": [
            "image",
            "alpha_matting",
            "alpha_matting_foreground_threshold",
            "alpha_matting_background_threshold",
            "alpha_matting_erode_size",
            "post_process_mask",
            "bgcolor"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "mtb/image"
    },
    "Model Patch Seamless (mtb)": {
      "title": "MTB_ModelPatchSeamless",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, startStep, stopStep, tilingX, tilingY",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "startStep": {
              "type": "number"
            },
            "stopStep": {
              "type": "number"
            },
            "tilingX": {
              "type": "BOOLEAN"
            },
            "tilingY": {
              "type": "BOOLEAN"
            }
          },
          "required": ["model", "startStep", "stopStep", "tilingX", "tilingY"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, MODEL",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/textures"
    },
    "Vae Decode (mtb)": {
      "title": "MTB_VaeDecode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, vae, seamless_model, use_tiling_decoder, tile_size",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            },
            "seamless_model": {
              "type": "BOOLEAN"
            },
            "use_tiling_decoder": {
              "type": "BOOLEAN"
            },
            "tile_size": {
              "type": "number"
            }
          },
          "required": [
            "samples",
            "vae",
            "seamless_model",
            "use_tiling_decoder",
            "tile_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/decode"
    },
    "Float To Number (mtb)": {
      "title": "MTB_FloatToNumber",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float",
          "properties": {
            "float": {
              "type": "number"
            }
          },
          "required": ["float"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER",
          "items": [
            {
              "type": "NUMBER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/number"
    },
    "Int To Bool (mtb)": {
      "title": "MTB_IntToBool",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: int",
          "properties": {
            "int": {
              "type": "number"
            }
          },
          "required": ["int"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/number"
    },
    "Int To Number (mtb)": {
      "title": "MTB_IntToNumber",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: int",
          "properties": {
            "int": {
              "type": "number"
            }
          },
          "required": ["int"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER",
          "items": [
            {
              "type": "NUMBER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/number"
    },
    "Postshot Export (mtb)": {
      "title": "MTB_PostshotExport",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: project_file, export_splat_ply, postshot_cli",
          "properties": {
            "project_file": {
              "type": "string"
            },
            "export_splat_ply": {
              "type": "string"
            },
            "postshot_cli": {
              "type": "string"
            }
          },
          "required": ["project_file", "export_splat_ply", "postshot_cli"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/postshot"
    },
    "Postshot Train (mtb)": {
      "title": "MTB_PostshotTrain",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, profile, image_select, train_steps_limit, output_path, postshot_cli",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "profile": {
              "type": "string"
            },
            "image_select": {
              "type": "string"
            },
            "train_steps_limit": {
              "type": "number"
            },
            "output_path": {
              "type": "string"
            },
            "postshot_cli": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "profile",
            "image_select",
            "train_steps_limit",
            "output_path",
            "postshot_cli"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/postshot"
    },
    "Model Pruner (mtb)": {
      "title": "MTB_ModelPruner",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: save_separately, save_folder, fix_clip, remove_junk, ema_mode, precision_unet, operation_unet, precision_clip, operation_clip, precision_vae, operation_vae",
          "properties": {
            "save_separately": {
              "type": "BOOLEAN"
            },
            "save_folder": {
              "type": "string"
            },
            "fix_clip": {
              "type": "BOOLEAN"
            },
            "remove_junk": {
              "type": "BOOLEAN"
            },
            "ema_mode": {
              "type": "string"
            },
            "precision_unet": {
              "type": "string"
            },
            "operation_unet": {
              "type": "string"
            },
            "precision_clip": {
              "type": "string"
            },
            "operation_clip": {
              "type": "string"
            },
            "precision_vae": {
              "type": "string"
            },
            "operation_vae": {
              "type": "string"
            }
          },
          "required": [
            "save_separately",
            "save_folder",
            "fix_clip",
            "remove_junk",
            "ema_mode",
            "precision_unet",
            "operation_unet",
            "precision_clip",
            "operation_clip",
            "precision_vae",
            "operation_vae"
          ]
        }
      },
      "$category": "mtb/prune"
    },
    "Qr Code (mtb)": {
      "title": "MTB_QrCode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: url, width, height, error_correct, box_size, border, invert",
          "properties": {
            "url": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "error_correct": {
              "type": "string"
            },
            "box_size": {
              "type": "number"
            },
            "border": {
              "type": "number"
            },
            "invert": {
              "type": "string"
            }
          },
          "required": [
            "url",
            "width",
            "height",
            "error_correct",
            "box_size",
            "border",
            "invert"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/generate"
    },
    "Transform Image (mtb)": {
      "title": "MTB_TransformImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, x, y, zoom, angle, shear, border_handling, constant_color",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "zoom": {
              "type": "number"
            },
            "angle": {
              "type": "number"
            },
            "shear": {
              "type": "number"
            },
            "border_handling": {
              "type": "string"
            },
            "constant_color": {
              "type": "COLOR"
            }
          },
          "required": [
            "image",
            "x",
            "y",
            "zoom",
            "angle",
            "shear",
            "border_handling",
            "constant_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/transform"
    },
    "Load Image Sequence (mtb)": {
      "title": "MTB_LoadImageSequence",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: path, current_frame",
          "properties": {
            "path": {
              "type": "string"
            },
            "current_frame": {
              "type": "number"
            }
          },
          "required": ["path", "current_frame"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "mtb/IO"
    },
    "Save Image Sequence (mtb)": {
      "title": "MTB_SaveImageSequence",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix, current_frame",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            },
            "current_frame": {
              "type": "number"
            }
          },
          "required": ["images", "filename_prefix", "current_frame"]
        }
      },
      "$category": "mtb/IO"
    },
    "Load Vit Matte Model (mtb)": {
      "title": "MTB_LoadVitMatteModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: kind, autodownload",
          "properties": {
            "kind": {
              "type": "string"
            },
            "autodownload": {
              "type": "BOOLEAN"
            }
          },
          "required": ["kind", "autodownload"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VITMATTE_MODEL",
          "items": [
            {
              "type": "VITMATTE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/vitmatte"
    },
    "Generate Trimap (mtb)": {
      "title": "MTB_GenerateTrimap",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, erode, dilate",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "erode": {
              "type": "number"
            },
            "dilate": {
              "type": "number"
            }
          },
          "required": ["mask", "erode", "dilate"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "mtb/vitmatte"
    },
    "Apply Vit Matte (mtb)": {
      "title": "MTB_ApplyVitMatte",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, image, trimap, returns",
          "properties": {
            "model": {
              "type": "VITMATTE_MODEL"
            },
            "image": {
              "type": "IMAGE"
            },
            "trimap": {
              "type": "IMAGE"
            },
            "returns": {
              "type": "string"
            }
          },
          "required": ["model", "image", "trimap", "returns"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "mtb/utils"
    },
    "TimestepKeyframe": {
      "title": "TimestepKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "ACN_TimestepKeyframeInterpolation": {
      "title": "TimestepKeyframeInterpolationNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent, strength_start, strength_end, interpolation, intervals",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "strength_start": {
              "type": "number"
            },
            "strength_end": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "intervals": {
              "type": "number"
            }
          },
          "required": [
            "start_percent",
            "end_percent",
            "strength_start",
            "strength_end",
            "interpolation",
            "intervals"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "ACN_TimestepKeyframeFromStrengthList": {
      "title": "TimestepKeyframeFromStrengthListNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float_strengths, start_percent, end_percent",
          "properties": {
            "float_strengths": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": ["float_strengths", "start_percent", "end_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "LatentKeyframe": {
      "title": "LatentKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_index, strength",
          "properties": {
            "batch_index": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["batch_index", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_KEYFRAME",
          "items": [
            {
              "type": "LATENT_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "LatentKeyframeTiming": {
      "title": "LatentKeyframeInterpolationNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_index_from, batch_index_to_excl, strength_from, strength_to, interpolation",
          "properties": {
            "batch_index_from": {
              "type": "number"
            },
            "batch_index_to_excl": {
              "type": "number"
            },
            "strength_from": {
              "type": "number"
            },
            "strength_to": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            }
          },
          "required": [
            "batch_index_from",
            "batch_index_to_excl",
            "strength_from",
            "strength_to",
            "interpolation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_KEYFRAME",
          "items": [
            {
              "type": "LATENT_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "LatentKeyframeBatchedGroup": {
      "title": "LatentKeyframeBatchedGroupNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float_strengths",
          "properties": {
            "float_strengths": {
              "type": "number"
            }
          },
          "required": ["float_strengths"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_KEYFRAME",
          "items": [
            {
              "type": "LATENT_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "LatentKeyframeGroup": {
      "title": "LatentKeyframeGroupNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: index_strengths",
          "properties": {
            "index_strengths": {
              "type": "string"
            }
          },
          "required": ["index_strengths"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT_KEYFRAME",
          "items": [
            {
              "type": "LATENT_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes"
    },
    "ACN_AdvancedControlNetApply_v2": {
      "title": "AdvancedControlNetApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝"
    },
    "ACN_AdvancedControlNetApplySingle_v2": {
      "title": "AdvancedControlNetApplySingle",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, control_net, image, strength, start_percent, end_percent",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "conditioning",
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, MODEL",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝"
    },
    "ACN_ControlNetLoaderAdvanced": {
      "title": "ControlNetLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cnet",
          "properties": {
            "cnet": {
              "type": "string"
            }
          },
          "required": ["cnet"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝"
    },
    "ACN_DiffControlNetLoaderAdvanced": {
      "title": "DiffControlNetLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, cnet",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "cnet": {
              "type": "string"
            }
          },
          "required": ["model", "cnet"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝"
    },
    "ACN_ScaledSoftControlNetWeights": {
      "title": "ScaledSoftUniversalWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_multiplier",
          "properties": {
            "base_multiplier": {
              "type": "number"
            }
          },
          "required": ["base_multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights"
    },
    "ScaledSoftMaskedUniversalWeights": {
      "title": "ScaledSoftMaskedUniversalWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, min_base_multiplier, max_base_multiplier",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "min_base_multiplier": {
              "type": "number"
            },
            "max_base_multiplier": {
              "type": "number"
            }
          },
          "required": ["mask", "min_base_multiplier", "max_base_multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights"
    },
    "ACN_SoftControlNetWeightsSD15": {
      "title": "SoftControlNetWeightsSD15",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: output_0, output_1, output_2, output_3, output_4, output_5, output_6, output_7, output_8, output_9, output_10, output_11, middle_0",
          "properties": {
            "output_0": {
              "type": "number"
            },
            "output_1": {
              "type": "number"
            },
            "output_2": {
              "type": "number"
            },
            "output_3": {
              "type": "number"
            },
            "output_4": {
              "type": "number"
            },
            "output_5": {
              "type": "number"
            },
            "output_6": {
              "type": "number"
            },
            "output_7": {
              "type": "number"
            },
            "output_8": {
              "type": "number"
            },
            "output_9": {
              "type": "number"
            },
            "output_10": {
              "type": "number"
            },
            "output_11": {
              "type": "number"
            },
            "middle_0": {
              "type": "number"
            }
          },
          "required": [
            "output_0",
            "output_1",
            "output_2",
            "output_3",
            "output_4",
            "output_5",
            "output_6",
            "output_7",
            "output_8",
            "output_9",
            "output_10",
            "output_11",
            "middle_0"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet"
    },
    "ACN_CustomControlNetWeightsSD15": {
      "title": "CustomControlNetWeightsSD15",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: output_0, output_1, output_2, output_3, output_4, output_5, output_6, output_7, output_8, output_9, output_10, output_11, middle_0",
          "properties": {
            "output_0": {
              "type": "number"
            },
            "output_1": {
              "type": "number"
            },
            "output_2": {
              "type": "number"
            },
            "output_3": {
              "type": "number"
            },
            "output_4": {
              "type": "number"
            },
            "output_5": {
              "type": "number"
            },
            "output_6": {
              "type": "number"
            },
            "output_7": {
              "type": "number"
            },
            "output_8": {
              "type": "number"
            },
            "output_9": {
              "type": "number"
            },
            "output_10": {
              "type": "number"
            },
            "output_11": {
              "type": "number"
            },
            "middle_0": {
              "type": "number"
            }
          },
          "required": [
            "output_0",
            "output_1",
            "output_2",
            "output_3",
            "output_4",
            "output_5",
            "output_6",
            "output_7",
            "output_8",
            "output_9",
            "output_10",
            "output_11",
            "middle_0"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet"
    },
    "ACN_CustomControlNetWeightsFlux": {
      "title": "CustomControlNetWeightsFlux",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_0, input_1, input_2, input_3, input_4, input_5, input_6, input_7, input_8, input_9, input_10, input_11, input_12, input_13, input_14, input_15, input_16, input_17, input_18",
          "properties": {
            "input_0": {
              "type": "number"
            },
            "input_1": {
              "type": "number"
            },
            "input_2": {
              "type": "number"
            },
            "input_3": {
              "type": "number"
            },
            "input_4": {
              "type": "number"
            },
            "input_5": {
              "type": "number"
            },
            "input_6": {
              "type": "number"
            },
            "input_7": {
              "type": "number"
            },
            "input_8": {
              "type": "number"
            },
            "input_9": {
              "type": "number"
            },
            "input_10": {
              "type": "number"
            },
            "input_11": {
              "type": "number"
            },
            "input_12": {
              "type": "number"
            },
            "input_13": {
              "type": "number"
            },
            "input_14": {
              "type": "number"
            },
            "input_15": {
              "type": "number"
            },
            "input_16": {
              "type": "number"
            },
            "input_17": {
              "type": "number"
            },
            "input_18": {
              "type": "number"
            }
          },
          "required": [
            "input_0",
            "input_1",
            "input_2",
            "input_3",
            "input_4",
            "input_5",
            "input_6",
            "input_7",
            "input_8",
            "input_9",
            "input_10",
            "input_11",
            "input_12",
            "input_13",
            "input_14",
            "input_15",
            "input_16",
            "input_17",
            "input_18"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet"
    },
    "ACN_SoftT2IAdapterWeights": {
      "title": "SoftT2IAdapterWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_0, input_1, input_2, input_3",
          "properties": {
            "input_0": {
              "type": "number"
            },
            "input_1": {
              "type": "number"
            },
            "input_2": {
              "type": "number"
            },
            "input_3": {
              "type": "number"
            }
          },
          "required": ["input_0", "input_1", "input_2", "input_3"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter"
    },
    "ACN_CustomT2IAdapterWeights": {
      "title": "CustomT2IAdapterWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_0, input_1, input_2, input_3",
          "properties": {
            "input_0": {
              "type": "number"
            },
            "input_1": {
              "type": "number"
            },
            "input_2": {
              "type": "number"
            },
            "input_3": {
              "type": "number"
            }
          },
          "required": ["input_0", "input_1", "input_2", "input_3"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter"
    },
    "ACN_DefaultUniversalWeights": {
      "title": "DefaultWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights"
    },
    "ACN_ExtrasMiddleMult": {
      "title": "ExtrasMiddleMultNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: middle_mult",
          "properties": {
            "middle_mult": {
              "type": "number"
            }
          },
          "required": ["middle_mult"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CN_WEIGHTS_EXTRAS",
          "items": [
            {
              "type": "CN_WEIGHTS_EXTRAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/weights/extras"
    },
    "ACN_SparseCtrlRGBPreprocessor": {
      "title": "RgbSparseCtrlPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, latent_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "latent_size": {
              "type": "LATENT"
            }
          },
          "required": ["image", "vae", "latent_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/preprocess"
    },
    "ACN_SparseCtrlLoaderAdvanced": {
      "title": "SparseCtrlLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sparsectrl_name, use_motion, motion_strength, motion_scale",
          "properties": {
            "sparsectrl_name": {
              "type": "string"
            },
            "use_motion": {
              "type": "BOOLEAN"
            },
            "motion_strength": {
              "type": "number"
            },
            "motion_scale": {
              "type": "number"
            }
          },
          "required": [
            "sparsectrl_name",
            "use_motion",
            "motion_strength",
            "motion_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl"
    },
    "ACN_SparseCtrlMergedLoaderAdvanced": {
      "title": "SparseCtrlMergedLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sparsectrl_name, control_net_name, use_motion, motion_strength, motion_scale",
          "properties": {
            "sparsectrl_name": {
              "type": "string"
            },
            "control_net_name": {
              "type": "string"
            },
            "use_motion": {
              "type": "BOOLEAN"
            },
            "motion_strength": {
              "type": "number"
            },
            "motion_scale": {
              "type": "number"
            }
          },
          "required": [
            "sparsectrl_name",
            "control_net_name",
            "use_motion",
            "motion_strength",
            "motion_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/experimental"
    },
    "ACN_SparseCtrlIndexMethodNode": {
      "title": "SparseIndexMethodNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: indexes",
          "properties": {
            "indexes": {
              "type": "string"
            }
          },
          "required": ["indexes"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SPARSE_METHOD",
          "items": [
            {
              "type": "SPARSE_METHOD"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl"
    },
    "ACN_SparseCtrlSpreadMethodNode": {
      "title": "SparseSpreadMethodNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: spread",
          "properties": {
            "spread": {
              "type": "string"
            }
          },
          "required": ["spread"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SPARSE_METHOD",
          "items": [
            {
              "type": "SPARSE_METHOD"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl"
    },
    "ACN_SparseCtrlWeightExtras": {
      "title": "SparseWeightExtras",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CN_WEIGHTS_EXTRAS",
          "items": [
            {
              "type": "CN_WEIGHTS_EXTRAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/extras"
    },
    "ACN_ControlNet++LoaderSingle": {
      "title": "PlusPlusLoaderSingle",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: name, control_type",
          "properties": {
            "name": {
              "type": "string"
            },
            "control_type": {
              "type": "string"
            }
          },
          "required": ["name", "control_type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/ControlNet++"
    },
    "ACN_ControlNet++LoaderAdvanced": {
      "title": "PlusPlusLoaderAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: plus_input, name",
          "properties": {
            "plus_input": {
              "type": "PLUS_INPUT"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["plus_input", "name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET, IMAGE",
          "items": [
            {
              "type": "CONTROL_NET"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/ControlNet++"
    },
    "ACN_ControlNet++InputNode": {
      "title": "PlusPlusInputNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, control_type",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "control_type": {
              "type": "string"
            }
          },
          "required": ["image", "control_type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PLUS_INPUT",
          "items": [
            {
              "type": "PLUS_INPUT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/ControlNet++"
    },
    "ACN_CtrLoRALoader": {
      "title": "CtrLoRALoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base, lora",
          "properties": {
            "base": {
              "type": "string"
            },
            "lora": {
              "type": "string"
            }
          },
          "required": ["base", "lora"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/CtrLoRA"
    },
    "ACN_ReferencePreprocessor": {
      "title": "ReferencePreprocessorNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, latent_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "latent_size": {
              "type": "LATENT"
            }
          },
          "required": ["image", "vae", "latent_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/Reference/preprocess"
    },
    "ACN_ReferenceControlNet": {
      "title": "ReferenceControlNetNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: reference_type, style_fidelity, ref_weight",
          "properties": {
            "reference_type": {
              "type": "string"
            },
            "style_fidelity": {
              "type": "number"
            },
            "ref_weight": {
              "type": "number"
            }
          },
          "required": ["reference_type", "style_fidelity", "ref_weight"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/Reference"
    },
    "ACN_ReferenceControlNetFinetune": {
      "title": "ReferenceControlFinetune",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: attn_style_fidelity, attn_ref_weight, attn_strength, adain_style_fidelity, adain_ref_weight, adain_strength",
          "properties": {
            "attn_style_fidelity": {
              "type": "number"
            },
            "attn_ref_weight": {
              "type": "number"
            },
            "attn_strength": {
              "type": "number"
            },
            "adain_style_fidelity": {
              "type": "number"
            },
            "adain_ref_weight": {
              "type": "number"
            },
            "adain_strength": {
              "type": "number"
            }
          },
          "required": [
            "attn_style_fidelity",
            "attn_ref_weight",
            "attn_strength",
            "adain_style_fidelity",
            "adain_ref_weight",
            "adain_strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Adv-ControlNet 🛂🅐🅒🅝/Reference"
    },
    "LoadImagesFromDirectory": {
      "title": "LoadImagesFromDirectory",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: directory",
          "properties": {
            "directory": {
              "type": "string"
            }
          },
          "required": ["directory"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": ""
    },
    "ScaledSoftControlNetWeights": {
      "title": "ScaledSoftUniversalWeightsDeprecated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_multiplier, flip_weights",
          "properties": {
            "base_multiplier": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": ["base_multiplier", "flip_weights"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "SoftControlNetWeights": {
      "title": "SoftControlNetWeightsDeprecated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weight_00, weight_01, weight_02, weight_03, weight_04, weight_05, weight_06, weight_07, weight_08, weight_09, weight_10, weight_11, weight_12, flip_weights",
          "properties": {
            "weight_00": {
              "type": "number"
            },
            "weight_01": {
              "type": "number"
            },
            "weight_02": {
              "type": "number"
            },
            "weight_03": {
              "type": "number"
            },
            "weight_04": {
              "type": "number"
            },
            "weight_05": {
              "type": "number"
            },
            "weight_06": {
              "type": "number"
            },
            "weight_07": {
              "type": "number"
            },
            "weight_08": {
              "type": "number"
            },
            "weight_09": {
              "type": "number"
            },
            "weight_10": {
              "type": "number"
            },
            "weight_11": {
              "type": "number"
            },
            "weight_12": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "weight_00",
            "weight_01",
            "weight_02",
            "weight_03",
            "weight_04",
            "weight_05",
            "weight_06",
            "weight_07",
            "weight_08",
            "weight_09",
            "weight_10",
            "weight_11",
            "weight_12",
            "flip_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "CustomControlNetWeights": {
      "title": "CustomControlNetWeightsDeprecated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weight_00, weight_01, weight_02, weight_03, weight_04, weight_05, weight_06, weight_07, weight_08, weight_09, weight_10, weight_11, weight_12, flip_weights",
          "properties": {
            "weight_00": {
              "type": "number"
            },
            "weight_01": {
              "type": "number"
            },
            "weight_02": {
              "type": "number"
            },
            "weight_03": {
              "type": "number"
            },
            "weight_04": {
              "type": "number"
            },
            "weight_05": {
              "type": "number"
            },
            "weight_06": {
              "type": "number"
            },
            "weight_07": {
              "type": "number"
            },
            "weight_08": {
              "type": "number"
            },
            "weight_09": {
              "type": "number"
            },
            "weight_10": {
              "type": "number"
            },
            "weight_11": {
              "type": "number"
            },
            "weight_12": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "weight_00",
            "weight_01",
            "weight_02",
            "weight_03",
            "weight_04",
            "weight_05",
            "weight_06",
            "weight_07",
            "weight_08",
            "weight_09",
            "weight_10",
            "weight_11",
            "weight_12",
            "flip_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "SoftT2IAdapterWeights": {
      "title": "SoftT2IAdapterWeightsDeprecated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weight_00, weight_01, weight_02, weight_03, flip_weights",
          "properties": {
            "weight_00": {
              "type": "number"
            },
            "weight_01": {
              "type": "number"
            },
            "weight_02": {
              "type": "number"
            },
            "weight_03": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "weight_00",
            "weight_01",
            "weight_02",
            "weight_03",
            "flip_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "CustomT2IAdapterWeights": {
      "title": "CustomT2IAdapterWeightsDeprecated",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weight_00, weight_01, weight_02, weight_03, flip_weights",
          "properties": {
            "weight_00": {
              "type": "number"
            },
            "weight_01": {
              "type": "number"
            },
            "weight_02": {
              "type": "number"
            },
            "weight_03": {
              "type": "number"
            },
            "flip_weights": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "weight_00",
            "weight_01",
            "weight_02",
            "weight_03",
            "flip_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_WEIGHTS, TIMESTEP_KEYFRAME",
          "items": [
            {
              "type": "CONTROL_NET_WEIGHTS"
            },
            {
              "type": "TIMESTEP_KEYFRAME"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "ACN_AdvancedControlNetApply": {
      "title": "AdvancedControlNetApplyDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, control_net, image, strength, start_percent, end_percent",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "positive",
            "negative",
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, MODEL",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": ""
    },
    "ACN_AdvancedControlNetApplySingle": {
      "title": "AdvancedControlNetApplySingleDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, control_net, image, strength, start_percent, end_percent",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "conditioning",
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, MODEL",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "ControlNetLoaderAdvanced": {
      "title": "ControlNetLoaderAdvancedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net_name",
          "properties": {
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "DiffControlNetLoaderAdvanced": {
      "title": "DiffControlNetLoaderAdvancedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, control_net_name",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "control_net_name": {
              "type": "string"
            }
          },
          "required": ["model", "control_net_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffLoRALoader": {
      "title": "AnimateDiffLoraLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: name, strength",
          "properties": {
            "name": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["name", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_LORA",
          "items": [
            {
              "type": "MOTION_LORA"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓"
    },
    "ADE_AnimateDiffSamplingSettings": {
      "title": "SampleSettingsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen, seed_offset",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            }
          },
          "required": ["batch_offset", "noise_type", "seed_gen", "seed_offset"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAMPLE_SETTINGS",
          "items": [
            {
              "type": "SAMPLE_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓"
    },
    "ADE_AnimateDiffKeyframe": {
      "title": "ADKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_KEYFRAMES",
          "items": [
            {
              "type": "AD_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓"
    },
    "ADE_MultivalDynamic": {
      "title": "MultivalDynamicNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float_val",
          "properties": {
            "float_val": {
              "type": "number"
            }
          },
          "required": ["float_val"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MULTIVAL",
          "items": [
            {
              "type": "MULTIVAL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/multival"
    },
    "ADE_MultivalDynamicFloatInput": {
      "title": "MultivalDynamicFloatInputNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float_val",
          "properties": {
            "float_val": {
              "type": "number"
            }
          },
          "required": ["float_val"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MULTIVAL",
          "items": [
            {
              "type": "MULTIVAL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/multival"
    },
    "ADE_MultivalDynamicFloats": {
      "title": "MultivalDynamicFloatsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: floats",
          "properties": {
            "floats": {
              "type": "FLOATS"
            }
          },
          "required": ["floats"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MULTIVAL",
          "items": [
            {
              "type": "MULTIVAL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/multival"
    },
    "ADE_MultivalScaledMask": {
      "title": "MultivalScaledMaskNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: min_float_val, max_float_val, mask",
          "properties": {
            "min_float_val": {
              "type": "number"
            },
            "max_float_val": {
              "type": "number"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["min_float_val", "max_float_val", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MULTIVAL",
          "items": [
            {
              "type": "MULTIVAL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/multival"
    },
    "ADE_MultivalConvertToMask": {
      "title": "MultivalConvertToMaskNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: multival",
          "properties": {
            "multival": {
              "type": "MULTIVAL"
            }
          },
          "required": ["multival"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/multival"
    },
    "ADE_StandardStaticContextOptions": {
      "title": "StandardStaticContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length, context_overlap",
          "properties": {
            "context_length": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            }
          },
          "required": ["context_length", "context_overlap"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_StandardUniformContextOptions": {
      "title": "StandardUniformContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length, context_stride, context_overlap",
          "properties": {
            "context_length": {
              "type": "number"
            },
            "context_stride": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            }
          },
          "required": ["context_length", "context_stride", "context_overlap"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_LoopedUniformContextOptions": {
      "title": "LoopedUniformContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length, context_stride, context_overlap, closed_loop",
          "properties": {
            "context_length": {
              "type": "number"
            },
            "context_stride": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            },
            "closed_loop": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "context_length",
            "context_stride",
            "context_overlap",
            "closed_loop"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_ViewsOnlyContextOptions": {
      "title": "ViewAsContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: view_opts_req",
          "properties": {
            "view_opts_req": {
              "type": "VIEW_OPTS"
            }
          },
          "required": ["view_opts_req"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_BatchedContextOptions": {
      "title": "BatchedContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length",
          "properties": {
            "context_length": {
              "type": "number"
            }
          },
          "required": ["context_length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts"
    },
    "ADE_AnimateDiffUniformContextOptions": {
      "title": "LegacyLoopedUniformContextOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_length, context_stride, context_overlap, context_schedule, closed_loop",
          "properties": {
            "context_length": {
              "type": "number"
            },
            "context_stride": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            },
            "context_schedule": {
              "type": "string"
            },
            "closed_loop": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "context_length",
            "context_stride",
            "context_overlap",
            "context_schedule",
            "closed_loop"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_VisualizeContextOptionsK": {
      "title": "VisualizeContextOptionsK",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampler_name, scheduler",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            }
          },
          "required": ["model", "sampler_name", "scheduler"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/visualize"
    },
    "ADE_VisualizeContextOptionsKAdv": {
      "title": "VisualizeContextOptionsKAdv",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sampler_name, scheduler",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            }
          },
          "required": ["model", "sampler_name", "scheduler"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/visualize"
    },
    "ADE_VisualizeContextOptionsSCustom": {
      "title": "VisualizeContextOptionsSCustom",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, sigmas",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "sigmas": {
              "type": "SIGMAS"
            }
          },
          "required": ["model", "sigmas"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/visualize"
    },
    "ADE_StandardStaticViewOptions": {
      "title": "StandardStaticViewOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: view_length, view_overlap",
          "properties": {
            "view_length": {
              "type": "number"
            },
            "view_overlap": {
              "type": "number"
            }
          },
          "required": ["view_length", "view_overlap"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIEW_OPTS",
          "items": [
            {
              "type": "VIEW_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/view opts"
    },
    "ADE_StandardUniformViewOptions": {
      "title": "StandardUniformViewOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: view_length, view_stride, view_overlap",
          "properties": {
            "view_length": {
              "type": "number"
            },
            "view_stride": {
              "type": "number"
            },
            "view_overlap": {
              "type": "number"
            }
          },
          "required": ["view_length", "view_stride", "view_overlap"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIEW_OPTS",
          "items": [
            {
              "type": "VIEW_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/view opts"
    },
    "ADE_LoopedUniformViewOptions": {
      "title": "LoopedUniformViewOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: view_length, view_stride, view_overlap, closed_loop",
          "properties": {
            "view_length": {
              "type": "number"
            },
            "view_stride": {
              "type": "number"
            },
            "view_overlap": {
              "type": "number"
            },
            "closed_loop": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "view_length",
            "view_stride",
            "view_overlap",
            "closed_loop"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VIEW_OPTS",
          "items": [
            {
              "type": "VIEW_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/view opts"
    },
    "ADE_ContextExtras_Set": {
      "title": "SetContextExtrasOnContextOptions",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: context_opts",
          "properties": {
            "context_opts": {
              "type": "CONTEXT_OPTIONS"
            }
          },
          "required": ["context_opts"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_OPTIONS",
          "items": [
            {
              "type": "CONTEXT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras"
    },
    "ADE_ContextExtras_ContextRef": {
      "title": "ContextExtras_ContextRef",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_EXTRAS",
          "items": [
            {
              "type": "CONTEXT_EXTRAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras"
    },
    "ADE_ContextExtras_ContextRef_ModeFirst": {
      "title": "ContextRef_ModeFirst",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXTREF_MODE",
          "items": [
            {
              "type": "CONTEXTREF_MODE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/contextref"
    },
    "ADE_ContextExtras_ContextRef_ModeSliding": {
      "title": "ContextRef_ModeSliding",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXTREF_MODE",
          "items": [
            {
              "type": "CONTEXTREF_MODE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/contextref"
    },
    "ADE_ContextExtras_ContextRef_ModeIndexes": {
      "title": "ContextRef_ModeIndexes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXTREF_MODE",
          "items": [
            {
              "type": "CONTEXTREF_MODE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/contextref"
    },
    "ADE_ContextExtras_ContextRef_TuneAttn": {
      "title": "ContextRef_TuneAttn",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXTREF_TUNE",
          "items": [
            {
              "type": "CONTEXTREF_TUNE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/contextref"
    },
    "ADE_ContextExtras_ContextRef_TuneAttnAdain": {
      "title": "ContextRef_TuneAttnAdain",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXTREF_TUNE",
          "items": [
            {
              "type": "CONTEXTREF_TUNE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/contextref"
    },
    "ADE_ContextExtras_ContextRef_Keyframe": {
      "title": "ContextRef_KeyframeMultivalNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXTREF_KEYFRAME",
          "items": [
            {
              "type": "CONTEXTREF_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/contextref"
    },
    "ADE_ContextExtras_ContextRef_KeyframeInterpolation": {
      "title": "ContextRef_KeyframeInterpolationNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent, mult_start, mult_end, interpolation, intervals, inherit_missing, print_keyframes",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "mult_start": {
              "type": "number"
            },
            "mult_end": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "intervals": {
              "type": "number"
            },
            "inherit_missing": {
              "type": "BOOLEAN"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "start_percent",
            "end_percent",
            "mult_start",
            "mult_end",
            "interpolation",
            "intervals",
            "inherit_missing",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXTREF_KEYFRAME",
          "items": [
            {
              "type": "CONTEXTREF_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/contextref"
    },
    "ADE_ContextExtras_ContextRef_KeyframeFromList": {
      "title": "ContextRef_KeyframeFromListNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mults_float, start_percent, end_percent, inherit_missing, print_keyframes",
          "properties": {
            "mults_float": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "inherit_missing": {
              "type": "BOOLEAN"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "mults_float",
            "start_percent",
            "end_percent",
            "inherit_missing",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXTREF_KEYFRAME",
          "items": [
            {
              "type": "CONTEXTREF_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/contextref"
    },
    "ADE_ContextExtras_NaiveReuse": {
      "title": "ContextExtras_NaiveReuse",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTEXT_EXTRAS",
          "items": [
            {
              "type": "CONTEXT_EXTRAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras"
    },
    "ADE_ContextExtras_NaiveReuse_Keyframe": {
      "title": "NaiveReuse_KeyframeMultivalNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NAIVEREUSE_KEYFRAME",
          "items": [
            {
              "type": "NAIVEREUSE_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/naivereuse"
    },
    "ADE_ContextExtras_NaiveReuse_KeyframeInterpolation": {
      "title": "NaiveReuse_KeyframeInterpolationNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent, mult_start, mult_end, interpolation, intervals, inherit_missing, print_keyframes",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "mult_start": {
              "type": "number"
            },
            "mult_end": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "intervals": {
              "type": "number"
            },
            "inherit_missing": {
              "type": "BOOLEAN"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "start_percent",
            "end_percent",
            "mult_start",
            "mult_end",
            "interpolation",
            "intervals",
            "inherit_missing",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NAIVEREUSE_KEYFRAME",
          "items": [
            {
              "type": "NAIVEREUSE_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/naivereuse"
    },
    "ADE_ContextExtras_NaiveReuse_KeyframeFromList": {
      "title": "NaiveReuse_KeyframeFromListNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mults_float, start_percent, end_percent, inherit_missing, print_keyframes",
          "properties": {
            "mults_float": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "inherit_missing": {
              "type": "BOOLEAN"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "mults_float",
            "start_percent",
            "end_percent",
            "inherit_missing",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NAIVEREUSE_KEYFRAME",
          "items": [
            {
              "type": "NAIVEREUSE_KEYFRAME"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/context opts/context extras/naivereuse"
    },
    "ADE_IterationOptsDefault": {
      "title": "IterationOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: iterations",
          "properties": {
            "iterations": {
              "type": "number"
            }
          },
          "required": ["iterations"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ITERATION_OPTS",
          "items": [
            {
              "type": "ITERATION_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/iteration opts"
    },
    "ADE_IterationOptsFreeInit": {
      "title": "FreeInitOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: iterations, filter, d_s, d_t, n_butterworth, sigma_step, apply_to_1st_iter, init_type",
          "properties": {
            "iterations": {
              "type": "number"
            },
            "filter": {
              "type": "string"
            },
            "d_s": {
              "type": "number"
            },
            "d_t": {
              "type": "number"
            },
            "n_butterworth": {
              "type": "number"
            },
            "sigma_step": {
              "type": "number"
            },
            "apply_to_1st_iter": {
              "type": "BOOLEAN"
            },
            "init_type": {
              "type": "string"
            }
          },
          "required": [
            "iterations",
            "filter",
            "d_s",
            "d_t",
            "n_butterworth",
            "sigma_step",
            "apply_to_1st_iter",
            "init_type"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ITERATION_OPTS",
          "items": [
            {
              "type": "ITERATION_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/iteration opts"
    },
    "ADE_RegisterLoraHook": {
      "title": "MaskableLoraLoaderDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, lora_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "lora_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, HOOKS",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks"
    },
    "ADE_RegisterLoraHookModelOnly": {
      "title": "MaskableLoraLoaderModelOnlyDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, lora_name, strength_model",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["model", "lora_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, HOOKS",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks"
    },
    "ADE_RegisterModelAsLoraHook": {
      "title": "MaskableSDModelLoaderDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, ckpt_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "ckpt_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "ckpt_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, HOOKS",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks"
    },
    "ADE_RegisterModelAsLoraHookModelOnly": {
      "title": "MaskableSDModelLoaderModelOnlyDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ckpt_name, strength_model",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ckpt_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            }
          },
          "required": ["model", "ckpt_name", "strength_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, HOOKS",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/register lora hooks"
    },
    "ADE_CombineLoraHooks": {
      "title": "CombineLoraHooksDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks"
    },
    "ADE_CombineLoraHooksFour": {
      "title": "CombineLoraHookFourOptionalDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks"
    },
    "ADE_CombineLoraHooksEight": {
      "title": "CombineLoraHookEightOptionalDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/combine lora hooks"
    },
    "ADE_SetLoraHookKeyframe": {
      "title": "SetLoraHookKeyframesDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora_hook, hook_kf",
          "properties": {
            "lora_hook": {
              "type": "HOOKS"
            },
            "hook_kf": {
              "type": "HOOK_KEYFRAMES"
            }
          },
          "required": ["lora_hook", "hook_kf"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOKS",
          "items": [
            {
              "type": "HOOKS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_AttachLoraHookToCLIP": {
      "title": "SetClipLoraHookDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, lora_hook",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "lora_hook": {
              "type": "HOOKS"
            }
          },
          "required": ["clip", "lora_hook"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_LoraHookKeyframe": {
      "title": "CreateLoraHookKeyframeDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: strength_model, start_percent, guarantee_steps",
          "properties": {
            "strength_model": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "guarantee_steps": {
              "type": "number"
            }
          },
          "required": ["strength_model", "start_percent", "guarantee_steps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOK_KEYFRAMES",
          "items": [
            {
              "type": "HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks"
    },
    "ADE_LoraHookKeyframeInterpolation": {
      "title": "CreateLoraHookKeyframeInterpolationDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent, strength_start, strength_end, interpolation, intervals, print_keyframes",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "strength_start": {
              "type": "number"
            },
            "strength_end": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "intervals": {
              "type": "number"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "start_percent",
            "end_percent",
            "strength_start",
            "strength_end",
            "interpolation",
            "intervals",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOK_KEYFRAMES",
          "items": [
            {
              "type": "HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks"
    },
    "ADE_LoraHookKeyframeFromStrengthList": {
      "title": "CreateLoraHookKeyframeFromStrengthListDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: strengths_float, start_percent, end_percent, print_keyframes",
          "properties": {
            "strengths_float": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "strengths_float",
            "start_percent",
            "end_percent",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: HOOK_KEYFRAMES",
          "items": [
            {
              "type": "HOOK_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/schedule lora hooks"
    },
    "ADE_AttachLoraHookToConditioning": {
      "title": "SetModelLoraHookDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, lora_hook",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "lora_hook": {
              "type": "HOOKS"
            }
          },
          "required": ["conditioning", "lora_hook"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_PairedConditioningSetMask": {
      "title": "PairedConditioningSetMaskHookedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_ADD, negative_ADD, strength, set_cond_area",
          "properties": {
            "positive_ADD": {
              "type": "CONDITIONING"
            },
            "negative_ADD": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive_ADD",
            "negative_ADD",
            "strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_ConditioningSetMask": {
      "title": "ConditioningSetMaskHookedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond_ADD, strength, set_cond_area",
          "properties": {
            "cond_ADD": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["cond_ADD", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_PairedConditioningSetMaskAndCombine": {
      "title": "PairedConditioningSetMaskAndCombineHookedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, positive_ADD, negative_ADD, strength, set_cond_area",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "positive_ADD": {
              "type": "CONDITIONING"
            },
            "negative_ADD": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": [
            "positive",
            "negative",
            "positive_ADD",
            "negative_ADD",
            "strength",
            "set_cond_area"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_ConditioningSetMaskAndCombine": {
      "title": "ConditioningSetMaskAndCombineHookedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond, cond_ADD, strength, set_cond_area",
          "properties": {
            "cond": {
              "type": "CONDITIONING"
            },
            "cond_ADD": {
              "type": "CONDITIONING"
            },
            "strength": {
              "type": "number"
            },
            "set_cond_area": {
              "type": "string"
            }
          },
          "required": ["cond", "cond_ADD", "strength", "set_cond_area"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_PairedConditioningSetUnmaskedAndCombine": {
      "title": "PairedConditioningSetUnmaskedAndCombineHookedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative, positive_DEFAULT, negative_DEFAULT",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "positive_DEFAULT": {
              "type": "CONDITIONING"
            },
            "negative_DEFAULT": {
              "type": "CONDITIONING"
            }
          },
          "required": [
            "positive",
            "negative",
            "positive_DEFAULT",
            "negative_DEFAULT"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_ConditioningSetUnmaskedAndCombine": {
      "title": "ConditioningSetUnmaskedAndCombineHookedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond, cond_DEFAULT",
          "properties": {
            "cond": {
              "type": "CONDITIONING"
            },
            "cond_DEFAULT": {
              "type": "CONDITIONING"
            }
          },
          "required": ["cond", "cond_DEFAULT"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_PairedConditioningCombine": {
      "title": "PairedConditioningCombineDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive_A, negative_A, positive_B, negative_B",
          "properties": {
            "positive_A": {
              "type": "CONDITIONING"
            },
            "negative_A": {
              "type": "CONDITIONING"
            },
            "positive_B": {
              "type": "CONDITIONING"
            },
            "negative_B": {
              "type": "CONDITIONING"
            }
          },
          "required": ["positive_A", "negative_A", "positive_B", "negative_B"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_ConditioningCombine": {
      "title": "ConditioningCombineDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cond_A, cond_B",
          "properties": {
            "cond_A": {
              "type": "CONDITIONING"
            },
            "cond_B": {
              "type": "CONDITIONING"
            }
          },
          "required": ["cond_A", "cond_B"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning/single cond ops"
    },
    "ADE_TimestepsConditioning": {
      "title": "ConditioningTimestepsNodeDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent", "end_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TIMESTEPS_RANGE",
          "items": [
            {
              "type": "TIMESTEPS_RANGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/conditioning"
    },
    "ADE_NoiseLayerAdd": {
      "title": "NoiseLayerAddNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen_override, seed_offset, noise_weight",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen_override": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            },
            "noise_weight": {
              "type": "number"
            }
          },
          "required": [
            "batch_offset",
            "noise_type",
            "seed_gen_override",
            "seed_offset",
            "noise_weight"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE_LAYERS",
          "items": [
            {
              "type": "NOISE_LAYERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/noise layers"
    },
    "ADE_NoiseLayerAddWeighted": {
      "title": "NoiseLayerAddWeightedNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen_override, seed_offset, noise_weight, balance_multiplier",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen_override": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            },
            "noise_weight": {
              "type": "number"
            },
            "balance_multiplier": {
              "type": "number"
            }
          },
          "required": [
            "batch_offset",
            "noise_type",
            "seed_gen_override",
            "seed_offset",
            "noise_weight",
            "balance_multiplier"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE_LAYERS",
          "items": [
            {
              "type": "NOISE_LAYERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/noise layers"
    },
    "ADE_NoiseLayerNormalizedSum": {
      "title": "NoiseLayerNormalizedSumNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen_override, seed_offset, noise_weight",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen_override": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            },
            "noise_weight": {
              "type": "number"
            }
          },
          "required": [
            "batch_offset",
            "noise_type",
            "seed_gen_override",
            "seed_offset",
            "noise_weight"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE_LAYERS",
          "items": [
            {
              "type": "NOISE_LAYERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/noise layers"
    },
    "ADE_NoiseLayerReplace": {
      "title": "NoiseLayerReplaceNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_offset, noise_type, seed_gen_override, seed_offset",
          "properties": {
            "batch_offset": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed_gen_override": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            }
          },
          "required": [
            "batch_offset",
            "noise_type",
            "seed_gen_override",
            "seed_offset"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NOISE_LAYERS",
          "items": [
            {
              "type": "NOISE_LAYERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/noise layers"
    },
    "ADE_AnimateDiffSettings": {
      "title": "AnimateDiffSettingsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings"
    },
    "ADE_AdjustPESweetspotStretch": {
      "title": "SweetspotStretchPENode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sweetspot, new_sweetspot, print_adjustment",
          "properties": {
            "sweetspot": {
              "type": "number"
            },
            "new_sweetspot": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["sweetspot", "new_sweetspot", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PE_ADJUST",
          "items": [
            {
              "type": "PE_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust"
    },
    "ADE_AdjustPEFullStretch": {
      "title": "FullStretchPENode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_stretch, print_adjustment",
          "properties": {
            "pe_stretch": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["pe_stretch", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PE_ADJUST",
          "items": [
            {
              "type": "PE_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust"
    },
    "ADE_AdjustPEManual": {
      "title": "ManualAdjustPENode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cap_initial_pe_length, interpolate_pe_to_length, initial_pe_idx_offset, final_pe_idx_offset, print_adjustment",
          "properties": {
            "cap_initial_pe_length": {
              "type": "number"
            },
            "interpolate_pe_to_length": {
              "type": "number"
            },
            "initial_pe_idx_offset": {
              "type": "number"
            },
            "final_pe_idx_offset": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "cap_initial_pe_length",
            "interpolate_pe_to_length",
            "initial_pe_idx_offset",
            "final_pe_idx_offset",
            "print_adjustment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PE_ADJUST",
          "items": [
            {
              "type": "PE_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust"
    },
    "ADE_AdjustWeightAllAdd": {
      "title": "WeightAdjustAllAddNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: all_ADD, print_adjustment",
          "properties": {
            "all_ADD": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["all_ADD", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightAllMult": {
      "title": "WeightAdjustAllMultNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: all_MULT, print_adjustment",
          "properties": {
            "all_MULT": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["all_MULT", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightIndivAdd": {
      "title": "WeightAdjustIndivAddNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_ADD, attn_ADD, other_ADD, print_adjustment",
          "properties": {
            "pe_ADD": {
              "type": "number"
            },
            "attn_ADD": {
              "type": "number"
            },
            "other_ADD": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["pe_ADD", "attn_ADD", "other_ADD", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightIndivMult": {
      "title": "WeightAdjustIndivMultNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_MULT, attn_MULT, other_MULT, print_adjustment",
          "properties": {
            "pe_MULT": {
              "type": "number"
            },
            "attn_MULT": {
              "type": "number"
            },
            "other_MULT": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": ["pe_MULT", "attn_MULT", "other_MULT", "print_adjustment"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightIndivAttnAdd": {
      "title": "WeightAdjustIndivAttnAddNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_ADD, attn_ADD, attn_q_ADD, attn_k_ADD, attn_v_ADD, attn_out_weight_ADD, attn_out_bias_ADD, other_ADD, print_adjustment",
          "properties": {
            "pe_ADD": {
              "type": "number"
            },
            "attn_ADD": {
              "type": "number"
            },
            "attn_q_ADD": {
              "type": "number"
            },
            "attn_k_ADD": {
              "type": "number"
            },
            "attn_v_ADD": {
              "type": "number"
            },
            "attn_out_weight_ADD": {
              "type": "number"
            },
            "attn_out_bias_ADD": {
              "type": "number"
            },
            "other_ADD": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "pe_ADD",
            "attn_ADD",
            "attn_q_ADD",
            "attn_k_ADD",
            "attn_v_ADD",
            "attn_out_weight_ADD",
            "attn_out_bias_ADD",
            "other_ADD",
            "print_adjustment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_AdjustWeightIndivAttnMult": {
      "title": "WeightAdjustIndivAttnMultNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_MULT, attn_MULT, attn_q_MULT, attn_k_MULT, attn_v_MULT, attn_out_weight_MULT, attn_out_bias_MULT, other_MULT, print_adjustment",
          "properties": {
            "pe_MULT": {
              "type": "number"
            },
            "attn_MULT": {
              "type": "number"
            },
            "attn_q_MULT": {
              "type": "number"
            },
            "attn_k_MULT": {
              "type": "number"
            },
            "attn_v_MULT": {
              "type": "number"
            },
            "attn_out_weight_MULT": {
              "type": "number"
            },
            "attn_out_bias_MULT": {
              "type": "number"
            },
            "other_MULT": {
              "type": "number"
            },
            "print_adjustment": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "pe_MULT",
            "attn_MULT",
            "attn_q_MULT",
            "attn_k_MULT",
            "attn_v_MULT",
            "attn_out_weight_MULT",
            "attn_out_bias_MULT",
            "other_MULT",
            "print_adjustment"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: WEIGHT_ADJUST",
          "items": [
            {
              "type": "WEIGHT_ADJUST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/ad settings/weight adjust"
    },
    "ADE_CustomCFGSimple": {
      "title": "CustomCFGSimpleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cfg",
          "properties": {
            "cfg": {
              "type": "number"
            }
          },
          "required": ["cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CUSTOM_CFG",
          "items": [
            {
              "type": "CUSTOM_CFG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/custom cfg"
    },
    "ADE_CustomCFG": {
      "title": "CustomCFGNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cfg_multival",
          "properties": {
            "cfg_multival": {
              "type": "MULTIVAL"
            }
          },
          "required": ["cfg_multival"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CUSTOM_CFG",
          "items": [
            {
              "type": "CUSTOM_CFG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/custom cfg"
    },
    "ADE_CustomCFGKeyframeSimple": {
      "title": "CustomCFGKeyframeSimpleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cfg, start_percent, guarantee_steps",
          "properties": {
            "cfg": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "guarantee_steps": {
              "type": "number"
            }
          },
          "required": ["cfg", "start_percent", "guarantee_steps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CUSTOM_CFG",
          "items": [
            {
              "type": "CUSTOM_CFG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/custom cfg"
    },
    "ADE_CustomCFGKeyframe": {
      "title": "CustomCFGKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cfg_multival, start_percent, guarantee_steps",
          "properties": {
            "cfg_multival": {
              "type": "MULTIVAL"
            },
            "start_percent": {
              "type": "number"
            },
            "guarantee_steps": {
              "type": "number"
            }
          },
          "required": ["cfg_multival", "start_percent", "guarantee_steps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CUSTOM_CFG",
          "items": [
            {
              "type": "CUSTOM_CFG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/custom cfg"
    },
    "ADE_CustomCFGKeyframeInterpolation": {
      "title": "CustomCFGKeyframeInterpolationNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent, end_percent, cfg_start, cfg_end, interpolation, intervals, print_keyframes",
          "properties": {
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "cfg_start": {
              "type": "number"
            },
            "cfg_end": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "intervals": {
              "type": "number"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "start_percent",
            "end_percent",
            "cfg_start",
            "cfg_end",
            "interpolation",
            "intervals",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CUSTOM_CFG",
          "items": [
            {
              "type": "CUSTOM_CFG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/custom cfg"
    },
    "ADE_CustomCFGKeyframeFromList": {
      "title": "CustomCFGKeyframeFromListNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: cfgs_float, start_percent, end_percent, print_keyframes",
          "properties": {
            "cfgs_float": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "print_keyframes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "cfgs_float",
            "start_percent",
            "end_percent",
            "print_keyframes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CUSTOM_CFG",
          "items": [
            {
              "type": "CUSTOM_CFG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/custom cfg"
    },
    "ADE_CFGExtrasPAGSimple": {
      "title": "CFGExtrasPAGSimpleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: scale",
          "properties": {
            "scale": {
              "type": "number"
            }
          },
          "required": ["scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CFG_EXTRAS",
          "items": [
            {
              "type": "CFG_EXTRAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/cfg extras"
    },
    "ADE_CFGExtrasPAG": {
      "title": "CFGExtrasPAGNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: scale_multival",
          "properties": {
            "scale_multival": {
              "type": "MULTIVAL"
            }
          },
          "required": ["scale_multival"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CFG_EXTRAS",
          "items": [
            {
              "type": "CFG_EXTRAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/cfg extras"
    },
    "ADE_CFGExtrasRescaleCFGSimple": {
      "title": "CFGExtrasRescaleCFGSimpleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: multiplier",
          "properties": {
            "multiplier": {
              "type": "number"
            }
          },
          "required": ["multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CFG_EXTRAS",
          "items": [
            {
              "type": "CFG_EXTRAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/cfg extras"
    },
    "ADE_CFGExtrasRescaleCFG": {
      "title": "CFGExtrasRescaleCFGNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mult_multival",
          "properties": {
            "mult_multival": {
              "type": "MULTIVAL"
            }
          },
          "required": ["mult_multival"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CFG_EXTRAS",
          "items": [
            {
              "type": "CFG_EXTRAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/cfg extras"
    },
    "ADE_SigmaSchedule": {
      "title": "SigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: beta_schedule",
          "properties": {
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_RawSigmaSchedule": {
      "title": "RawSigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: raw_beta_schedule, linear_start, linear_end, sampling, lcm_original_timesteps, zsnr",
          "properties": {
            "raw_beta_schedule": {
              "type": "string"
            },
            "linear_start": {
              "type": "number"
            },
            "linear_end": {
              "type": "number"
            },
            "sampling": {
              "type": "string"
            },
            "lcm_original_timesteps": {
              "type": "number"
            },
            "zsnr": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "raw_beta_schedule",
            "linear_start",
            "linear_end",
            "sampling",
            "lcm_original_timesteps",
            "zsnr"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_SigmaScheduleWeightedAverage": {
      "title": "WeightedAverageSigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: schedule_A, schedule_B, weight_A",
          "properties": {
            "schedule_A": {
              "type": "SIGMA_SCHEDULE"
            },
            "schedule_B": {
              "type": "SIGMA_SCHEDULE"
            },
            "weight_A": {
              "type": "number"
            }
          },
          "required": ["schedule_A", "schedule_B", "weight_A"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_SigmaScheduleWeightedAverageInterp": {
      "title": "InterpolatedWeightedAverageSigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: schedule_A, schedule_B, weight_A_Start, weight_A_End, interpolation",
          "properties": {
            "schedule_A": {
              "type": "SIGMA_SCHEDULE"
            },
            "schedule_B": {
              "type": "SIGMA_SCHEDULE"
            },
            "weight_A_Start": {
              "type": "number"
            },
            "weight_A_End": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            }
          },
          "required": [
            "schedule_A",
            "schedule_B",
            "weight_A_Start",
            "weight_A_End",
            "interpolation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_SigmaScheduleSplitAndCombine": {
      "title": "SplitAndCombineSigmaScheduleNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: schedule_Start, schedule_End, idx_split_percent",
          "properties": {
            "schedule_Start": {
              "type": "SIGMA_SCHEDULE"
            },
            "schedule_End": {
              "type": "SIGMA_SCHEDULE"
            },
            "idx_split_percent": {
              "type": "number"
            }
          },
          "required": ["schedule_Start", "schedule_End", "idx_split_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMA_SCHEDULE",
          "items": [
            {
              "type": "SIGMA_SCHEDULE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_SigmaScheduleToSigmas": {
      "title": "SigmaScheduleToSigmasNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sigma_schedule, scheduler, steps, denoise",
          "properties": {
            "sigma_schedule": {
              "type": "SIGMA_SCHEDULE"
            },
            "scheduler": {
              "type": "string"
            },
            "steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": ["sigma_schedule", "scheduler", "steps", "denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SIGMAS",
          "items": [
            {
              "type": "SIGMAS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule"
    },
    "ADE_NoisedImageInjection": {
      "title": "NoisedImageInjectionNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": ["image", "vae"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE_INJECT",
          "items": [
            {
              "type": "IMAGE_INJECT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/image inject"
    },
    "ADE_NoisedImageInjectOptions": {
      "title": "NoisedImageInjectOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE_INJECT_OPTIONS",
          "items": [
            {
              "type": "IMAGE_INJECT_OPTIONS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings/image inject"
    },
    "ADE_AncestralOptions": {
      "title": "AncestralOptionsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: noise_type, seed_offset",
          "properties": {
            "noise_type": {
              "type": "string"
            },
            "seed_offset": {
              "type": "number"
            }
          },
          "required": ["noise_type", "seed_offset"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ANCESTRAL_OPTS",
          "items": [
            {
              "type": "ANCESTRAL_OPTS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/sample settings"
    },
    "ADE_PromptScheduling": {
      "title": "PromptSchedulingNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: prompts, clip",
          "properties": {
            "prompts": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["prompts", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/scheduling"
    },
    "ADE_PromptSchedulingLatents": {
      "title": "PromptSchedulingLatentsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: prompts, clip, latent",
          "properties": {
            "prompts": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            },
            "latent": {
              "type": "LATENT"
            }
          },
          "required": ["prompts", "clip", "latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/scheduling"
    },
    "ADE_ValueScheduling": {
      "title": "ValueSchedulingNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: values",
          "properties": {
            "values": {
              "type": "string"
            }
          },
          "required": ["values"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, FLOATS, INT, INTS",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "FLOATS"
            },
            {
              "type": "INT"
            },
            {
              "type": "INTS"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/scheduling"
    },
    "ADE_ValueSchedulingLatents": {
      "title": "ValueSchedulingLatentsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: values, latent",
          "properties": {
            "values": {
              "type": "string"
            },
            "latent": {
              "type": "LATENT"
            }
          },
          "required": ["values", "latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, FLOATS, INT, INTS",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "FLOATS"
            },
            {
              "type": "INT"
            },
            {
              "type": "INTS"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/scheduling"
    },
    "ADE_ValuesReplace": {
      "title": "AddValuesReplaceNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value_key, floats",
          "properties": {
            "value_key": {
              "type": "string"
            },
            "floats": {
              "type": "FLOATS"
            }
          },
          "required": ["value_key", "floats"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VALUES_REPLACE",
          "items": [
            {
              "type": "VALUES_REPLACE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/scheduling"
    },
    "ADE_FloatToFloats": {
      "title": "FloatToFloatsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: FLOAT",
          "properties": {
            "FLOAT": {
              "type": "number"
            }
          },
          "required": ["FLOAT"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOATS",
          "items": [
            {
              "type": "FLOATS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/scheduling"
    },
    "ADE_ADBlockCombo": {
      "title": "ADBlockComboNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_BLOCK",
          "items": [
            {
              "type": "AD_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_ADBlockIndiv": {
      "title": "ADBlockIndivNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_BLOCK",
          "items": [
            {
              "type": "AD_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_PerBlockHighLevel": {
      "title": "PerBlockHighLevelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PER_BLOCK",
          "items": [
            {
              "type": "PER_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_PerBlock_SD15_MidLevel": {
      "title": "PerBlock_SD15_MidLevelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PER_BLOCK",
          "items": [
            {
              "type": "PER_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_PerBlock_SD15_LowLevel": {
      "title": "PerBlock_SD15_LowLevelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PER_BLOCK",
          "items": [
            {
              "type": "PER_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_PerBlock_SD15_FromFloats": {
      "title": "PerBlock_SD15_FromFloatsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PER_BLOCK",
          "items": [
            {
              "type": "PER_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_PerBlock_SDXL_MidLevel": {
      "title": "PerBlock_SDXL_MidLevelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PER_BLOCK",
          "items": [
            {
              "type": "PER_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_PerBlock_SDXL_LowLevel": {
      "title": "PerBlock_SDXL_LowLevelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PER_BLOCK",
          "items": [
            {
              "type": "PER_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_PerBlock_SDXL_FromFloats": {
      "title": "PerBlock_SDXL_FromFloatsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PER_BLOCK",
          "items": [
            {
              "type": "PER_BLOCK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/per block"
    },
    "ADE_AnimateDiffUnload": {
      "title": "AnimateDiffUnload",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/extras"
    },
    "ADE_EmptyLatentImageLarge": {
      "title": "EmptyLatentImageLarge",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, batch_size",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": ["width", "height", "batch_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/extras"
    },
    "CheckpointLoaderSimpleWithNoiseSelect": {
      "title": "CheckpointLoaderSimpleWithNoiseSelect",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name, beta_schedule",
          "properties": {
            "ckpt_name": {
              "type": "string"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["ckpt_name", "beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/extras"
    },
    "ADE_PerturbedAttentionGuidanceMultival": {
      "title": "PerturbedAttentionGuidanceMultival",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, scale_multival",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "scale_multival": {
              "type": "MULTIVAL"
            }
          },
          "required": ["model", "scale_multival"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/extras"
    },
    "ADE_RescaleCFGMultival": {
      "title": "RescaleCFGMultival",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, mult_multival",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "mult_multival": {
              "type": "MULTIVAL"
            }
          },
          "required": ["model", "mult_multival"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/extras"
    },
    "ADE_AnimateDiffLoaderGen1": {
      "title": "AnimateDiffLoaderGen1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, model_name, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "model_name": {
              "type": "string"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["model", "model_name", "beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/① Gen1 nodes ①"
    },
    "ADE_UseEvolvedSampling": {
      "title": "UseEvolvedSamplingNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["model", "beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②"
    },
    "ADE_ApplyAnimateDiffModelSimple": {
      "title": "ApplyAnimateDiffModelBasicNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            }
          },
          "required": ["motion_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②"
    },
    "ADE_ApplyAnimateDiffModel": {
      "title": "ApplyAnimateDiffModelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model, start_percent, end_percent",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": ["motion_model", "start_percent", "end_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②"
    },
    "ADE_LoadAnimateDiffModel": {
      "title": "LoadAnimateDiffModelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name",
          "properties": {
            "model_name": {
              "type": "string"
            }
          },
          "required": ["model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②"
    },
    "ADE_ApplyAnimateLCMI2VModel": {
      "title": "ApplyAnimateLCMI2VModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model, ref_latent, ref_drift, apply_ref_when_disabled, start_percent, end_percent",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            },
            "ref_latent": {
              "type": "LATENT"
            },
            "ref_drift": {
              "type": "number"
            },
            "apply_ref_when_disabled": {
              "type": "BOOLEAN"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "motion_model",
            "ref_latent",
            "ref_drift",
            "apply_ref_when_disabled",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V"
    },
    "ADE_LoadAnimateLCMI2VModel": {
      "title": "LoadAnimateLCMI2VModelNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name",
          "properties": {
            "model_name": {
              "type": "string"
            }
          },
          "required": ["model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE, MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            },
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V"
    },
    "ADE_UpscaleAndVAEEncode": {
      "title": "UpscaleAndVaeEncode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vae, latent_size, scale_method, crop",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "latent_size": {
              "type": "LATENT"
            },
            "scale_method": {
              "type": "string"
            },
            "crop": {
              "type": "string"
            }
          },
          "required": ["image", "vae", "latent_size", "scale_method", "crop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V"
    },
    "ADE_InjectI2VIntoAnimateDiffModel": {
      "title": "LoadAnimateDiffAndInjectI2VNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name, motion_model",
          "properties": {
            "model_name": {
              "type": "string"
            },
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            }
          },
          "required": ["model_name", "motion_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/AnimateLCM-I2V/🧪experimental"
    },
    "ADE_ApplyAnimateDiffModelWithCameraCtrl": {
      "title": "ApplyAnimateDiffWithCameraCtrl",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model, cameractrl_poses, start_percent, end_percent",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            },
            "cameractrl_poses": {
              "type": "CAMERACTRL_POSES"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "motion_model",
            "cameractrl_poses",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl"
    },
    "ADE_LoadAnimateDiffModelWithCameraCtrl": {
      "title": "LoadAnimateDiffModelWithCameraCtrl",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name, camera_ctrl",
          "properties": {
            "model_name": {
              "type": "string"
            },
            "camera_ctrl": {
              "type": "string"
            }
          },
          "required": ["model_name", "camera_ctrl"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl"
    },
    "ADE_CameraCtrlAnimateDiffKeyframe": {
      "title": "CameraCtrlADKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_KEYFRAMES",
          "items": [
            {
              "type": "AD_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl"
    },
    "ADE_LoadCameraPoses": {
      "title": "LoadCameraPosesFromFile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pose_filename",
          "properties": {
            "pose_filename": {
              "type": "string"
            }
          },
          "required": ["pose_filename"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_LoadCameraPosesFromPath": {
      "title": "LoadCameraPosesFromPath",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_CameraPoseBasic": {
      "title": "CameraCtrlPoseBasic",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_type, speed, frame_length",
          "properties": {
            "motion_type": {
              "type": "string"
            },
            "speed": {
              "type": "number"
            },
            "frame_length": {
              "type": "number"
            }
          },
          "required": ["motion_type", "speed", "frame_length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_CameraPoseCombo": {
      "title": "CameraCtrlPoseCombo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_type1, motion_type2, motion_type3, motion_type4, motion_type5, motion_type6, speed, frame_length",
          "properties": {
            "motion_type1": {
              "type": "string"
            },
            "motion_type2": {
              "type": "string"
            },
            "motion_type3": {
              "type": "string"
            },
            "motion_type4": {
              "type": "string"
            },
            "motion_type5": {
              "type": "string"
            },
            "motion_type6": {
              "type": "string"
            },
            "speed": {
              "type": "number"
            },
            "frame_length": {
              "type": "number"
            }
          },
          "required": [
            "motion_type1",
            "motion_type2",
            "motion_type3",
            "motion_type4",
            "motion_type5",
            "motion_type6",
            "speed",
            "frame_length"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_CameraPoseAdvanced": {
      "title": "CameraCtrlPoseAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_type1, strength1, motion_type2, strength2, motion_type3, strength3, motion_type4, strength4, motion_type5, strength5, motion_type6, strength6, speed, frame_length",
          "properties": {
            "motion_type1": {
              "type": "string"
            },
            "strength1": {
              "type": "number"
            },
            "motion_type2": {
              "type": "string"
            },
            "strength2": {
              "type": "number"
            },
            "motion_type3": {
              "type": "string"
            },
            "strength3": {
              "type": "number"
            },
            "motion_type4": {
              "type": "string"
            },
            "strength4": {
              "type": "number"
            },
            "motion_type5": {
              "type": "string"
            },
            "strength5": {
              "type": "number"
            },
            "motion_type6": {
              "type": "string"
            },
            "strength6": {
              "type": "number"
            },
            "speed": {
              "type": "number"
            },
            "frame_length": {
              "type": "number"
            }
          },
          "required": [
            "motion_type1",
            "strength1",
            "motion_type2",
            "strength2",
            "motion_type3",
            "strength3",
            "motion_type4",
            "strength4",
            "motion_type5",
            "strength5",
            "motion_type6",
            "strength6",
            "speed",
            "frame_length"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_CameraManualPoseAppend": {
      "title": "CameraCtrlManualAppendPose",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: poses_first, poses_last",
          "properties": {
            "poses_first": {
              "type": "CAMERACTRL_POSES"
            },
            "poses_last": {
              "type": "CAMERACTRL_POSES"
            }
          },
          "required": ["poses_first", "poses_last"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_ReplaceCameraParameters": {
      "title": "CameraCtrlReplaceCameraParameters",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: poses, fx, fy, cx, cy",
          "properties": {
            "poses": {
              "type": "CAMERACTRL_POSES"
            },
            "fx": {
              "type": "number"
            },
            "fy": {
              "type": "number"
            },
            "cx": {
              "type": "number"
            },
            "cy": {
              "type": "number"
            }
          },
          "required": ["poses", "fx", "fy", "cx", "cy"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_ReplaceOriginalPoseAspectRatio": {
      "title": "CameraCtrlSetOriginalAspectRatio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: poses, orig_pose_width, orig_pose_height",
          "properties": {
            "poses": {
              "type": "CAMERACTRL_POSES"
            },
            "orig_pose_width": {
              "type": "number"
            },
            "orig_pose_height": {
              "type": "number"
            }
          },
          "required": ["poses", "orig_pose_width", "orig_pose_height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CAMERACTRL_POSES",
          "items": [
            {
              "type": "CAMERACTRL_POSES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/CameraCtrl/poses"
    },
    "ADE_ApplyAnimateDiffModelWithPIA": {
      "title": "ApplyAnimateDiffPIAModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_model, image, vae, start_percent, end_percent",
          "properties": {
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            },
            "image": {
              "type": "IMAGE"
            },
            "vae": {
              "type": "VAE"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "motion_model",
            "image",
            "vae",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: M_MODELS",
          "items": [
            {
              "type": "M_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/PIA"
    },
    "ADE_InputPIA_Multival": {
      "title": "InputPIA_MultivalNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: multival",
          "properties": {
            "multival": {
              "type": "MULTIVAL"
            }
          },
          "required": ["multival"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PIA_INPUT",
          "items": [
            {
              "type": "PIA_INPUT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/PIA"
    },
    "ADE_InputPIA_PaperPresets": {
      "title": "InputPIA_PaperPresetsNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: preset, batch_index",
          "properties": {
            "preset": {
              "type": "string"
            },
            "batch_index": {
              "type": "number"
            }
          },
          "required": ["preset", "batch_index"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: PIA_INPUT",
          "items": [
            {
              "type": "PIA_INPUT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/PIA"
    },
    "ADE_PIA_AnimateDiffKeyframe": {
      "title": "PIA_ADKeyframeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: start_percent",
          "properties": {
            "start_percent": {
              "type": "number"
            }
          },
          "required": ["start_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_KEYFRAMES",
          "items": [
            {
              "type": "AD_KEYFRAMES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/PIA"
    },
    "ADE_InjectPIAIntoAnimateDiffModel": {
      "title": "LoadAnimateDiffAndInjectPIANode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name, motion_model",
          "properties": {
            "model_name": {
              "type": "string"
            },
            "motion_model": {
              "type": "MOTION_MODEL_ADE"
            }
          },
          "required": ["model_name", "motion_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MOTION_MODEL_ADE",
          "items": [
            {
              "type": "MOTION_MODEL_ADE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②/PIA/🧪experimental"
    },
    "ADE_AnimateDiffLoaderWithContext": {
      "title": "LegacyAnimateDiffLoaderWithContextDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, model_name, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "model_name": {
              "type": "string"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": ["model", "model_name", "beta_schedule"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Animate Diff 🎭🅐🅓/① Gen1 nodes ①"
    },
    "AnimateDiffLoaderV1": {
      "title": "AnimateDiffLoaderDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latents, model_name, unlimited_area_hack, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "latents": {
              "type": "LATENT"
            },
            "model_name": {
              "type": "string"
            },
            "unlimited_area_hack": {
              "type": "BOOLEAN"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "latents",
            "model_name",
            "unlimited_area_hack",
            "beta_schedule"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, LATENT",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffLoaderV1Advanced": {
      "title": "AnimateDiffLoaderAdvancedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latents, model_name, unlimited_area_hack, context_length, context_stride, context_overlap, context_schedule, closed_loop, beta_schedule",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "latents": {
              "type": "LATENT"
            },
            "model_name": {
              "type": "string"
            },
            "unlimited_area_hack": {
              "type": "BOOLEAN"
            },
            "context_length": {
              "type": "number"
            },
            "context_stride": {
              "type": "number"
            },
            "context_overlap": {
              "type": "number"
            },
            "context_schedule": {
              "type": "string"
            },
            "closed_loop": {
              "type": "BOOLEAN"
            },
            "beta_schedule": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "latents",
            "model_name",
            "unlimited_area_hack",
            "context_length",
            "context_stride",
            "context_overlap",
            "context_schedule",
            "closed_loop",
            "beta_schedule"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, LATENT",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffCombine": {
      "title": "AnimateDiffCombineDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, frame_rate, loop_count, filename_prefix, format, pingpong, save_image",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "frame_rate": {
              "type": "number"
            },
            "loop_count": {
              "type": "number"
            },
            "filename_prefix": {
              "type": "string"
            },
            "format": {
              "type": "string"
            },
            "pingpong": {
              "type": "BOOLEAN"
            },
            "save_image": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "images",
            "frame_rate",
            "loop_count",
            "filename_prefix",
            "format",
            "pingpong",
            "save_image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: GIF",
          "items": [
            {
              "type": "GIF"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffModelSettings_Release": {
      "title": "AnimateDiffModelSettingsDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: min_motion_scale, max_motion_scale",
          "properties": {
            "min_motion_scale": {
              "type": "number"
            },
            "max_motion_scale": {
              "type": "number"
            }
          },
          "required": ["min_motion_scale", "max_motion_scale"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffModelSettingsSimple": {
      "title": "AnimateDiffModelSettingsSimpleDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: motion_pe_stretch",
          "properties": {
            "motion_pe_stretch": {
              "type": "number"
            }
          },
          "required": ["motion_pe_stretch"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffModelSettings": {
      "title": "AnimateDiffModelSettingsAdvancedDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_strength, attn_strength, other_strength, motion_pe_stretch, cap_initial_pe_length, interpolate_pe_to_length, initial_pe_idx_offset, final_pe_idx_offset",
          "properties": {
            "pe_strength": {
              "type": "number"
            },
            "attn_strength": {
              "type": "number"
            },
            "other_strength": {
              "type": "number"
            },
            "motion_pe_stretch": {
              "type": "number"
            },
            "cap_initial_pe_length": {
              "type": "number"
            },
            "interpolate_pe_to_length": {
              "type": "number"
            },
            "initial_pe_idx_offset": {
              "type": "number"
            },
            "final_pe_idx_offset": {
              "type": "number"
            }
          },
          "required": [
            "pe_strength",
            "attn_strength",
            "other_strength",
            "motion_pe_stretch",
            "cap_initial_pe_length",
            "interpolate_pe_to_length",
            "initial_pe_idx_offset",
            "final_pe_idx_offset"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths": {
      "title": "AnimateDiffModelSettingsAdvancedAttnStrengthsDEPR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pe_strength, attn_strength, attn_q_strength, attn_k_strength, attn_v_strength, attn_out_weight_strength, attn_out_bias_strength, other_strength, motion_pe_stretch, cap_initial_pe_length, interpolate_pe_to_length, initial_pe_idx_offset, final_pe_idx_offset",
          "properties": {
            "pe_strength": {
              "type": "number"
            },
            "attn_strength": {
              "type": "number"
            },
            "attn_q_strength": {
              "type": "number"
            },
            "attn_k_strength": {
              "type": "number"
            },
            "attn_v_strength": {
              "type": "number"
            },
            "attn_out_weight_strength": {
              "type": "number"
            },
            "attn_out_bias_strength": {
              "type": "number"
            },
            "other_strength": {
              "type": "number"
            },
            "motion_pe_stretch": {
              "type": "number"
            },
            "cap_initial_pe_length": {
              "type": "number"
            },
            "interpolate_pe_to_length": {
              "type": "number"
            },
            "initial_pe_idx_offset": {
              "type": "number"
            },
            "final_pe_idx_offset": {
              "type": "number"
            }
          },
          "required": [
            "pe_strength",
            "attn_strength",
            "attn_q_strength",
            "attn_k_strength",
            "attn_v_strength",
            "attn_out_weight_strength",
            "attn_out_bias_strength",
            "other_strength",
            "motion_pe_stretch",
            "cap_initial_pe_length",
            "interpolate_pe_to_length",
            "initial_pe_idx_offset",
            "final_pe_idx_offset"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AD_SETTINGS",
          "items": [
            {
              "type": "AD_SETTINGS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": ""
    },
    "AutoCropFaces": {
      "title": "AutoCropFaces",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, number_of_faces, scale_factor, shift_factor, start_index, max_faces_per_image, aspect_ratio",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "number_of_faces": {
              "type": "number"
            },
            "scale_factor": {
              "type": "number"
            },
            "shift_factor": {
              "type": "number"
            },
            "start_index": {
              "type": "number"
            },
            "max_faces_per_image": {
              "type": "number"
            },
            "aspect_ratio": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "number_of_faces",
            "scale_factor",
            "shift_factor",
            "start_index",
            "max_faces_per_image",
            "aspect_ratio"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, CROP_DATA",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "CROP_DATA"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Faces"
    },
    "CLIPSeg": {
      "title": "CLIPSeg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, text",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["image", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE, IMAGE",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "image"
    },
    "CombineSegMasks": {
      "title": "CombineMasks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_image, mask_1, mask_2",
          "properties": {
            "input_image": {
              "type": "IMAGE"
            },
            "mask_1": {
              "type": "MASK"
            },
            "mask_2": {
              "type": "MASK"
            }
          },
          "required": ["input_image", "mask_1", "mask_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE, IMAGE",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "image"
    },
    "LoadDepthPro": {
      "title": "LoadDepthPro",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: precision",
          "properties": {
            "precision": {
              "type": "string"
            }
          },
          "required": ["precision"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: DEPTHPRO_MODEL",
          "items": [
            {
              "type": "DEPTHPRO_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "DepthPro"
    },
    "RunDepthPro": {
      "title": "RunDepthPro",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: DEPTHPRO_MODEL, IMAGE, invert, gamma",
          "properties": {
            "DEPTHPRO_MODEL": {
              "type": "DEPTHPRO_MODEL"
            },
            "IMAGE": {
              "type": "IMAGE"
            },
            "invert": {
              "type": "BOOLEAN"
            },
            "gamma": {
              "type": "number"
            }
          },
          "required": ["DEPTHPRO_MODEL", "IMAGE", "invert", "gamma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, LIST, LIST, FLOAT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "LIST"
            },
            {
              "type": "LIST"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "DepthPro"
    },
    "MZ_Flux1PartialLoad_Patch": {
      "title": "MZ_Flux1PartialLoad_Patch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, double_blocks_cuda_size, single_blocks_cuda_size",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "double_blocks_cuda_size": {
              "type": "number"
            },
            "single_blocks_cuda_size": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "double_blocks_cuda_size",
            "single_blocks_cuda_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "MinusZone - FluxExt"
    },
    "MZ_Flux1CheckpointLoaderNF4_cpuDynOffload": {
      "title": "MZ_Flux1CheckpointLoaderNF4_cpuDynOffload",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name, double_blocks_cuda_size, single_blocks_cuda_size",
          "properties": {
            "ckpt_name": {
              "type": "string"
            },
            "double_blocks_cuda_size": {
              "type": "number"
            },
            "single_blocks_cuda_size": {
              "type": "number"
            }
          },
          "required": [
            "ckpt_name",
            "double_blocks_cuda_size",
            "single_blocks_cuda_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "MinusZone - FluxExt"
    },
    "MZ_Flux1CheckpointLoader_cpuDynOffload": {
      "title": "MZ_Flux1CheckpointLoader_cpuDynOffload",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name, double_blocks_cuda_size, single_blocks_cuda_size",
          "properties": {
            "ckpt_name": {
              "type": "string"
            },
            "double_blocks_cuda_size": {
              "type": "number"
            },
            "single_blocks_cuda_size": {
              "type": "number"
            }
          },
          "required": [
            "ckpt_name",
            "double_blocks_cuda_size",
            "single_blocks_cuda_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "MinusZone - FluxExt"
    },
    "MZ_Flux1UnetLoader_cpuDynOffload": {
      "title": "MZ_Flux1UnetLoader_cpuDynOffload",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: unet_name, weight_dtype, double_blocks_cuda_size, single_blocks_cuda_size",
          "properties": {
            "unet_name": {
              "type": "string"
            },
            "weight_dtype": {
              "type": "string"
            },
            "double_blocks_cuda_size": {
              "type": "number"
            },
            "single_blocks_cuda_size": {
              "type": "number"
            }
          },
          "required": [
            "unet_name",
            "weight_dtype",
            "double_blocks_cuda_size",
            "single_blocks_cuda_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "MinusZone - FluxExt"
    },
    "UnetLoaderGGUF": {
      "title": "UnetLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: unet_name",
          "properties": {
            "unet_name": {
              "type": "string"
            }
          },
          "required": ["unet_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "bootleg"
    },
    "CLIPLoaderGGUF": {
      "title": "CLIPLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name, type",
          "properties": {
            "clip_name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "bootleg"
    },
    "DualCLIPLoaderGGUF": {
      "title": "DualCLIPLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, type",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "bootleg"
    },
    "TripleCLIPLoaderGGUF": {
      "title": "TripleCLIPLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, clip_name3",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "clip_name3": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "clip_name3"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "bootleg"
    },
    "QuadrupleCLIPLoaderGGUF": {
      "title": "QuadrupleCLIPLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, clip_name3, clip_name4",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "clip_name3": {
              "type": "string"
            },
            "clip_name4": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "clip_name3", "clip_name4"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "bootleg"
    },
    "UnetLoaderGGUFAdvanced": {
      "title": "UnetLoaderGGUFAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: unet_name, dequant_dtype, patch_dtype, patch_on_device",
          "properties": {
            "unet_name": {
              "type": "string"
            },
            "dequant_dtype": {
              "type": "string"
            },
            "patch_dtype": {
              "type": "string"
            },
            "patch_on_device": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "unet_name",
            "dequant_dtype",
            "patch_dtype",
            "patch_on_device"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "bootleg"
    },
    "InpaintCropImproved": {
      "title": "InpaintCropImproved",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, downscale_algorithm, upscale_algorithm, preresize, preresize_mode, preresize_min_width, preresize_min_height, preresize_max_width, preresize_max_height, mask_fill_holes, mask_expand_pixels, mask_invert, mask_blend_pixels, mask_hipass_filter, extend_for_outpainting, extend_up_factor, extend_down_factor, extend_left_factor, extend_right_factor, context_from_mask_extend_factor, output_resize_to_target_size, output_target_width, output_target_height, output_padding",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "downscale_algorithm": {
              "type": "string"
            },
            "upscale_algorithm": {
              "type": "string"
            },
            "preresize": {
              "type": "BOOLEAN"
            },
            "preresize_mode": {
              "type": "string"
            },
            "preresize_min_width": {
              "type": "number"
            },
            "preresize_min_height": {
              "type": "number"
            },
            "preresize_max_width": {
              "type": "number"
            },
            "preresize_max_height": {
              "type": "number"
            },
            "mask_fill_holes": {
              "type": "BOOLEAN"
            },
            "mask_expand_pixels": {
              "type": "number"
            },
            "mask_invert": {
              "type": "BOOLEAN"
            },
            "mask_blend_pixels": {
              "type": "number"
            },
            "mask_hipass_filter": {
              "type": "number"
            },
            "extend_for_outpainting": {
              "type": "BOOLEAN"
            },
            "extend_up_factor": {
              "type": "number"
            },
            "extend_down_factor": {
              "type": "number"
            },
            "extend_left_factor": {
              "type": "number"
            },
            "extend_right_factor": {
              "type": "number"
            },
            "context_from_mask_extend_factor": {
              "type": "number"
            },
            "output_resize_to_target_size": {
              "type": "BOOLEAN"
            },
            "output_target_width": {
              "type": "number"
            },
            "output_target_height": {
              "type": "number"
            },
            "output_padding": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "downscale_algorithm",
            "upscale_algorithm",
            "preresize",
            "preresize_mode",
            "preresize_min_width",
            "preresize_min_height",
            "preresize_max_width",
            "preresize_max_height",
            "mask_fill_holes",
            "mask_expand_pixels",
            "mask_invert",
            "mask_blend_pixels",
            "mask_hipass_filter",
            "extend_for_outpainting",
            "extend_up_factor",
            "extend_down_factor",
            "extend_left_factor",
            "extend_right_factor",
            "context_from_mask_extend_factor",
            "output_resize_to_target_size",
            "output_target_width",
            "output_target_height",
            "output_padding"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STITCHER, IMAGE, MASK",
          "items": [
            {
              "type": "STITCHER"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "inpaint"
    },
    "InpaintStitchImproved": {
      "title": "InpaintStitchImproved",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: stitcher, inpainted_image",
          "properties": {
            "stitcher": {
              "type": "STITCHER"
            },
            "inpainted_image": {
              "type": "IMAGE"
            }
          },
          "required": ["stitcher", "inpainted_image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "inpaint"
    },
    "InpaintCrop": {
      "title": "InpaintCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, context_expand_pixels, context_expand_factor, fill_mask_holes, blur_mask_pixels, invert_mask, blend_pixels, rescale_algorithm, mode, force_width, force_height, rescale_factor, min_width, min_height, max_width, max_height, padding",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "context_expand_pixels": {
              "type": "number"
            },
            "context_expand_factor": {
              "type": "number"
            },
            "fill_mask_holes": {
              "type": "BOOLEAN"
            },
            "blur_mask_pixels": {
              "type": "number"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_pixels": {
              "type": "number"
            },
            "rescale_algorithm": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "force_width": {
              "type": "number"
            },
            "force_height": {
              "type": "number"
            },
            "rescale_factor": {
              "type": "number"
            },
            "min_width": {
              "type": "number"
            },
            "min_height": {
              "type": "number"
            },
            "max_width": {
              "type": "number"
            },
            "max_height": {
              "type": "number"
            },
            "padding": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "mask",
            "context_expand_pixels",
            "context_expand_factor",
            "fill_mask_holes",
            "blur_mask_pixels",
            "invert_mask",
            "blend_pixels",
            "rescale_algorithm",
            "mode",
            "force_width",
            "force_height",
            "rescale_factor",
            "min_width",
            "min_height",
            "max_width",
            "max_height",
            "padding"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STITCH, IMAGE, MASK",
          "items": [
            {
              "type": "STITCH"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "inpaint"
    },
    "InpaintStitch": {
      "title": "InpaintStitch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: stitch, inpainted_image, rescale_algorithm",
          "properties": {
            "stitch": {
              "type": "STITCH"
            },
            "inpainted_image": {
              "type": "IMAGE"
            },
            "rescale_algorithm": {
              "type": "string"
            }
          },
          "required": ["stitch", "inpainted_image", "rescale_algorithm"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "inpaint"
    },
    "InpaintExtendOutpaint": {
      "title": "InpaintExtendOutpaint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, mode, expand_up_pixels, expand_up_factor, expand_down_pixels, expand_down_factor, expand_left_pixels, expand_left_factor, expand_right_pixels, expand_right_factor",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "mode": {
              "type": "string"
            },
            "expand_up_pixels": {
              "type": "number"
            },
            "expand_up_factor": {
              "type": "number"
            },
            "expand_down_pixels": {
              "type": "number"
            },
            "expand_down_factor": {
              "type": "number"
            },
            "expand_left_pixels": {
              "type": "number"
            },
            "expand_left_factor": {
              "type": "number"
            },
            "expand_right_pixels": {
              "type": "number"
            },
            "expand_right_factor": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mask",
            "mode",
            "expand_up_pixels",
            "expand_up_factor",
            "expand_down_pixels",
            "expand_down_factor",
            "expand_left_pixels",
            "expand_left_factor",
            "expand_right_pixels",
            "expand_right_factor"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "inpaint"
    },
    "InpaintResize": {
      "title": "InpaintResize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, rescale_algorithm, mode, min_width, min_height, rescale_factor",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "rescale_algorithm": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "min_width": {
              "type": "number"
            },
            "min_height": {
              "type": "number"
            },
            "rescale_factor": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mask",
            "rescale_algorithm",
            "mode",
            "min_width",
            "min_height",
            "rescale_factor"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "inpaint"
    },
    "LoadLotusModel": {
      "title": "LoadLotusModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "string"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LOTUSUNET",
          "items": [
            {
              "type": "LOTUSUNET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ComfyUI-Lotus"
    },
    "LotusSampler": {
      "title": "LotusSampler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lotus_unet, samples, seed, per_batch, keep_model_loaded",
          "properties": {
            "lotus_unet": {
              "type": "LOTUSUNET"
            },
            "samples": {
              "type": "LATENT"
            },
            "seed": {
              "type": "number"
            },
            "per_batch": {
              "type": "number"
            },
            "keep_model_loaded": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "lotus_unet",
            "samples",
            "seed",
            "per_batch",
            "keep_model_loaded"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ComfyUI-Lotus"
    },
    "MarigoldModelLoader": {
      "title": "MarigoldModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "string"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MARIGOLDMODEL",
          "items": [
            {
              "type": "MARIGOLDMODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Marigold"
    },
    "MarigoldDepthEstimation_v2": {
      "title": "MarigoldDepthEstimation_v2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: marigold_model, image, seed, denoise_steps, ensemble_size, processing_resolution, scheduler, use_taesd_vae",
          "properties": {
            "marigold_model": {
              "type": "MARIGOLDMODEL"
            },
            "image": {
              "type": "IMAGE"
            },
            "seed": {
              "type": "number"
            },
            "denoise_steps": {
              "type": "number"
            },
            "ensemble_size": {
              "type": "number"
            },
            "processing_resolution": {
              "type": "number"
            },
            "scheduler": {
              "type": "string"
            },
            "use_taesd_vae": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "marigold_model",
            "image",
            "seed",
            "denoise_steps",
            "ensemble_size",
            "processing_resolution",
            "scheduler",
            "use_taesd_vae"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Marigold"
    },
    "MarigoldDepthEstimation_v2_video": {
      "title": "MarigoldDepthEstimation_v2_video",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: marigold_model, images, seed, denoise_steps, processing_resolution, scheduler, blend_factor, use_taesd_vae",
          "properties": {
            "marigold_model": {
              "type": "MARIGOLDMODEL"
            },
            "images": {
              "type": "IMAGE"
            },
            "seed": {
              "type": "number"
            },
            "denoise_steps": {
              "type": "number"
            },
            "processing_resolution": {
              "type": "number"
            },
            "scheduler": {
              "type": "string"
            },
            "blend_factor": {
              "type": "number"
            },
            "use_taesd_vae": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "marigold_model",
            "images",
            "seed",
            "denoise_steps",
            "processing_resolution",
            "scheduler",
            "blend_factor",
            "use_taesd_vae"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Marigold"
    },
    "MarigoldDepthEstimation": {
      "title": "MarigoldDepthEstimation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, seed, denoise_steps, n_repeat, regularizer_strength, reduction_method, max_iter, tol, invert, keep_model_loaded, n_repeat_batch_size, use_fp16, scheduler, normalize",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "seed": {
              "type": "number"
            },
            "denoise_steps": {
              "type": "number"
            },
            "n_repeat": {
              "type": "number"
            },
            "regularizer_strength": {
              "type": "number"
            },
            "reduction_method": {
              "type": "string"
            },
            "max_iter": {
              "type": "number"
            },
            "tol": {
              "type": "number"
            },
            "invert": {
              "type": "BOOLEAN"
            },
            "keep_model_loaded": {
              "type": "BOOLEAN"
            },
            "n_repeat_batch_size": {
              "type": "number"
            },
            "use_fp16": {
              "type": "BOOLEAN"
            },
            "scheduler": {
              "type": "string"
            },
            "normalize": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "seed",
            "denoise_steps",
            "n_repeat",
            "regularizer_strength",
            "reduction_method",
            "max_iter",
            "tol",
            "invert",
            "keep_model_loaded",
            "n_repeat_batch_size",
            "use_fp16",
            "scheduler",
            "normalize"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Marigold"
    },
    "MarigoldDepthEstimationVideo": {
      "title": "MarigoldDepthEstimationVideo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, seed, first_frame_denoise_steps, first_frame_n_repeat, n_repeat_batch_size, invert, keep_model_loaded, scheduler, normalize, denoise_steps, flow_warping, flow_depth_mix, noise_ratio, dtype",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "seed": {
              "type": "number"
            },
            "first_frame_denoise_steps": {
              "type": "number"
            },
            "first_frame_n_repeat": {
              "type": "number"
            },
            "n_repeat_batch_size": {
              "type": "number"
            },
            "invert": {
              "type": "BOOLEAN"
            },
            "keep_model_loaded": {
              "type": "BOOLEAN"
            },
            "scheduler": {
              "type": "string"
            },
            "normalize": {
              "type": "BOOLEAN"
            },
            "denoise_steps": {
              "type": "number"
            },
            "flow_warping": {
              "type": "BOOLEAN"
            },
            "flow_depth_mix": {
              "type": "number"
            },
            "noise_ratio": {
              "type": "number"
            },
            "dtype": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "seed",
            "first_frame_denoise_steps",
            "first_frame_n_repeat",
            "n_repeat_batch_size",
            "invert",
            "keep_model_loaded",
            "scheduler",
            "normalize",
            "denoise_steps",
            "flow_warping",
            "flow_depth_mix",
            "noise_ratio",
            "dtype"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Marigold"
    },
    "ColorizeDepthmap": {
      "title": "ColorizeDepthmap",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, colorize_method",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "colorize_method": {
              "type": "string"
            }
          },
          "required": ["image", "colorize_method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Marigold"
    },
    "SaveImageOpenEXR": {
      "title": "SaveImageOpenEXR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, filename_prefix",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["images", "filename_prefix"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Marigold"
    },
    "RemapDepth": {
      "title": "RemapDepth",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, min, max, clamp",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            },
            "clamp": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "min", "max", "clamp"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Marigold"
    },
    "NunchakuFluxDiTLoader": {
      "title": "NunchakuFluxDiTLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_path, cache_threshold, attention, cpu_offload, device_id, data_type",
          "properties": {
            "model_path": {
              "type": "string"
            },
            "cache_threshold": {
              "type": "number"
            },
            "attention": {
              "type": "string"
            },
            "cpu_offload": {
              "type": "string"
            },
            "device_id": {
              "type": "number"
            },
            "data_type": {
              "type": "string"
            }
          },
          "required": [
            "model_path",
            "cache_threshold",
            "attention",
            "cpu_offload",
            "device_id",
            "data_type"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuQwenImageDiTLoader": {
      "title": "NunchakuQwenImageDiTLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name, cpu_offload",
          "properties": {
            "model_name": {
              "type": "string"
            },
            "cpu_offload": {
              "type": "string"
            }
          },
          "required": ["model_name", "cpu_offload"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuFluxLoraLoader": {
      "title": "NunchakuFluxLoraLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, lora_name, lora_strength",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "lora_name": {
              "type": "string"
            },
            "lora_strength": {
              "type": "number"
            }
          },
          "required": ["model", "lora_name", "lora_strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuFluxLoraStack": {
      "title": "NunchakuFluxLoraStack",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuTextEncoderLoader": {
      "title": "NunchakuTextEncoderLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_type, text_encoder1, text_encoder2, t5_min_length, use_4bit_t5, int4_model",
          "properties": {
            "model_type": {
              "type": "string"
            },
            "text_encoder1": {
              "type": "string"
            },
            "text_encoder2": {
              "type": "string"
            },
            "t5_min_length": {
              "type": "number"
            },
            "use_4bit_t5": {
              "type": "string"
            },
            "int4_model": {
              "type": "string"
            }
          },
          "required": [
            "model_type",
            "text_encoder1",
            "text_encoder2",
            "t5_min_length",
            "use_4bit_t5",
            "int4_model"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuTextEncoderLoaderV2": {
      "title": "NunchakuTextEncoderLoaderV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_type, text_encoder1, text_encoder2, t5_min_length",
          "properties": {
            "model_type": {
              "type": "string"
            },
            "text_encoder1": {
              "type": "string"
            },
            "text_encoder2": {
              "type": "string"
            },
            "t5_min_length": {
              "type": "number"
            }
          },
          "required": [
            "model_type",
            "text_encoder1",
            "text_encoder2",
            "t5_min_length"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuDepthPreprocessor": {
      "title": "FluxDepthPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model_path",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model_path": {
              "type": "string"
            }
          },
          "required": ["image", "model_path"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuPulidApply": {
      "title": "NunchakuPulidApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pulid, image, model, ip_weight",
          "properties": {
            "pulid": {
              "type": "PULID"
            },
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "MODEL"
            },
            "ip_weight": {
              "type": "number"
            }
          },
          "required": ["pulid", "image", "model", "ip_weight"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuPulidLoader": {
      "title": "NunchakuPulidLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, PULID",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "PULID"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuPuLIDLoaderV2": {
      "title": "NunchakuPuLIDLoaderV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, pulid_file, eva_clip_file, insight_face_provider",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "pulid_file": {
              "type": "string"
            },
            "eva_clip_file": {
              "type": "string"
            },
            "insight_face_provider": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "pulid_file",
            "eva_clip_file",
            "insight_face_provider"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, PULID_PIPELINE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "PULID_PIPELINE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuFluxPuLIDApplyV2": {
      "title": "NunchakuFluxPuLIDApplyV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, pulid_pipline, image, weight, start_at, end_at",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "pulid_pipline": {
              "type": "PULID_PIPELINE"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "pulid_pipline",
            "image",
            "weight",
            "start_at",
            "end_at"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuFluxIPAdapterApply": {
      "title": "NunchakuFluxIPAdapterApply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter_pipeline, image, weight",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter_pipeline": {
              "type": "IPADAPTER_PIPELINE"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            }
          },
          "required": ["model", "ipadapter_pipeline", "image", "weight"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuIPAdapterLoader": {
      "title": "NunchakuIPAdapterLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "MODEL"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, IPADAPTER_PIPELINE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "IPADAPTER_PIPELINE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuModelMerger": {
      "title": "NunchakuModelMerger",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_folder, save_name",
          "properties": {
            "model_folder": {
              "type": "string"
            },
            "save_name": {
              "type": "string"
            }
          },
          "required": ["model_folder", "save_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "NunchakuWheelInstaller": {
      "title": "NunchakuWheelInstaller",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: source, version, dev_version_github, backend",
          "properties": {
            "source": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "dev_version_github": {
              "type": "string"
            },
            "backend": {
              "type": "string"
            }
          },
          "required": ["source", "version", "dev_version_github", "backend"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Nunchaku"
    },
    "Robust Video Matting": {
      "title": "RobustVideoMatting",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: video_frames, backbone, fp16, bg_color, batch_size",
          "properties": {
            "video_frames": {
              "type": "IMAGE"
            },
            "backbone": {
              "type": "string"
            },
            "fp16": {
              "type": "BOOLEAN"
            },
            "bg_color": {
              "type": "string"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "video_frames",
            "backbone",
            "fp16",
            "bg_color",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Video Matting"
    },
    "BRIAAI Matting": {
      "title": "BriaaiRembg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: video_frames, version, fp16, bg_color, batch_size",
          "properties": {
            "video_frames": {
              "type": "IMAGE"
            },
            "version": {
              "type": "string"
            },
            "fp16": {
              "type": "BOOLEAN"
            },
            "bg_color": {
              "type": "string"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "video_frames",
            "version",
            "fp16",
            "bg_color",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Video Matting"
    },
    "Yoloworld_ModelLoader_Zho": {
      "title": "Yoloworld_ModelLoader_Zho",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: yolo_world_model",
          "properties": {
            "yolo_world_model": {
              "type": "string"
            }
          },
          "required": ["yolo_world_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: YOLOWORLDMODEL",
          "items": [
            {
              "type": "YOLOWORLDMODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "🔎YOLOWORLD_ESAM"
    },
    "ESAM_ModelLoader_Zho": {
      "title": "ESAM_ModelLoader_Zho",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: device",
          "properties": {
            "device": {
              "type": "string"
            }
          },
          "required": ["device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ESAMMODEL",
          "items": [
            {
              "type": "ESAMMODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "🔎YOLOWORLD_ESAM"
    },
    "Yoloworld_ESAM_Zho": {
      "title": "Yoloworld_ESAM_Zho",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: yolo_world_model, esam_model, image, categories, confidence_threshold, iou_threshold, box_thickness, text_thickness, text_scale, with_confidence, with_class_agnostic_nms, with_segmentation, mask_combined, mask_extracted, mask_extracted_index",
          "properties": {
            "yolo_world_model": {
              "type": "YOLOWORLDMODEL"
            },
            "esam_model": {
              "type": "ESAMMODEL"
            },
            "image": {
              "type": "IMAGE"
            },
            "categories": {
              "type": "string"
            },
            "confidence_threshold": {
              "type": "number"
            },
            "iou_threshold": {
              "type": "number"
            },
            "box_thickness": {
              "type": "number"
            },
            "text_thickness": {
              "type": "number"
            },
            "text_scale": {
              "type": "number"
            },
            "with_confidence": {
              "type": "BOOLEAN"
            },
            "with_class_agnostic_nms": {
              "type": "BOOLEAN"
            },
            "with_segmentation": {
              "type": "BOOLEAN"
            },
            "mask_combined": {
              "type": "BOOLEAN"
            },
            "mask_extracted": {
              "type": "BOOLEAN"
            },
            "mask_extracted_index": {
              "type": "number"
            }
          },
          "required": [
            "yolo_world_model",
            "esam_model",
            "image",
            "categories",
            "confidence_threshold",
            "iou_threshold",
            "box_thickness",
            "text_thickness",
            "text_scale",
            "with_confidence",
            "with_class_agnostic_nms",
            "with_segmentation",
            "mask_combined",
            "mask_extracted",
            "mask_extracted_index"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "🔎YOLOWORLD_ESAM"
    },
    "Yoloworld_ESAM_DetectorProvider_Zho": {
      "title": "Yoloworld_ESAM_DetectorProvider_Zho",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: yolo_world_model, categories, iou_threshold, with_class_agnostic_nms",
          "properties": {
            "yolo_world_model": {
              "type": "YOLOWORLDMODEL"
            },
            "categories": {
              "type": "string"
            },
            "iou_threshold": {
              "type": "number"
            },
            "with_class_agnostic_nms": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "yolo_world_model",
            "categories",
            "iou_threshold",
            "with_class_agnostic_nms"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOX_DETECTOR, SEGM_DETECTOR",
          "items": [
            {
              "type": "BBOX_DETECTOR"
            },
            {
              "type": "SEGM_DETECTOR"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "🔎YOLOWORLD_ESAM"
    },
    "AnimeFace_SemSegPreprocessor": {
      "title": "AnimeFace_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "AnyLineArtPreprocessor_aux": {
      "title": "AnyLinePreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "BinaryPreprocessor": {
      "title": "Binary_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "CannyEdgePreprocessor": {
      "title": "Canny_Edge_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "ColorPreprocessor": {
      "title": "Color_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/T2IAdapter-only"
    },
    "DensePosePreprocessor": {
      "title": "DensePose_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "DepthAnythingPreprocessor": {
      "title": "Depth_Anything_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "Zoe_DepthAnythingPreprocessor": {
      "title": "Zoe_Depth_Anything_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "DepthAnythingV2Preprocessor": {
      "title": "Depth_Anything_V2_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "DiffusionEdge_Preprocessor": {
      "title": "DiffusionEdge_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "DSINE-NormalMapPreprocessor": {
      "title": "DSINE_Normal_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "DWPreprocessor": {
      "title": "DWPose_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, POSE_KEYPOINT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "POSE_KEYPOINT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "AnimalPosePreprocessor": {
      "title": "AnimalPose_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, POSE_KEYPOINT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "POSE_KEYPOINT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "HEDPreprocessor": {
      "title": "HED_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "FakeScribblePreprocessor": {
      "title": "Fake_Scribble_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "InpaintPreprocessor": {
      "title": "InpaintPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["image", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/others"
    },
    "LeReS-DepthMapPreprocessor": {
      "title": "LERES_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "LineArtPreprocessor": {
      "title": "LineArt_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "AnimeLineArtPreprocessor": {
      "title": "AnimeLineArt_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "LineartStandardPreprocessor": {
      "title": "Lineart_Standard_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "Manga2Anime_LineArt_Preprocessor": {
      "title": "Manga2Anime_LineArt_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "MediaPipe-FaceMeshPreprocessor": {
      "title": "Media_Pipe_Face_Mesh_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "MeshGraphormer-DepthMapPreprocessor": {
      "title": "Mesh_Graphormer_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "MeshGraphormer+ImpactDetector-DepthMapPreprocessor": {
      "title": "Mesh_Graphormer_With_ImpactDetector_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, bbox_detector",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "bbox_detector": {
              "type": "BBOX_DETECTOR"
            }
          },
          "required": ["image", "bbox_detector"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "Metric3D-DepthMapPreprocessor": {
      "title": "Metric3D_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "Metric3D-NormalMapPreprocessor": {
      "title": "Metric3D_Normal_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "MiDaS-NormalMapPreprocessor": {
      "title": "MIDAS_Normal_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "MiDaS-DepthMapPreprocessor": {
      "title": "MIDAS_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "M-LSDPreprocessor": {
      "title": "MLSD_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "BAE-NormalMapPreprocessor": {
      "title": "BAE_Normal_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "OneFormer-COCO-SemSegPreprocessor": {
      "title": "OneFormer_COCO_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "OneFormer-ADE20K-SemSegPreprocessor": {
      "title": "OneFormer_ADE20K_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "OpenposePreprocessor": {
      "title": "OpenPose_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, POSE_KEYPOINT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "POSE_KEYPOINT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Faces and Poses Estimators"
    },
    "PiDiNetPreprocessor": {
      "title": "PIDINET_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "SavePoseKpsAsJsonFile": {
      "title": "SavePoseKpsAsJsonFile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pose_kps, filename_prefix",
          "properties": {
            "pose_kps": {
              "type": "POSE_KEYPOINT"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["pose_kps", "filename_prefix"]
        }
      },
      "$category": "ControlNet Preprocessors/Pose Keypoint Postprocess"
    },
    "FacialPartColoringFromPoseKps": {
      "title": "FacialPartColoringFromPoseKps",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pose_kps, mode, skin, left_eye, right_eye, nose, upper_lip, inner_mouth, lower_lip",
          "properties": {
            "pose_kps": {
              "type": "POSE_KEYPOINT"
            },
            "mode": {
              "type": "string"
            },
            "skin": {
              "type": "string"
            },
            "left_eye": {
              "type": "string"
            },
            "right_eye": {
              "type": "string"
            },
            "nose": {
              "type": "string"
            },
            "upper_lip": {
              "type": "string"
            },
            "inner_mouth": {
              "type": "string"
            },
            "lower_lip": {
              "type": "string"
            }
          },
          "required": [
            "pose_kps",
            "mode",
            "skin",
            "left_eye",
            "right_eye",
            "nose",
            "upper_lip",
            "inner_mouth",
            "lower_lip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Pose Keypoint Postprocess"
    },
    "UpperBodyTrackingFromPoseKps": {
      "title": "UpperBodyTrackingFromPoseKps",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: pose_kps, id_include, Head_width_height, Neck_width_height, Shoulder_width_height, Torso_width_height, RArm_width_height, RForearm_width_height, LArm_width_height, LForearm_width_height",
          "properties": {
            "pose_kps": {
              "type": "POSE_KEYPOINT"
            },
            "id_include": {
              "type": "string"
            },
            "Head_width_height": {
              "type": "string"
            },
            "Neck_width_height": {
              "type": "string"
            },
            "Shoulder_width_height": {
              "type": "string"
            },
            "Torso_width_height": {
              "type": "string"
            },
            "RArm_width_height": {
              "type": "string"
            },
            "RForearm_width_height": {
              "type": "string"
            },
            "LArm_width_height": {
              "type": "string"
            },
            "LForearm_width_height": {
              "type": "string"
            }
          },
          "required": [
            "pose_kps",
            "id_include",
            "Head_width_height",
            "Neck_width_height",
            "Shoulder_width_height",
            "Torso_width_height",
            "RArm_width_height",
            "RForearm_width_height",
            "LArm_width_height",
            "LForearm_width_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: TRACKING, STRING",
          "items": [
            {
              "type": "TRACKING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Pose Keypoint Postprocess"
    },
    "RenderPeopleKps": {
      "title": "RenderPeopleKps",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: kps, render_body, render_hand, render_face",
          "properties": {
            "kps": {
              "type": "POSE_KEYPOINT"
            },
            "render_body": {
              "type": "BOOLEAN"
            },
            "render_hand": {
              "type": "BOOLEAN"
            },
            "render_face": {
              "type": "BOOLEAN"
            }
          },
          "required": ["kps", "render_body", "render_hand", "render_face"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Pose Keypoint Postprocess"
    },
    "RenderAnimalKps": {
      "title": "RenderAnimalKps",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: kps",
          "properties": {
            "kps": {
              "type": "POSE_KEYPOINT"
            }
          },
          "required": ["kps"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Pose Keypoint Postprocess"
    },
    "PyraCannyPreprocessor": {
      "title": "PyraCanny_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "ImageLuminanceDetector": {
      "title": "ImageLuminanceDetector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Recolor"
    },
    "ImageIntensityDetector": {
      "title": "ImageIntensityDetector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Recolor"
    },
    "ScribblePreprocessor": {
      "title": "Scribble_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "Scribble_XDoG_Preprocessor": {
      "title": "Scribble_XDoG_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "Scribble_PiDiNet_Preprocessor": {
      "title": "Scribble_PiDiNet_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "SAMPreprocessor": {
      "title": "SAM_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/others"
    },
    "ShufflePreprocessor": {
      "title": "Shuffle_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/T2IAdapter-only"
    },
    "TEEDPreprocessor": {
      "title": "TEED_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Line Extractors"
    },
    "TilePreprocessor": {
      "title": "Tile_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/tile"
    },
    "TTPlanet_TileGF_Preprocessor": {
      "title": "TTPlanet_TileGF_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/tile"
    },
    "TTPlanet_TileSimple_Preprocessor": {
      "title": "TTPlanet_TileSimple_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/tile"
    },
    "UniFormer-SemSegPreprocessor": {
      "title": "Uniformer_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "SemSegPreprocessor": {
      "title": "Uniformer_SemSegPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Semantic Segmentation"
    },
    "Unimatch_OptFlowPreprocessor": {
      "title": "Unimatch_OptFlowPreprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, ckpt_name, backward_flow, bidirectional_flow",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "ckpt_name": {
              "type": "string"
            },
            "backward_flow": {
              "type": "BOOLEAN"
            },
            "bidirectional_flow": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "ckpt_name",
            "backward_flow",
            "bidirectional_flow"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: OPTICAL_FLOW, IMAGE",
          "items": [
            {
              "type": "OPTICAL_FLOW"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Optical Flow"
    },
    "MaskOptFlow": {
      "title": "MaskOptFlow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: optical_flow, mask",
          "properties": {
            "optical_flow": {
              "type": "OPTICAL_FLOW"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["optical_flow", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: OPTICAL_FLOW, IMAGE",
          "items": [
            {
              "type": "OPTICAL_FLOW"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors/Optical Flow"
    },
    "Zoe-DepthMapPreprocessor": {
      "title": "Zoe_Depth_Map_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors/Normal and Depth Estimators"
    },
    "AIO_Preprocessor": {
      "title": "AIO_Preprocessor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "ControlNetPreprocessorSelector": {
      "title": "ControlNetPreprocessorSelector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: preprocessor",
          "properties": {
            "preprocessor": {
              "type": "string"
            }
          },
          "required": ["preprocessor"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ANY",
          "items": [
            {
              "type": "ANY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "PixelPerfectResolution": {
      "title": "PixelPerfectResolution",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: original_image, image_gen_width, image_gen_height, resize_mode",
          "properties": {
            "original_image": {
              "type": "IMAGE"
            },
            "image_gen_width": {
              "type": "number"
            },
            "image_gen_height": {
              "type": "number"
            },
            "resize_mode": {
              "type": "string"
            }
          },
          "required": [
            "original_image",
            "image_gen_width",
            "image_gen_height",
            "resize_mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "ImageGenResolutionFromImage": {
      "title": "ImageGenResolutionFromImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "ImageGenResolutionFromLatent": {
      "title": "ImageGenResolutionFromLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent",
          "properties": {
            "latent": {
              "type": "LATENT"
            }
          },
          "required": ["latent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "HintImageEnchance": {
      "title": "HintImageEnchance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: hint_image, image_gen_width, image_gen_height, resize_mode",
          "properties": {
            "hint_image": {
              "type": "IMAGE"
            },
            "image_gen_width": {
              "type": "number"
            },
            "image_gen_height": {
              "type": "number"
            },
            "resize_mode": {
              "type": "string"
            }
          },
          "required": [
            "hint_image",
            "image_gen_width",
            "image_gen_height",
            "resize_mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "ExecuteAllControlNetPreprocessors": {
      "title": "ExecuteAllControlNetPreprocessors",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "ControlNetAuxSimpleAddText": {
      "title": "ControlNetAuxSimpleAddText",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, text",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["image", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ControlNet Preprocessors"
    },
    "CLIPTextEncodeSDXL+": {
      "title": "CLIPTextEncodeSDXLSimplified",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, size_cond_factor, text, clip",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "size_cond_factor": {
              "type": "number"
            },
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["width", "height", "size_cond_factor", "text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/conditioning"
    },
    "ConditioningCombineMultiple+": {
      "title": "ConditioningCombineMultiple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_1, conditioning_2",
          "properties": {
            "conditioning_1": {
              "type": "CONDITIONING"
            },
            "conditioning_2": {
              "type": "CONDITIONING"
            }
          },
          "required": ["conditioning_1", "conditioning_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/conditioning"
    },
    "SD3NegativeConditioning+": {
      "title": "SD3NegativeConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, end",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "end": {
              "type": "number"
            }
          },
          "required": ["conditioning", "end"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/conditioning"
    },
    "FluxAttentionSeeker+": {
      "title": "FluxAttentionSeeker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, apply_to_query, apply_to_key, apply_to_value, apply_to_out, clip_l_0, clip_l_1, clip_l_2, clip_l_3, clip_l_4, clip_l_5, clip_l_6, clip_l_7, clip_l_8, clip_l_9, clip_l_10, clip_l_11, t5xxl_0, t5xxl_1, t5xxl_2, t5xxl_3, t5xxl_4, t5xxl_5, t5xxl_6, t5xxl_7, t5xxl_8, t5xxl_9, t5xxl_10, t5xxl_11, t5xxl_12, t5xxl_13, t5xxl_14, t5xxl_15, t5xxl_16, t5xxl_17, t5xxl_18, t5xxl_19, t5xxl_20, t5xxl_21, t5xxl_22, t5xxl_23",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "apply_to_query": {
              "type": "BOOLEAN"
            },
            "apply_to_key": {
              "type": "BOOLEAN"
            },
            "apply_to_value": {
              "type": "BOOLEAN"
            },
            "apply_to_out": {
              "type": "BOOLEAN"
            },
            "clip_l_0": {
              "type": "number"
            },
            "clip_l_1": {
              "type": "number"
            },
            "clip_l_2": {
              "type": "number"
            },
            "clip_l_3": {
              "type": "number"
            },
            "clip_l_4": {
              "type": "number"
            },
            "clip_l_5": {
              "type": "number"
            },
            "clip_l_6": {
              "type": "number"
            },
            "clip_l_7": {
              "type": "number"
            },
            "clip_l_8": {
              "type": "number"
            },
            "clip_l_9": {
              "type": "number"
            },
            "clip_l_10": {
              "type": "number"
            },
            "clip_l_11": {
              "type": "number"
            },
            "t5xxl_0": {
              "type": "number"
            },
            "t5xxl_1": {
              "type": "number"
            },
            "t5xxl_2": {
              "type": "number"
            },
            "t5xxl_3": {
              "type": "number"
            },
            "t5xxl_4": {
              "type": "number"
            },
            "t5xxl_5": {
              "type": "number"
            },
            "t5xxl_6": {
              "type": "number"
            },
            "t5xxl_7": {
              "type": "number"
            },
            "t5xxl_8": {
              "type": "number"
            },
            "t5xxl_9": {
              "type": "number"
            },
            "t5xxl_10": {
              "type": "number"
            },
            "t5xxl_11": {
              "type": "number"
            },
            "t5xxl_12": {
              "type": "number"
            },
            "t5xxl_13": {
              "type": "number"
            },
            "t5xxl_14": {
              "type": "number"
            },
            "t5xxl_15": {
              "type": "number"
            },
            "t5xxl_16": {
              "type": "number"
            },
            "t5xxl_17": {
              "type": "number"
            },
            "t5xxl_18": {
              "type": "number"
            },
            "t5xxl_19": {
              "type": "number"
            },
            "t5xxl_20": {
              "type": "number"
            },
            "t5xxl_21": {
              "type": "number"
            },
            "t5xxl_22": {
              "type": "number"
            },
            "t5xxl_23": {
              "type": "number"
            }
          },
          "required": [
            "clip",
            "apply_to_query",
            "apply_to_key",
            "apply_to_value",
            "apply_to_out",
            "clip_l_0",
            "clip_l_1",
            "clip_l_2",
            "clip_l_3",
            "clip_l_4",
            "clip_l_5",
            "clip_l_6",
            "clip_l_7",
            "clip_l_8",
            "clip_l_9",
            "clip_l_10",
            "clip_l_11",
            "t5xxl_0",
            "t5xxl_1",
            "t5xxl_2",
            "t5xxl_3",
            "t5xxl_4",
            "t5xxl_5",
            "t5xxl_6",
            "t5xxl_7",
            "t5xxl_8",
            "t5xxl_9",
            "t5xxl_10",
            "t5xxl_11",
            "t5xxl_12",
            "t5xxl_13",
            "t5xxl_14",
            "t5xxl_15",
            "t5xxl_16",
            "t5xxl_17",
            "t5xxl_18",
            "t5xxl_19",
            "t5xxl_20",
            "t5xxl_21",
            "t5xxl_22",
            "t5xxl_23"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/conditioning"
    },
    "SD3AttentionSeekerLG+": {
      "title": "SD3AttentionSeekerLG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, apply_to_query, apply_to_key, apply_to_value, apply_to_out, clip_l_0, clip_l_1, clip_l_2, clip_l_3, clip_l_4, clip_l_5, clip_l_6, clip_l_7, clip_l_8, clip_l_9, clip_l_10, clip_l_11, clip_g_0, clip_g_1, clip_g_2, clip_g_3, clip_g_4, clip_g_5, clip_g_6, clip_g_7, clip_g_8, clip_g_9, clip_g_10, clip_g_11, clip_g_12, clip_g_13, clip_g_14, clip_g_15, clip_g_16, clip_g_17, clip_g_18, clip_g_19, clip_g_20, clip_g_21, clip_g_22, clip_g_23, clip_g_24, clip_g_25, clip_g_26, clip_g_27, clip_g_28, clip_g_29, clip_g_30, clip_g_31",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "apply_to_query": {
              "type": "BOOLEAN"
            },
            "apply_to_key": {
              "type": "BOOLEAN"
            },
            "apply_to_value": {
              "type": "BOOLEAN"
            },
            "apply_to_out": {
              "type": "BOOLEAN"
            },
            "clip_l_0": {
              "type": "number"
            },
            "clip_l_1": {
              "type": "number"
            },
            "clip_l_2": {
              "type": "number"
            },
            "clip_l_3": {
              "type": "number"
            },
            "clip_l_4": {
              "type": "number"
            },
            "clip_l_5": {
              "type": "number"
            },
            "clip_l_6": {
              "type": "number"
            },
            "clip_l_7": {
              "type": "number"
            },
            "clip_l_8": {
              "type": "number"
            },
            "clip_l_9": {
              "type": "number"
            },
            "clip_l_10": {
              "type": "number"
            },
            "clip_l_11": {
              "type": "number"
            },
            "clip_g_0": {
              "type": "number"
            },
            "clip_g_1": {
              "type": "number"
            },
            "clip_g_2": {
              "type": "number"
            },
            "clip_g_3": {
              "type": "number"
            },
            "clip_g_4": {
              "type": "number"
            },
            "clip_g_5": {
              "type": "number"
            },
            "clip_g_6": {
              "type": "number"
            },
            "clip_g_7": {
              "type": "number"
            },
            "clip_g_8": {
              "type": "number"
            },
            "clip_g_9": {
              "type": "number"
            },
            "clip_g_10": {
              "type": "number"
            },
            "clip_g_11": {
              "type": "number"
            },
            "clip_g_12": {
              "type": "number"
            },
            "clip_g_13": {
              "type": "number"
            },
            "clip_g_14": {
              "type": "number"
            },
            "clip_g_15": {
              "type": "number"
            },
            "clip_g_16": {
              "type": "number"
            },
            "clip_g_17": {
              "type": "number"
            },
            "clip_g_18": {
              "type": "number"
            },
            "clip_g_19": {
              "type": "number"
            },
            "clip_g_20": {
              "type": "number"
            },
            "clip_g_21": {
              "type": "number"
            },
            "clip_g_22": {
              "type": "number"
            },
            "clip_g_23": {
              "type": "number"
            },
            "clip_g_24": {
              "type": "number"
            },
            "clip_g_25": {
              "type": "number"
            },
            "clip_g_26": {
              "type": "number"
            },
            "clip_g_27": {
              "type": "number"
            },
            "clip_g_28": {
              "type": "number"
            },
            "clip_g_29": {
              "type": "number"
            },
            "clip_g_30": {
              "type": "number"
            },
            "clip_g_31": {
              "type": "number"
            }
          },
          "required": [
            "clip",
            "apply_to_query",
            "apply_to_key",
            "apply_to_value",
            "apply_to_out",
            "clip_l_0",
            "clip_l_1",
            "clip_l_2",
            "clip_l_3",
            "clip_l_4",
            "clip_l_5",
            "clip_l_6",
            "clip_l_7",
            "clip_l_8",
            "clip_l_9",
            "clip_l_10",
            "clip_l_11",
            "clip_g_0",
            "clip_g_1",
            "clip_g_2",
            "clip_g_3",
            "clip_g_4",
            "clip_g_5",
            "clip_g_6",
            "clip_g_7",
            "clip_g_8",
            "clip_g_9",
            "clip_g_10",
            "clip_g_11",
            "clip_g_12",
            "clip_g_13",
            "clip_g_14",
            "clip_g_15",
            "clip_g_16",
            "clip_g_17",
            "clip_g_18",
            "clip_g_19",
            "clip_g_20",
            "clip_g_21",
            "clip_g_22",
            "clip_g_23",
            "clip_g_24",
            "clip_g_25",
            "clip_g_26",
            "clip_g_27",
            "clip_g_28",
            "clip_g_29",
            "clip_g_30",
            "clip_g_31"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/conditioning"
    },
    "SD3AttentionSeekerT5+": {
      "title": "SD3AttentionSeekerT5",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, apply_to_query, apply_to_key, apply_to_value, apply_to_out, t5xxl_0, t5xxl_1, t5xxl_2, t5xxl_3, t5xxl_4, t5xxl_5, t5xxl_6, t5xxl_7, t5xxl_8, t5xxl_9, t5xxl_10, t5xxl_11, t5xxl_12, t5xxl_13, t5xxl_14, t5xxl_15, t5xxl_16, t5xxl_17, t5xxl_18, t5xxl_19, t5xxl_20, t5xxl_21, t5xxl_22, t5xxl_23",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "apply_to_query": {
              "type": "BOOLEAN"
            },
            "apply_to_key": {
              "type": "BOOLEAN"
            },
            "apply_to_value": {
              "type": "BOOLEAN"
            },
            "apply_to_out": {
              "type": "BOOLEAN"
            },
            "t5xxl_0": {
              "type": "number"
            },
            "t5xxl_1": {
              "type": "number"
            },
            "t5xxl_2": {
              "type": "number"
            },
            "t5xxl_3": {
              "type": "number"
            },
            "t5xxl_4": {
              "type": "number"
            },
            "t5xxl_5": {
              "type": "number"
            },
            "t5xxl_6": {
              "type": "number"
            },
            "t5xxl_7": {
              "type": "number"
            },
            "t5xxl_8": {
              "type": "number"
            },
            "t5xxl_9": {
              "type": "number"
            },
            "t5xxl_10": {
              "type": "number"
            },
            "t5xxl_11": {
              "type": "number"
            },
            "t5xxl_12": {
              "type": "number"
            },
            "t5xxl_13": {
              "type": "number"
            },
            "t5xxl_14": {
              "type": "number"
            },
            "t5xxl_15": {
              "type": "number"
            },
            "t5xxl_16": {
              "type": "number"
            },
            "t5xxl_17": {
              "type": "number"
            },
            "t5xxl_18": {
              "type": "number"
            },
            "t5xxl_19": {
              "type": "number"
            },
            "t5xxl_20": {
              "type": "number"
            },
            "t5xxl_21": {
              "type": "number"
            },
            "t5xxl_22": {
              "type": "number"
            },
            "t5xxl_23": {
              "type": "number"
            }
          },
          "required": [
            "clip",
            "apply_to_query",
            "apply_to_key",
            "apply_to_value",
            "apply_to_out",
            "t5xxl_0",
            "t5xxl_1",
            "t5xxl_2",
            "t5xxl_3",
            "t5xxl_4",
            "t5xxl_5",
            "t5xxl_6",
            "t5xxl_7",
            "t5xxl_8",
            "t5xxl_9",
            "t5xxl_10",
            "t5xxl_11",
            "t5xxl_12",
            "t5xxl_13",
            "t5xxl_14",
            "t5xxl_15",
            "t5xxl_16",
            "t5xxl_17",
            "t5xxl_18",
            "t5xxl_19",
            "t5xxl_20",
            "t5xxl_21",
            "t5xxl_22",
            "t5xxl_23"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/conditioning"
    },
    "FluxBlocksBuster+": {
      "title": "FluxBlocksBuster",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, blocks",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "blocks": {
              "type": "string"
            }
          },
          "required": ["model", "blocks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, STRING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials/conditioning"
    },
    "ImageEnhanceDifference+": {
      "title": "ImageEnhanceDifference",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, exponent",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "exponent": {
              "type": "number"
            }
          },
          "required": ["image1", "image2", "exponent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image analysis"
    },
    "ImageBatchMultiple+": {
      "title": "ImageBatchMultiple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_1, method",
          "properties": {
            "image_1": {
              "type": "IMAGE"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["image_1", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image batch"
    },
    "ImageExpandBatch+": {
      "title": "ImageExpandBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, size, method",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "size": {
              "type": "number"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["image", "size", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image batch"
    },
    "ImageFromBatch+": {
      "title": "ImageFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, start, length",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "start": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["image", "start", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image batch"
    },
    "ImageListToBatch+": {
      "title": "ImageListToBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image batch"
    },
    "ImageBatchToList+": {
      "title": "ImageBatchToList",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image batch"
    },
    "ImageCompositeFromMaskBatch+": {
      "title": "ImageCompositeFromMaskBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_from, image_to, mask",
          "properties": {
            "image_from": {
              "type": "IMAGE"
            },
            "image_to": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["image_from", "image_to", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageComposite+": {
      "title": "ImageComposite",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: destination, source, x, y, offset_x, offset_y",
          "properties": {
            "destination": {
              "type": "IMAGE"
            },
            "source": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "offset_x": {
              "type": "number"
            },
            "offset_y": {
              "type": "number"
            }
          },
          "required": [
            "destination",
            "source",
            "x",
            "y",
            "offset_x",
            "offset_y"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageCrop+": {
      "title": "ImageCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, position, x_offset, y_offset",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "position": {
              "type": "string"
            },
            "x_offset": {
              "type": "number"
            },
            "y_offset": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "width",
            "height",
            "position",
            "x_offset",
            "y_offset"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageFlip+": {
      "title": "ImageFlip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, axis",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "axis": {
              "type": "string"
            }
          },
          "required": ["image", "axis"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageRandomTransform+": {
      "title": "ImageRandomTransform",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, seed, repeat, variation",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "seed": {
              "type": "number"
            },
            "repeat": {
              "type": "number"
            },
            "variation": {
              "type": "number"
            }
          },
          "required": ["image", "seed", "repeat", "variation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageRemoveAlpha+": {
      "title": "ImageRemoveAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image utils"
    },
    "ImageRemoveBackground+": {
      "title": "ImageRemoveBackground",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: rembg_session, image",
          "properties": {
            "rembg_session": {
              "type": "REMBG_SESSION"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["rembg_session", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageResize+": {
      "title": "ImageResize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, interpolation, method, condition, multiple_of",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "interpolation": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "condition": {
              "type": "string"
            },
            "multiple_of": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "width",
            "height",
            "interpolation",
            "method",
            "condition",
            "multiple_of"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageSeamCarving+": {
      "title": "ImageSeamCarving",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, width, height, energy, order",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "energy": {
              "type": "string"
            },
            "order": {
              "type": "string"
            }
          },
          "required": ["image", "width", "height", "energy", "order"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageTile+": {
      "title": "ImageTile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, rows, cols, overlap, overlap_x, overlap_y",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "rows": {
              "type": "number"
            },
            "cols": {
              "type": "number"
            },
            "overlap": {
              "type": "number"
            },
            "overlap_x": {
              "type": "number"
            },
            "overlap_y": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "rows",
            "cols",
            "overlap",
            "overlap_x",
            "overlap_y"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageUntile+": {
      "title": "ImageUntile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: tiles, overlap_x, overlap_y, rows, cols",
          "properties": {
            "tiles": {
              "type": "IMAGE"
            },
            "overlap_x": {
              "type": "number"
            },
            "overlap_y": {
              "type": "number"
            },
            "rows": {
              "type": "number"
            },
            "cols": {
              "type": "number"
            }
          },
          "required": ["tiles", "overlap_x", "overlap_y", "rows", "cols"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image manipulation"
    },
    "RemBGSession+": {
      "title": "RemBGSession",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, providers",
          "properties": {
            "model": {
              "type": "string"
            },
            "providers": {
              "type": "string"
            }
          },
          "required": ["model", "providers"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: REMBG_SESSION",
          "items": [
            {
              "type": "REMBG_SESSION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image manipulation"
    },
    "TransparentBGSession+": {
      "title": "TransparentBGSession",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mode, use_jit",
          "properties": {
            "mode": {
              "type": "string"
            },
            "use_jit": {
              "type": "BOOLEAN"
            }
          },
          "required": ["mode", "use_jit"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: REMBG_SESSION",
          "items": [
            {
              "type": "REMBG_SESSION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image manipulation"
    },
    "ImageApplyLUT+": {
      "title": "ImageApplyLUT",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, lut_file, gamma_correction, clip_values, strength",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "lut_file": {
              "type": "string"
            },
            "gamma_correction": {
              "type": "BOOLEAN"
            },
            "clip_values": {
              "type": "BOOLEAN"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "lut_file",
            "gamma_correction",
            "clip_values",
            "strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "ImageCASharpening+": {
      "title": "ImageCAS",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, amount",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["image", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "ImageDesaturate+": {
      "title": "ImageDesaturate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, factor, method",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "factor": {
              "type": "number"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["image", "factor", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "PixelOEPixelize+": {
      "title": "PixelOEPixelize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, downscale_mode, target_size, patch_size, thickness, color_matching, upscale",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "downscale_mode": {
              "type": "string"
            },
            "target_size": {
              "type": "number"
            },
            "patch_size": {
              "type": "number"
            },
            "thickness": {
              "type": "number"
            },
            "color_matching": {
              "type": "BOOLEAN"
            },
            "upscale": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "downscale_mode",
            "target_size",
            "patch_size",
            "thickness",
            "color_matching",
            "upscale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "ImagePosterize+": {
      "title": "ImagePosterize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["image", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "ImageColorMatch+": {
      "title": "ImageColorMatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, reference, color_space, factor, device, batch_size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "reference": {
              "type": "IMAGE"
            },
            "color_space": {
              "type": "string"
            },
            "factor": {
              "type": "number"
            },
            "device": {
              "type": "string"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "reference",
            "color_space",
            "factor",
            "device",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "ImageColorMatchAdobe+": {
      "title": "ImageColorMatchAdobe",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, reference, color_space, luminance_factor, color_intensity_factor, fade_factor, neutralization_factor, device",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "reference": {
              "type": "IMAGE"
            },
            "color_space": {
              "type": "string"
            },
            "luminance_factor": {
              "type": "number"
            },
            "color_intensity_factor": {
              "type": "number"
            },
            "fade_factor": {
              "type": "number"
            },
            "neutralization_factor": {
              "type": "number"
            },
            "device": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "reference",
            "color_space",
            "luminance_factor",
            "color_intensity_factor",
            "fade_factor",
            "neutralization_factor",
            "device"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "ImageHistogramMatch+": {
      "title": "ImageHistogramMatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, reference, method, factor, device",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "reference": {
              "type": "IMAGE"
            },
            "method": {
              "type": "string"
            },
            "factor": {
              "type": "number"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["image", "reference", "method", "factor", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "ImageSmartSharpen+": {
      "title": "ImageSmartSharpen",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, noise_radius, preserve_edges, sharpen, ratio",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "noise_radius": {
              "type": "number"
            },
            "preserve_edges": {
              "type": "number"
            },
            "sharpen": {
              "type": "number"
            },
            "ratio": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "noise_radius",
            "preserve_edges",
            "sharpen",
            "ratio"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image processing"
    },
    "GetImageSize+": {
      "title": "GetImageSize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "essentials/image utils"
    },
    "ImageToDevice+": {
      "title": "ImageToDevice",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, device",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["image", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image utils"
    },
    "ImagePreviewFromLatent+": {
      "title": "ImagePreviewFromLatent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent, vae, tile_size",
          "properties": {
            "latent": {
              "type": "LATENT"
            },
            "vae": {
              "type": "VAE"
            },
            "tile_size": {
              "type": "number"
            }
          },
          "required": ["latent", "vae", "tile_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "essentials/image utils"
    },
    "NoiseFromImage+": {
      "title": "NoiseFromImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, noise_strenght, noise_size, color_noise, mask_strength, mask_scale_diff, mask_contrast, saturation, contrast, blur",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "noise_strenght": {
              "type": "number"
            },
            "noise_size": {
              "type": "number"
            },
            "color_noise": {
              "type": "number"
            },
            "mask_strength": {
              "type": "number"
            },
            "mask_scale_diff": {
              "type": "number"
            },
            "mask_contrast": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "noise_strenght",
            "noise_size",
            "color_noise",
            "mask_strength",
            "mask_scale_diff",
            "mask_contrast",
            "saturation",
            "contrast",
            "blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/image utils"
    },
    "MaskBlur+": {
      "title": "MaskBlur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, amount, device",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "amount": {
              "type": "number"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["mask", "amount", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask"
    },
    "MaskBoundingBox+": {
      "title": "MaskBoundingBox",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, padding, blur",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "padding": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": ["mask", "padding", "blur"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE, INT, INT, INT, INT",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "essentials/mask"
    },
    "MaskFix+": {
      "title": "MaskFix",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, erode_dilate, fill_holes, remove_isolated_pixels, smooth, blur",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "erode_dilate": {
              "type": "number"
            },
            "fill_holes": {
              "type": "number"
            },
            "remove_isolated_pixels": {
              "type": "number"
            },
            "smooth": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": [
            "mask",
            "erode_dilate",
            "fill_holes",
            "remove_isolated_pixels",
            "smooth",
            "blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask"
    },
    "MaskFlip+": {
      "title": "MaskFlip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, axis",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "axis": {
              "type": "string"
            }
          },
          "required": ["mask", "axis"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask"
    },
    "MaskFromColor+": {
      "title": "MaskFromColor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, red, green, blue, threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "red": {
              "type": "number"
            },
            "green": {
              "type": "number"
            },
            "blue": {
              "type": "number"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["image", "red", "green", "blue", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask"
    },
    "MaskFromList+": {
      "title": "MaskFromList",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": ["width", "height"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask"
    },
    "MaskFromRGBCMYBW+": {
      "title": "MaskFromRGBCMYBW",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, threshold_r, threshold_g, threshold_b",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "threshold_r": {
              "type": "number"
            },
            "threshold_g": {
              "type": "number"
            },
            "threshold_b": {
              "type": "number"
            }
          },
          "required": ["image", "threshold_r", "threshold_g", "threshold_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK, MASK, MASK, MASK, MASK, MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 8,
          "minItems": 8
        }
      },
      "$category": "essentials/mask"
    },
    "MaskFromSegmentation+": {
      "title": "MaskFromSegmentation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, segments, remove_isolated_pixels, remove_small_masks, fill_holes",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "segments": {
              "type": "number"
            },
            "remove_isolated_pixels": {
              "type": "number"
            },
            "remove_small_masks": {
              "type": "number"
            },
            "fill_holes": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "segments",
            "remove_isolated_pixels",
            "remove_small_masks",
            "fill_holes"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask"
    },
    "MaskPreview+": {
      "title": "MaskPreview",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        }
      },
      "$category": "essentials/mask"
    },
    "MaskSmooth+": {
      "title": "MaskSmooth",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, amount",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "amount": {
              "type": "number"
            }
          },
          "required": ["mask", "amount"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask"
    },
    "TransitionMask+": {
      "title": "TransitionMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, frames, start_frame, end_frame, transition_type, timing_function",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "frames": {
              "type": "number"
            },
            "start_frame": {
              "type": "number"
            },
            "end_frame": {
              "type": "number"
            },
            "transition_type": {
              "type": "string"
            },
            "timing_function": {
              "type": "string"
            }
          },
          "required": [
            "width",
            "height",
            "frames",
            "start_frame",
            "end_frame",
            "transition_type",
            "timing_function"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask"
    },
    "MaskBatch+": {
      "title": "MaskBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask1, mask2",
          "properties": {
            "mask1": {
              "type": "MASK"
            },
            "mask2": {
              "type": "MASK"
            }
          },
          "required": ["mask1", "mask2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask batch"
    },
    "MaskExpandBatch+": {
      "title": "MaskExpandBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, size, method",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "size": {
              "type": "number"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["mask", "size", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask batch"
    },
    "MaskFromBatch+": {
      "title": "MaskFromBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, start, length",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "start": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": ["mask", "start", "length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/mask batch"
    },
    "KSamplerVariationsStochastic+": {
      "title": "KSamplerVariationsStochastic",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latent_image, noise_seed, steps, cfg, sampler, scheduler, positive, negative, variation_seed, variation_strength, cfg_scale",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "variation_seed": {
              "type": "INT:seed"
            },
            "variation_strength": {
              "type": "number"
            },
            "cfg_scale": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "latent_image",
            "noise_seed",
            "steps",
            "cfg",
            "sampler",
            "scheduler",
            "positive",
            "negative",
            "variation_seed",
            "variation_strength",
            "cfg_scale"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "KSamplerVariationsWithNoise+": {
      "title": "KSamplerVariationsWithNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, latent_image, main_seed, steps, cfg, sampler_name, scheduler, positive, negative, variation_strength, variation_seed, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "main_seed": {
              "type": "INT:seed"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "variation_strength": {
              "type": "number"
            },
            "variation_seed": {
              "type": "INT:seed"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "latent_image",
            "main_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "variation_strength",
            "variation_seed",
            "denoise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "InjectLatentNoise+": {
      "title": "InjectLatentNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent, noise_seed, noise_strength, normalize",
          "properties": {
            "latent": {
              "type": "LATENT"
            },
            "noise_seed": {
              "type": "number"
            },
            "noise_strength": {
              "type": "number"
            },
            "normalize": {
              "type": "string"
            }
          },
          "required": ["latent", "noise_seed", "noise_strength", "normalize"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "FluxSamplerParams+": {
      "title": "FluxSamplerParams",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, conditioning, latent_image, seed, sampler, scheduler, steps, guidance, max_shift, base_shift, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "conditioning": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "seed": {
              "type": "string"
            },
            "sampler": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "steps": {
              "type": "string"
            },
            "guidance": {
              "type": "string"
            },
            "max_shift": {
              "type": "string"
            },
            "base_shift": {
              "type": "string"
            },
            "denoise": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "conditioning",
            "latent_image",
            "seed",
            "sampler",
            "scheduler",
            "steps",
            "guidance",
            "max_shift",
            "base_shift",
            "denoise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, SAMPLER_PARAMS",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "SAMPLER_PARAMS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials/sampling"
    },
    "GuidanceTimestepping+": {
      "title": "GuidanceTimestepping",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, value, start_at, end_at",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "value": {
              "type": "number"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            }
          },
          "required": ["model", "value", "start_at", "end_at"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "PlotParameters+": {
      "title": "PlotParameters",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, params, order_by, cols_value, cols_num, add_prompt, add_params",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "params": {
              "type": "SAMPLER_PARAMS"
            },
            "order_by": {
              "type": "string"
            },
            "cols_value": {
              "type": "string"
            },
            "cols_num": {
              "type": "number"
            },
            "add_prompt": {
              "type": "string"
            },
            "add_params": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "params",
            "order_by",
            "cols_value",
            "cols_num",
            "add_prompt",
            "add_params"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "TextEncodeForSamplerParams+": {
      "title": "TextEncodeForSamplerParams",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, clip",
          "properties": {
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "SamplerSelectHelper+": {
      "title": "SamplerSelectHelper",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: euler, euler_cfg_pp, euler_ancestral, euler_ancestral_cfg_pp, heun, heunpp2, dpm_2, dpm_2_ancestral, lms, dpm_fast, dpm_adaptive, dpmpp_2s_ancestral, dpmpp_2s_ancestral_cfg_pp, dpmpp_sde, dpmpp_sde_gpu, dpmpp_2m, dpmpp_2m_cfg_pp, dpmpp_2m_sde, dpmpp_2m_sde_gpu, dpmpp_2m_sde_heun, dpmpp_2m_sde_heun_gpu, dpmpp_3m_sde, dpmpp_3m_sde_gpu, ddpm, lcm, ipndm, ipndm_v, deis, res_multistep, res_multistep_cfg_pp, res_multistep_ancestral, res_multistep_ancestral_cfg_pp, gradient_estimation, gradient_estimation_cfg_pp, er_sde, seeds_2, seeds_3, sa_solver, sa_solver_pece, ddim, uni_pc, uni_pc_bh2",
          "properties": {
            "euler": {
              "type": "BOOLEAN"
            },
            "euler_cfg_pp": {
              "type": "BOOLEAN"
            },
            "euler_ancestral": {
              "type": "BOOLEAN"
            },
            "euler_ancestral_cfg_pp": {
              "type": "BOOLEAN"
            },
            "heun": {
              "type": "BOOLEAN"
            },
            "heunpp2": {
              "type": "BOOLEAN"
            },
            "dpm_2": {
              "type": "BOOLEAN"
            },
            "dpm_2_ancestral": {
              "type": "BOOLEAN"
            },
            "lms": {
              "type": "BOOLEAN"
            },
            "dpm_fast": {
              "type": "BOOLEAN"
            },
            "dpm_adaptive": {
              "type": "BOOLEAN"
            },
            "dpmpp_2s_ancestral": {
              "type": "BOOLEAN"
            },
            "dpmpp_2s_ancestral_cfg_pp": {
              "type": "BOOLEAN"
            },
            "dpmpp_sde": {
              "type": "BOOLEAN"
            },
            "dpmpp_sde_gpu": {
              "type": "BOOLEAN"
            },
            "dpmpp_2m": {
              "type": "BOOLEAN"
            },
            "dpmpp_2m_cfg_pp": {
              "type": "BOOLEAN"
            },
            "dpmpp_2m_sde": {
              "type": "BOOLEAN"
            },
            "dpmpp_2m_sde_gpu": {
              "type": "BOOLEAN"
            },
            "dpmpp_2m_sde_heun": {
              "type": "BOOLEAN"
            },
            "dpmpp_2m_sde_heun_gpu": {
              "type": "BOOLEAN"
            },
            "dpmpp_3m_sde": {
              "type": "BOOLEAN"
            },
            "dpmpp_3m_sde_gpu": {
              "type": "BOOLEAN"
            },
            "ddpm": {
              "type": "BOOLEAN"
            },
            "lcm": {
              "type": "BOOLEAN"
            },
            "ipndm": {
              "type": "BOOLEAN"
            },
            "ipndm_v": {
              "type": "BOOLEAN"
            },
            "deis": {
              "type": "BOOLEAN"
            },
            "res_multistep": {
              "type": "BOOLEAN"
            },
            "res_multistep_cfg_pp": {
              "type": "BOOLEAN"
            },
            "res_multistep_ancestral": {
              "type": "BOOLEAN"
            },
            "res_multistep_ancestral_cfg_pp": {
              "type": "BOOLEAN"
            },
            "gradient_estimation": {
              "type": "BOOLEAN"
            },
            "gradient_estimation_cfg_pp": {
              "type": "BOOLEAN"
            },
            "er_sde": {
              "type": "BOOLEAN"
            },
            "seeds_2": {
              "type": "BOOLEAN"
            },
            "seeds_3": {
              "type": "BOOLEAN"
            },
            "sa_solver": {
              "type": "BOOLEAN"
            },
            "sa_solver_pece": {
              "type": "BOOLEAN"
            },
            "ddim": {
              "type": "BOOLEAN"
            },
            "uni_pc": {
              "type": "BOOLEAN"
            },
            "uni_pc_bh2": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "euler",
            "euler_cfg_pp",
            "euler_ancestral",
            "euler_ancestral_cfg_pp",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_2s_ancestral_cfg_pp",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_cfg_pp",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_2m_sde_heun",
            "dpmpp_2m_sde_heun_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ipndm",
            "ipndm_v",
            "deis",
            "res_multistep",
            "res_multistep_cfg_pp",
            "res_multistep_ancestral",
            "res_multistep_ancestral_cfg_pp",
            "gradient_estimation",
            "gradient_estimation_cfg_pp",
            "er_sde",
            "seeds_2",
            "seeds_3",
            "sa_solver",
            "sa_solver_pece",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "SchedulerSelectHelper+": {
      "title": "SchedulerSelectHelper",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: simple, sgm_uniform, karras, exponential, ddim_uniform, beta, normal, linear_quadratic, kl_optimal",
          "properties": {
            "simple": {
              "type": "BOOLEAN"
            },
            "sgm_uniform": {
              "type": "BOOLEAN"
            },
            "karras": {
              "type": "BOOLEAN"
            },
            "exponential": {
              "type": "BOOLEAN"
            },
            "ddim_uniform": {
              "type": "BOOLEAN"
            },
            "beta": {
              "type": "BOOLEAN"
            },
            "normal": {
              "type": "BOOLEAN"
            },
            "linear_quadratic": {
              "type": "BOOLEAN"
            },
            "kl_optimal": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "simple",
            "sgm_uniform",
            "karras",
            "exponential",
            "ddim_uniform",
            "beta",
            "normal",
            "linear_quadratic",
            "kl_optimal"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "LorasForFluxParams+": {
      "title": "LorasForFluxParams",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora_1, strength_model_1",
          "properties": {
            "lora_1": {
              "type": "string"
            },
            "strength_model_1": {
              "type": "string"
            }
          },
          "required": ["lora_1", "strength_model_1"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_PARAMS",
          "items": [
            {
              "type": "LORA_PARAMS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "ModelSamplingSD3Advanced+": {
      "title": "ModelSamplingSD3Advanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shift, cut_off, shift_multiplier",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "shift": {
              "type": "number"
            },
            "cut_off": {
              "type": "number"
            },
            "shift_multiplier": {
              "type": "number"
            }
          },
          "required": ["model", "shift", "cut_off", "shift_multiplier"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/sampling"
    },
    "ApplyCLIPSeg+": {
      "title": "ApplyCLIPSeg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_seg, image, prompt, threshold, smooth, dilate, blur",
          "properties": {
            "clip_seg": {
              "type": "CLIP_SEG"
            },
            "image": {
              "type": "IMAGE"
            },
            "prompt": {
              "type": "string"
            },
            "threshold": {
              "type": "number"
            },
            "smooth": {
              "type": "number"
            },
            "dilate": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": [
            "clip_seg",
            "image",
            "prompt",
            "threshold",
            "smooth",
            "dilate",
            "blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/segmentation"
    },
    "LoadCLIPSegModels+": {
      "title": "LoadCLIPSegModels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP_SEG",
          "items": [
            {
              "type": "CLIP_SEG"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/segmentation"
    },
    "DrawText+": {
      "title": "DrawText",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, font, size, color, background_color, shadow_distance, shadow_blur, shadow_color, horizontal_align, vertical_align, offset_x, offset_y, direction",
          "properties": {
            "text": {
              "type": "string"
            },
            "font": {
              "type": "string"
            },
            "size": {
              "type": "number"
            },
            "color": {
              "type": "string"
            },
            "background_color": {
              "type": "string"
            },
            "shadow_distance": {
              "type": "number"
            },
            "shadow_blur": {
              "type": "number"
            },
            "shadow_color": {
              "type": "string"
            },
            "horizontal_align": {
              "type": "string"
            },
            "vertical_align": {
              "type": "string"
            },
            "offset_x": {
              "type": "number"
            },
            "offset_y": {
              "type": "number"
            },
            "direction": {
              "type": "string"
            }
          },
          "required": [
            "text",
            "font",
            "size",
            "color",
            "background_color",
            "shadow_distance",
            "shadow_blur",
            "shadow_color",
            "horizontal_align",
            "vertical_align",
            "offset_x",
            "offset_y",
            "direction"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials/text"
    },
    "BatchCount+": {
      "title": "BatchCount",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch",
          "properties": {
            "batch": {
              "type": "string"
            }
          },
          "required": ["batch"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "ConsoleDebug+": {
      "title": "ConsoleDebug",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": ["value"]
        }
      },
      "$category": "essentials/utilities"
    },
    "DebugTensorShape+": {
      "title": "DebugTensorShape",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: tensor",
          "properties": {
            "tensor": {
              "type": "string"
            }
          },
          "required": ["tensor"]
        }
      },
      "$category": "essentials/utilities"
    },
    "DisplayAny": {
      "title": "DisplayAny",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input, mode",
          "properties": {
            "input": {
              "type": "*"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["input", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "ModelCompile+": {
      "title": "ModelCompile",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, fullgraph, dynamic, mode",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "fullgraph": {
              "type": "BOOLEAN"
            },
            "dynamic": {
              "type": "BOOLEAN"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["model", "fullgraph", "dynamic", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "RemoveLatentMask+": {
      "title": "RemoveLatentMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples",
          "properties": {
            "samples": {
              "type": "LATENT"
            }
          },
          "required": ["samples"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "SDXLEmptyLatentSizePicker+": {
      "title": "SDXLEmptyLatentSizePicker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: resolution, batch_size, width_override, height_override",
          "properties": {
            "resolution": {
              "type": "string"
            },
            "batch_size": {
              "type": "number"
            },
            "width_override": {
              "type": "number"
            },
            "height_override": {
              "type": "number"
            }
          },
          "required": [
            "resolution",
            "batch_size",
            "width_override",
            "height_override"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, INT, INT",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleComparison+": {
      "title": "SimpleComparison",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: a, b, comparison",
          "properties": {
            "a": {
              "type": "string"
            },
            "b": {
              "type": "string"
            },
            "comparison": {
              "type": "string"
            }
          },
          "required": ["a", "b", "comparison"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleCondition+": {
      "title": "SimpleCondition",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: evaluate, on_true",
          "properties": {
            "evaluate": {
              "type": "string"
            },
            "on_true": {
              "type": "string"
            }
          },
          "required": ["evaluate", "on_true"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: *",
          "items": [
            {
              "type": "*"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMath+": {
      "title": "SimpleMath",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMathDual+": {
      "title": "SimpleMathDual",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value_1, value_2",
          "properties": {
            "value_1": {
              "type": "string"
            },
            "value_2": {
              "type": "string"
            }
          },
          "required": ["value_1", "value_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, INT, FLOAT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMathCondition+": {
      "title": "SimpleMathCondition",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: evaluate, on_true, on_false",
          "properties": {
            "evaluate": {
              "type": "string"
            },
            "on_true": {
              "type": "string"
            },
            "on_false": {
              "type": "string"
            }
          },
          "required": ["evaluate", "on_true", "on_false"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMathBoolean+": {
      "title": "SimpleMathBoolean",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "BOOLEAN"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMathFloat+": {
      "title": "SimpleMathFloat",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMathInt+": {
      "title": "SimpleMathInt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMathPercent+": {
      "title": "SimpleMathPercent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value",
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "required": ["value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMathSlider+": {
      "title": "SimpleMathSlider",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value, min, max, rounding",
          "properties": {
            "value": {
              "type": "number"
            },
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            },
            "rounding": {
              "type": "number"
            }
          },
          "required": ["value", "min", "max", "rounding"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, INT",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials/utilities"
    },
    "SimpleMathSliderLowRes+": {
      "title": "SimpleMathSliderLowRes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value, min, max, rounding",
          "properties": {
            "value": {
              "type": "number"
            },
            "min": {
              "type": "number"
            },
            "max": {
              "type": "number"
            },
            "rounding": {
              "type": "number"
            }
          },
          "required": ["value", "min", "max", "rounding"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, INT",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "essentials/utilities"
    },
    "FaceEmbedDistance": {
      "title": "FaceEmbedDistance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: analysis_models, reference, image, similarity_metric, filter_thresh, filter_best, generate_image_overlay",
          "properties": {
            "analysis_models": {
              "type": "ANALYSIS_MODELS"
            },
            "reference": {
              "type": "IMAGE"
            },
            "image": {
              "type": "IMAGE"
            },
            "similarity_metric": {
              "type": "string"
            },
            "filter_thresh": {
              "type": "number"
            },
            "filter_best": {
              "type": "number"
            },
            "generate_image_overlay": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "analysis_models",
            "reference",
            "image",
            "similarity_metric",
            "filter_thresh",
            "filter_best",
            "generate_image_overlay"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, FLOAT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "FaceAnalysis"
    },
    "FaceAnalysisModels": {
      "title": "FaceAnalysisModels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: library, provider",
          "properties": {
            "library": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            }
          },
          "required": ["library", "provider"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: ANALYSIS_MODELS",
          "items": [
            {
              "type": "ANALYSIS_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "FaceAnalysis"
    },
    "FaceBoundingBox": {
      "title": "FaceBoundingBox",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: analysis_models, image, padding, padding_percent, index",
          "properties": {
            "analysis_models": {
              "type": "ANALYSIS_MODELS"
            },
            "image": {
              "type": "IMAGE"
            },
            "padding": {
              "type": "number"
            },
            "padding_percent": {
              "type": "number"
            },
            "index": {
              "type": "number"
            }
          },
          "required": [
            "analysis_models",
            "image",
            "padding",
            "padding_percent",
            "index"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, INT, INT, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "FaceAnalysis"
    },
    "FaceAlign": {
      "title": "FaceAlign",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: analysis_models, image_from",
          "properties": {
            "analysis_models": {
              "type": "ANALYSIS_MODELS"
            },
            "image_from": {
              "type": "IMAGE"
            }
          },
          "required": ["analysis_models", "image_from"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "FaceAnalysis"
    },
    "FaceSegmentation": {
      "title": "faceSegmentation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: analysis_models, image, area, grow, grow_tapered, blur",
          "properties": {
            "analysis_models": {
              "type": "ANALYSIS_MODELS"
            },
            "image": {
              "type": "IMAGE"
            },
            "area": {
              "type": "string"
            },
            "grow": {
              "type": "number"
            },
            "grow_tapered": {
              "type": "BOOLEAN"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": [
            "analysis_models",
            "image",
            "area",
            "grow",
            "grow_tapered",
            "blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE, MASK, IMAGE, INT, INT, INT, INT",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 8,
          "minItems": 8
        }
      },
      "$category": "FaceAnalysis"
    },
    "FaceWarp": {
      "title": "FaceWarp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: analysis_models, image_from, image_to, keypoints, grow, blur",
          "properties": {
            "analysis_models": {
              "type": "ANALYSIS_MODELS"
            },
            "image_from": {
              "type": "IMAGE"
            },
            "image_to": {
              "type": "IMAGE"
            },
            "keypoints": {
              "type": "string"
            },
            "grow": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": [
            "analysis_models",
            "image_from",
            "image_to",
            "keypoints",
            "grow",
            "blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "FaceAnalysis"
    },
    "IPAdapter": {
      "title": "IPAdapterSimple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image, weight, start_at, end_at, weight_type",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image",
            "weight",
            "start_at",
            "end_at",
            "weight_type"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter"
    },
    "IPAdapterAdvanced": {
      "title": "IPAdapterAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image, weight, weight_type, combine_embeds, start_at, end_at, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "combine_embeds": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image",
            "weight",
            "weight_type",
            "combine_embeds",
            "start_at",
            "end_at",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter"
    },
    "IPAdapterBatch": {
      "title": "IPAdapterBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image, weight, weight_type, start_at, end_at, embeds_scaling, encode_batch_size",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            },
            "encode_batch_size": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image",
            "weight",
            "weight_type",
            "start_at",
            "end_at",
            "embeds_scaling",
            "encode_batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter"
    },
    "IPAdapterFaceID": {
      "title": "IPAdapterFaceID",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image, weight, weight_faceidv2, weight_type, combine_embeds, start_at, end_at, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "weight_faceidv2": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "combine_embeds": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image",
            "weight",
            "weight_faceidv2",
            "weight_type",
            "combine_embeds",
            "start_at",
            "end_at",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, IMAGE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ipadapter/faceid"
    },
    "IPAAdapterFaceIDBatch": {
      "title": "IPAAdapterFaceIDBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image, weight, weight_faceidv2, weight_type, combine_embeds, start_at, end_at, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "weight_faceidv2": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "combine_embeds": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image",
            "weight",
            "weight_faceidv2",
            "weight_type",
            "combine_embeds",
            "start_at",
            "end_at",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, IMAGE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ipadapter/faceid"
    },
    "IPAdapterTiled": {
      "title": "IPAdapterTiled",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image, weight, weight_type, combine_embeds, start_at, end_at, sharpening, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "combine_embeds": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "sharpening": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image",
            "weight",
            "weight_type",
            "combine_embeds",
            "start_at",
            "end_at",
            "sharpening",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, IMAGE, MASK",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "ipadapter/tiled"
    },
    "IPAdapterTiledBatch": {
      "title": "IPAdapterTiledBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image, weight, weight_type, start_at, end_at, sharpening, embeds_scaling, encode_batch_size",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "sharpening": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            },
            "encode_batch_size": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image",
            "weight",
            "weight_type",
            "start_at",
            "end_at",
            "sharpening",
            "embeds_scaling",
            "encode_batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, IMAGE, MASK",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "ipadapter/tiled"
    },
    "IPAdapterEmbeds": {
      "title": "IPAdapterEmbeds",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, pos_embed, weight, weight_type, start_at, end_at, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "pos_embed": {
              "type": "EMBEDS"
            },
            "weight": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "pos_embed",
            "weight",
            "weight_type",
            "start_at",
            "end_at",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/embeds"
    },
    "IPAdapterEmbedsBatch": {
      "title": "IPAdapterEmbedsBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, pos_embed, weight, weight_type, start_at, end_at, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "pos_embed": {
              "type": "EMBEDS"
            },
            "weight": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "pos_embed",
            "weight",
            "weight_type",
            "start_at",
            "end_at",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/embeds"
    },
    "IPAdapterStyleComposition": {
      "title": "IPAdapterStyleComposition",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image_style, image_composition, weight_style, weight_composition, expand_style, combine_embeds, start_at, end_at, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image_style": {
              "type": "IMAGE"
            },
            "image_composition": {
              "type": "IMAGE"
            },
            "weight_style": {
              "type": "number"
            },
            "weight_composition": {
              "type": "number"
            },
            "expand_style": {
              "type": "BOOLEAN"
            },
            "combine_embeds": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image_style",
            "image_composition",
            "weight_style",
            "weight_composition",
            "expand_style",
            "combine_embeds",
            "start_at",
            "end_at",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/style_composition"
    },
    "IPAdapterStyleCompositionBatch": {
      "title": "IPAdapterStyleCompositionBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image_style, image_composition, weight_style, weight_composition, expand_style, start_at, end_at, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image_style": {
              "type": "IMAGE"
            },
            "image_composition": {
              "type": "IMAGE"
            },
            "weight_style": {
              "type": "number"
            },
            "weight_composition": {
              "type": "number"
            },
            "expand_style": {
              "type": "BOOLEAN"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image_style",
            "image_composition",
            "weight_style",
            "weight_composition",
            "expand_style",
            "start_at",
            "end_at",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/style_composition"
    },
    "IPAdapterMS": {
      "title": "IPAdapterMS",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, image, weight, weight_faceidv2, weight_type, combine_embeds, start_at, end_at, embeds_scaling, layer_weights",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            },
            "weight_faceidv2": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "combine_embeds": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            },
            "embeds_scaling": {
              "type": "string"
            },
            "layer_weights": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "image",
            "weight",
            "weight_faceidv2",
            "weight_type",
            "combine_embeds",
            "start_at",
            "end_at",
            "embeds_scaling",
            "layer_weights"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/dev"
    },
    "IPAdapterFromParams": {
      "title": "IPAdapterFromParams",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, ipadapter, ipadapter_params, combine_embeds, embeds_scaling",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "ipadapter_params": {
              "type": "IPADAPTER_PARAMS"
            },
            "combine_embeds": {
              "type": "string"
            },
            "embeds_scaling": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "ipadapter",
            "ipadapter_params",
            "combine_embeds",
            "embeds_scaling"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/params"
    },
    "IPAdapterUnifiedLoader": {
      "title": "IPAdapterUnifiedLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, preset",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "preset": {
              "type": "string"
            }
          },
          "required": ["model", "preset"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, IPADAPTER",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "IPADAPTER"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ipadapter"
    },
    "IPAdapterUnifiedLoaderFaceID": {
      "title": "IPAdapterUnifiedLoaderFaceID",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, preset, lora_strength, provider",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "preset": {
              "type": "string"
            },
            "lora_strength": {
              "type": "number"
            },
            "provider": {
              "type": "string"
            }
          },
          "required": ["model", "preset", "lora_strength", "provider"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, IPADAPTER",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "IPADAPTER"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ipadapter/faceid"
    },
    "IPAdapterModelLoader": {
      "title": "IPAdapterModelLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ipadapter_file",
          "properties": {
            "ipadapter_file": {
              "type": "string"
            }
          },
          "required": ["ipadapter_file"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IPADAPTER",
          "items": [
            {
              "type": "IPADAPTER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/loaders"
    },
    "IPAdapterInsightFaceLoader": {
      "title": "IPAdapterInsightFaceLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: provider",
          "properties": {
            "provider": {
              "type": "string"
            }
          },
          "required": ["provider"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INSIGHTFACE",
          "items": [
            {
              "type": "INSIGHTFACE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/loaders"
    },
    "IPAdapterUnifiedLoaderCommunity": {
      "title": "IPAdapterUnifiedLoaderCommunity",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, preset",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "preset": {
              "type": "string"
            }
          },
          "required": ["model", "preset"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, IPADAPTER",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "IPADAPTER"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ipadapter/loaders"
    },
    "IPAdapterEncoder": {
      "title": "IPAdapterEncoder",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ipadapter, image, weight",
          "properties": {
            "ipadapter": {
              "type": "IPADAPTER"
            },
            "image": {
              "type": "IMAGE"
            },
            "weight": {
              "type": "number"
            }
          },
          "required": ["ipadapter", "image", "weight"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: EMBEDS, EMBEDS",
          "items": [
            {
              "type": "EMBEDS"
            },
            {
              "type": "EMBEDS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ipadapter/embeds"
    },
    "IPAdapterCombineEmbeds": {
      "title": "IPAdapterCombineEmbeds",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: embed1, method",
          "properties": {
            "embed1": {
              "type": "EMBEDS"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["embed1", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: EMBEDS",
          "items": [
            {
              "type": "EMBEDS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/embeds"
    },
    "IPAdapterNoise": {
      "title": "IPAdapterNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: type, strength, blur",
          "properties": {
            "type": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": ["type", "strength", "blur"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/utils"
    },
    "PrepImageForClipVision": {
      "title": "PrepImageForClipVision",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, interpolation, crop_position, sharpening",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "interpolation": {
              "type": "string"
            },
            "crop_position": {
              "type": "string"
            },
            "sharpening": {
              "type": "number"
            }
          },
          "required": ["image", "interpolation", "crop_position", "sharpening"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/utils"
    },
    "IPAdapterSaveEmbeds": {
      "title": "IPAdapterSaveEmbeds",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: embeds, filename_prefix",
          "properties": {
            "embeds": {
              "type": "EMBEDS"
            },
            "filename_prefix": {
              "type": "string"
            }
          },
          "required": ["embeds", "filename_prefix"]
        }
      },
      "$category": "ipadapter/embeds"
    },
    "IPAdapterLoadEmbeds": {
      "title": "IPAdapterLoadEmbeds",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: embeds",
          "properties": {
            "embeds": {
              "type": "string"
            }
          },
          "required": ["embeds"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: EMBEDS",
          "items": [
            {
              "type": "EMBEDS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/embeds"
    },
    "IPAdapterWeights": {
      "title": "IPAdapterWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weights, timing, frames, start_frame, end_frame, add_starting_frames, add_ending_frames, method",
          "properties": {
            "weights": {
              "type": "string"
            },
            "timing": {
              "type": "string"
            },
            "frames": {
              "type": "number"
            },
            "start_frame": {
              "type": "number"
            },
            "end_frame": {
              "type": "number"
            },
            "add_starting_frames": {
              "type": "number"
            },
            "add_ending_frames": {
              "type": "number"
            },
            "method": {
              "type": "string"
            }
          },
          "required": [
            "weights",
            "timing",
            "frames",
            "start_frame",
            "end_frame",
            "add_starting_frames",
            "add_ending_frames",
            "method"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, FLOAT, INT, IMAGE, IMAGE, WEIGHTS_STRATEGY",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "WEIGHTS_STRATEGY"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "ipadapter/weights"
    },
    "IPAdapterCombineWeights": {
      "title": "IPAdapterCombineWeights",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weights_1, weights_2",
          "properties": {
            "weights_1": {
              "type": "number"
            },
            "weights_2": {
              "type": "number"
            }
          },
          "required": ["weights_1", "weights_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, INT",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "ipadapter/utils"
    },
    "IPAdapterWeightsFromStrategy": {
      "title": "IPAdapterWeightsFromStrategy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weights_strategy",
          "properties": {
            "weights_strategy": {
              "type": "WEIGHTS_STRATEGY"
            }
          },
          "required": ["weights_strategy"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, FLOAT, INT, IMAGE, IMAGE, WEIGHTS_STRATEGY",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "WEIGHTS_STRATEGY"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "ipadapter/weights"
    },
    "IPAdapterPromptScheduleFromWeightsStrategy": {
      "title": "IPAdapterPromptScheduleFromWeightsStrategy",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: weights_strategy, prompt",
          "properties": {
            "weights_strategy": {
              "type": "WEIGHTS_STRATEGY"
            },
            "prompt": {
              "type": "string"
            }
          },
          "required": ["weights_strategy", "prompt"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/weights"
    },
    "IPAdapterRegionalConditioning": {
      "title": "IPAdapterRegionalConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, image_weight, prompt_weight, weight_type, start_at, end_at",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "image_weight": {
              "type": "number"
            },
            "prompt_weight": {
              "type": "number"
            },
            "weight_type": {
              "type": "string"
            },
            "start_at": {
              "type": "number"
            },
            "end_at": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "image_weight",
            "prompt_weight",
            "weight_type",
            "start_at",
            "end_at"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IPADAPTER_PARAMS, CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "IPADAPTER_PARAMS"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "ipadapter/params"
    },
    "IPAdapterCombineParams": {
      "title": "IPAdapterCombineParams",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: params_1, params_2",
          "properties": {
            "params_1": {
              "type": "IPADAPTER_PARAMS"
            },
            "params_2": {
              "type": "IPADAPTER_PARAMS"
            }
          },
          "required": ["params_1", "params_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IPADAPTER_PARAMS",
          "items": [
            {
              "type": "IPADAPTER_PARAMS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "ipadapter/params"
    },
    "LayerFilter: AddGrain": {
      "title": "AddGrain",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, grain_power, grain_scale, grain_sat",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "grain_power": {
              "type": "number"
            },
            "grain_scale": {
              "type": "number"
            },
            "grain_sat": {
              "type": "number"
            }
          },
          "required": ["image", "grain_power", "grain_scale", "grain_sat"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerUtility: BatchSelector": {
      "title": "BatchSelector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: select",
          "properties": {
            "select": {
              "type": "string"
            }
          },
          "required": ["select"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerMask: BenUltra": {
      "title": "LS_BenUltra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ben_model, image, detail_method, detail_erode, detail_dilate, black_point, white_point, max_megapixels, process_detail",
          "properties": {
            "ben_model": {
              "type": "BEN_MODEL"
            },
            "image": {
              "type": "IMAGE"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "max_megapixels": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "ben_model",
            "image",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "max_megapixels",
            "process_detail"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: LoadBenModel": {
      "title": "LS_LoadBenModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, device",
          "properties": {
            "model": {
              "type": "string"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["model", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BEN_MODEL",
          "items": [
            {
              "type": "BEN_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: BiRefNetUltra": {
      "title": "BiRefNetUltra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: BiRefNetUltraV2": {
      "title": "LS_BiRefNetUltraV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, birefnet_model, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "birefnet_model": {
              "type": "BIREFNET_MODEL"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "birefnet_model",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: LoadBiRefNetModel": {
      "title": "LS_LoadBiRefNetModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "string"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BIREFNET_MODEL",
          "items": [
            {
              "type": "BIREFNET_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: LoadBiRefNetModelV2": {
      "title": "LS_LoadBiRefNetModelV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: version",
          "properties": {
            "version": {
              "type": "string"
            }
          },
          "required": ["version"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BIREFNET_MODEL",
          "items": [
            {
              "type": "BIREFNET_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: BlendIf Mask": {
      "title": "BlendIfMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, invert_mask, blend_if, black_point, black_range, white_point, white_range",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_if": {
              "type": "string"
            },
            "black_point": {
              "type": "number"
            },
            "black_range": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "white_range": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "invert_mask",
            "blend_if",
            "black_point",
            "black_range",
            "white_point",
            "white_range"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerFilter: ChannelShake": {
      "title": "ChannelShake",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, distance, angle, mode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "distance": {
              "type": "number"
            },
            "angle": {
              "type": "number"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["image", "distance", "angle", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerUtility: CheckMask": {
      "title": "CheckMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, white_point, area_percent",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "white_point": {
              "type": "number"
            },
            "area_percent": {
              "type": "number"
            }
          },
          "required": ["mask", "white_point", "area_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: CheckMaskV2": {
      "title": "CheckMaskV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, method, white_point, area_percent",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "method": {
              "type": "string"
            },
            "white_point": {
              "type": "number"
            },
            "area_percent": {
              "type": "number"
            }
          },
          "required": ["mask", "method", "white_point", "area_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerColor: ColorAdapter": {
      "title": "ColorAdapter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, color_ref_image, opacity",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "color_ref_image": {
              "type": "IMAGE"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": ["image", "color_ref_image", "opacity"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: AutoAdjust": {
      "title": "AutoAdjust",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, strength, brightness, contrast, saturation, red, green, blue",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "brightness": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "red": {
              "type": "number"
            },
            "green": {
              "type": "number"
            },
            "blue": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "strength",
            "brightness",
            "contrast",
            "saturation",
            "red",
            "green",
            "blue"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: AutoAdjustV2": {
      "title": "AutoAdjustV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, strength, brightness, contrast, saturation, red, green, blue, mode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "brightness": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "red": {
              "type": "number"
            },
            "green": {
              "type": "number"
            },
            "blue": {
              "type": "number"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "strength",
            "brightness",
            "contrast",
            "saturation",
            "red",
            "green",
            "blue",
            "mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: AutoBrightness": {
      "title": "AutoBrightness",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, strength, saturation",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            }
          },
          "required": ["image", "strength", "saturation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: Brightness & Contrast": {
      "title": "ColorCorrectBrightnessAndContrast",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, brightness, contrast, saturation",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "brightness": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            }
          },
          "required": ["image", "brightness", "contrast", "saturation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: BrightnessContrastV2": {
      "title": "LS_ColorCorrect_Brightness_And_Contrast_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, brightness, contrast, saturation",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "brightness": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            }
          },
          "required": ["image", "brightness", "contrast", "saturation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: ColorBalance": {
      "title": "ColorBalance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, cyan_red, magenta_green, yellow_blue",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "cyan_red": {
              "type": "number"
            },
            "magenta_green": {
              "type": "number"
            },
            "yellow_blue": {
              "type": "number"
            }
          },
          "required": ["image", "cyan_red", "magenta_green", "yellow_blue"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: ColorTemperature": {
      "title": "ColorTemperature",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, temperature",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "temperature": {
              "type": "number"
            }
          },
          "required": ["image", "temperature"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: Exposure": {
      "title": "ColorCorrectExposure",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, exposure",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "exposure": {
              "type": "number"
            }
          },
          "required": ["image", "exposure"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: Gamma": {
      "title": "ColorCorrectGamma",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, gamma",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "gamma": {
              "type": "number"
            }
          },
          "required": ["image", "gamma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: HSV": {
      "title": "ColorCorrectHSV",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, H, S, V",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "H": {
              "type": "number"
            },
            "S": {
              "type": "number"
            },
            "V": {
              "type": "number"
            }
          },
          "required": ["image", "H", "S", "V"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: LAB": {
      "title": "ColorCorrectLAB",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, L, A, B",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "L": {
              "type": "number"
            },
            "A": {
              "type": "number"
            },
            "B": {
              "type": "number"
            }
          },
          "required": ["image", "L", "A", "B"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: Levels": {
      "title": "ColorCorrectLevels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel, black_point, white_point, gray_point, output_black_point, output_white_point",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "channel": {
              "type": "string"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "gray_point": {
              "type": "number"
            },
            "output_black_point": {
              "type": "number"
            },
            "output_white_point": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "channel",
            "black_point",
            "white_point",
            "gray_point",
            "output_black_point",
            "output_white_point"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: LUT Apply": {
      "title": "ColorCorrectLUTapply",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, LUT, color_space, strength",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "LUT": {
              "type": "string"
            },
            "color_space": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": ["image", "LUT", "color_space", "strength"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: RGB": {
      "title": "ColorCorrectRGB",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, R, G, B",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "R": {
              "type": "number"
            },
            "G": {
              "type": "number"
            },
            "B": {
              "type": "number"
            }
          },
          "required": ["image", "R", "G", "B"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: Color of Shadow & Highlight": {
      "title": "ColorCorrectShadowAndHighlight",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, shadow_brightness, shadow_saturation, shadow_hue, shadow_level_offset, shadow_range, highlight_brightness, highlight_saturation, highlight_hue, highlight_level_offset, highlight_range",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "shadow_brightness": {
              "type": "number"
            },
            "shadow_saturation": {
              "type": "number"
            },
            "shadow_hue": {
              "type": "number"
            },
            "shadow_level_offset": {
              "type": "number"
            },
            "shadow_range": {
              "type": "number"
            },
            "highlight_brightness": {
              "type": "number"
            },
            "highlight_saturation": {
              "type": "number"
            },
            "highlight_hue": {
              "type": "number"
            },
            "highlight_level_offset": {
              "type": "number"
            },
            "highlight_range": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "shadow_brightness",
            "shadow_saturation",
            "shadow_hue",
            "shadow_level_offset",
            "shadow_range",
            "highlight_brightness",
            "highlight_saturation",
            "highlight_hue",
            "highlight_level_offset",
            "highlight_range"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: ColorofShadowHighlightV2": {
      "title": "LS_ColorCorrectShadow_And_Highlight_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, shadow_brightness, shadow_saturation, shadow_hue, shadow_level_offset, shadow_range, highlight_brightness, highlight_saturation, highlight_hue, highlight_level_offset, highlight_range",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "shadow_brightness": {
              "type": "number"
            },
            "shadow_saturation": {
              "type": "number"
            },
            "shadow_hue": {
              "type": "number"
            },
            "shadow_level_offset": {
              "type": "number"
            },
            "shadow_range": {
              "type": "number"
            },
            "highlight_brightness": {
              "type": "number"
            },
            "highlight_saturation": {
              "type": "number"
            },
            "highlight_hue": {
              "type": "number"
            },
            "highlight_level_offset": {
              "type": "number"
            },
            "highlight_range": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "shadow_brightness",
            "shadow_saturation",
            "shadow_hue",
            "shadow_level_offset",
            "shadow_range",
            "highlight_brightness",
            "highlight_saturation",
            "highlight_hue",
            "highlight_level_offset",
            "highlight_range"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerColor: YUV": {
      "title": "ColorCorrectYUV",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, Y, U, V",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "Y": {
              "type": "number"
            },
            "U": {
              "type": "number"
            },
            "V": {
              "type": "number"
            }
          },
          "required": ["image", "Y", "U", "V"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerUtility: ColorImage": {
      "title": "ColorImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, color",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "color": {
              "type": "string"
            }
          },
          "required": ["width", "height", "color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ColorImage V2": {
      "title": "ColorImageV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: size, custom_width, custom_height, color",
          "properties": {
            "size": {
              "type": "string"
            },
            "custom_width": {
              "type": "number"
            },
            "custom_height": {
              "type": "number"
            },
            "color": {
              "type": "string"
            }
          },
          "required": ["size", "custom_width", "custom_height", "color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerFilter: ColorMap": {
      "title": "ColorMap",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, color_map, opacity",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "color_map": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": ["image", "color_map", "opacity"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerUtility: ColorName": {
      "title": "LS_ColorName",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: color, palette",
          "properties": {
            "color": {
              "type": "string"
            },
            "palette": {
              "type": "string"
            }
          },
          "required": ["color", "palette"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerColor"
    },
    "LayerStyle: ColorOverlay V2": {
      "title": "ColorOverlayV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: ColorOverlay": {
      "title": "ColorOverlay",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerUtility: ColorPicker": {
      "title": "ColorPicker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: color, mode",
          "properties": {
            "color": {
              "type": "COLOR"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["color", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: GrayValue": {
      "title": "ColorValuetoGrayValue",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: color_value",
          "properties": {
            "color_value": {
              "type": "string"
            }
          },
          "required": ["color_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: HSV Value": {
      "title": "ColorValuetoHSVValue",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: color_value",
          "properties": {
            "color_value": {
              "type": "string"
            }
          },
          "required": ["color_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: RGB Value": {
      "title": "ColorValuetoRGBValue",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: color_value",
          "properties": {
            "color_value": {
              "type": "string"
            }
          },
          "required": ["color_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerMask: CreateGradientMask": {
      "title": "CreateGradientMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, gradient_side, gradient_scale, gradient_offset, opacity",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "gradient_side": {
              "type": "string"
            },
            "gradient_scale": {
              "type": "number"
            },
            "gradient_offset": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": [
            "width",
            "height",
            "gradient_side",
            "gradient_scale",
            "gradient_offset",
            "opacity"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: CropBoxResolve": {
      "title": "CropBoxResolve",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: crop_box",
          "properties": {
            "crop_box": {
              "type": "BOX"
            }
          },
          "required": ["crop_box"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: CropByMask": {
      "title": "CropByMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask_for_crop, invert_mask, detect, top_reserve, bottom_reserve, left_reserve, right_reserve",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask_for_crop": {
              "type": "MASK"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "detect": {
              "type": "string"
            },
            "top_reserve": {
              "type": "number"
            },
            "bottom_reserve": {
              "type": "number"
            },
            "left_reserve": {
              "type": "number"
            },
            "right_reserve": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mask_for_crop",
            "invert_mask",
            "detect",
            "top_reserve",
            "bottom_reserve",
            "left_reserve",
            "right_reserve"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, BOX, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BOX"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: CropByMask V2": {
      "title": "CropByMaskV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, invert_mask, detect, top_reserve, bottom_reserve, left_reserve, right_reserve, round_to_multiple",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "detect": {
              "type": "string"
            },
            "top_reserve": {
              "type": "number"
            },
            "bottom_reserve": {
              "type": "number"
            },
            "left_reserve": {
              "type": "number"
            },
            "right_reserve": {
              "type": "number"
            },
            "round_to_multiple": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "mask",
            "invert_mask",
            "detect",
            "top_reserve",
            "bottom_reserve",
            "left_reserve",
            "right_reserve",
            "round_to_multiple"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, BOX, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BOX"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: QueueStop": {
      "title": "QueueStopNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: any, mode, stop",
          "properties": {
            "any": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "stop": {
              "type": "BOOLEAN"
            }
          },
          "required": ["any", "mode", "stop"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: *",
          "items": [
            {
              "type": "*"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerUtility: SwitchCase": {
      "title": "SwitchCaseNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: switch_condition, case_1, case_2, case_3, input_default",
          "properties": {
            "switch_condition": {
              "type": "string"
            },
            "case_1": {
              "type": "string"
            },
            "case_2": {
              "type": "string"
            },
            "case_3": {
              "type": "string"
            },
            "input_default": {
              "type": "string"
            }
          },
          "required": [
            "switch_condition",
            "case_1",
            "case_2",
            "case_3",
            "input_default"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: *",
          "items": [
            {
              "type": "*"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: If ": {
      "title": "IfExecute",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: if_condition, when_TRUE, when_FALSE",
          "properties": {
            "if_condition": {
              "type": "string"
            },
            "when_TRUE": {
              "type": "string"
            },
            "when_FALSE": {
              "type": "string"
            }
          },
          "required": ["if_condition", "when_TRUE", "when_FALSE"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: *",
          "items": [
            {
              "type": "*"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: StringCondition": {
      "title": "StringCondition",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, condition, sub_string",
          "properties": {
            "text": {
              "type": "string"
            },
            "condition": {
              "type": "string"
            },
            "sub_string": {
              "type": "string"
            }
          },
          "required": ["text", "condition", "sub_string"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN, STRING",
          "items": [
            {
              "type": "BOOLEAN"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: BooleanOperator": {
      "title": "BooleanOperator",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: a, b, operator",
          "properties": {
            "a": {
              "type": "string"
            },
            "b": {
              "type": "string"
            },
            "operator": {
              "type": "string"
            }
          },
          "required": ["a", "b", "operator"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: NumberCalculator": {
      "title": "NumberCalculator",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: a, b, operator",
          "properties": {
            "a": {
              "type": "string"
            },
            "b": {
              "type": "string"
            },
            "operator": {
              "type": "string"
            }
          },
          "required": ["a", "b", "operator"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: BooleanOperatorV2": {
      "title": "BooleanOperatorV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: a_value, b_value, operator",
          "properties": {
            "a_value": {
              "type": "string"
            },
            "b_value": {
              "type": "string"
            },
            "operator": {
              "type": "string"
            }
          },
          "required": ["a_value", "b_value", "operator"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN, STRING",
          "items": [
            {
              "type": "BOOLEAN"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: NumberCalculatorV2": {
      "title": "NumberCalculatorV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: a_value, b_value, operator",
          "properties": {
            "a_value": {
              "type": "string"
            },
            "b_value": {
              "type": "string"
            },
            "operator": {
              "type": "string"
            }
          },
          "required": ["a_value", "b_value", "operator"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, STRING",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: TextBox": {
      "title": "TextBoxNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: String": {
      "title": "StringNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string",
          "properties": {
            "string": {
              "type": "string"
            }
          },
          "required": ["string"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: Integer": {
      "title": "IntegerNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: int_value",
          "properties": {
            "int_value": {
              "type": "number"
            }
          },
          "required": ["int_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, STRING",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: Float": {
      "title": "FloatNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: float_value",
          "properties": {
            "float_value": {
              "type": "number"
            }
          },
          "required": ["float_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, STRING",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: Boolean": {
      "title": "BooleanNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: bool_value",
          "properties": {
            "bool_value": {
              "type": "BOOLEAN"
            }
          },
          "required": ["bool_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN, STRING",
          "items": [
            {
              "type": "BOOLEAN"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: Seed": {
      "title": "SeedNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: seed",
          "properties": {
            "seed": {
              "type": "number"
            }
          },
          "required": ["seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerStyle: DropShadow": {
      "title": "DropShadow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, distance_x, distance_y, grow, blur, shadow_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "distance_x": {
              "type": "number"
            },
            "distance_y": {
              "type": "number"
            },
            "grow": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "shadow_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "distance_x",
            "distance_y",
            "grow",
            "blur",
            "shadow_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: DropShadow V2": {
      "title": "DropShadowV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, distance_x, distance_y, grow, blur, shadow_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "distance_x": {
              "type": "number"
            },
            "distance_y": {
              "type": "number"
            },
            "grow": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "shadow_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "distance_x",
            "distance_y",
            "grow",
            "blur",
            "shadow_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerMask: EVFSAMUltra": {
      "title": "EVF_SAM_Ultra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, precision, load_in_bit, prompt, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "string"
            },
            "precision": {
              "type": "string"
            },
            "load_in_bit": {
              "type": "string"
            },
            "prompt": {
              "type": "string"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "model",
            "precision",
            "load_in_bit",
            "prompt",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: ExtendCanvas": {
      "title": "ExtendCanvas",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, invert_mask, top, bottom, left, right, color",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "top": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            },
            "left": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "color": {
              "type": "COLOR"
            }
          },
          "required": [
            "image",
            "invert_mask",
            "top",
            "bottom",
            "left",
            "right",
            "color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ExtendCanvasV2": {
      "title": "ExtendCanvasV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, invert_mask, top, bottom, left, right, color",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "top": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            },
            "left": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "color": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "invert_mask",
            "top",
            "bottom",
            "left",
            "right",
            "color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerFilter: Film": {
      "title": "Film",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, center_x, center_y, saturation, vignette_intensity, grain_power, grain_scale, grain_sat, grain_shadows, grain_highs, blur_strength, blur_focus_spread, focal_depth",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "center_x": {
              "type": "number"
            },
            "center_y": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "vignette_intensity": {
              "type": "number"
            },
            "grain_power": {
              "type": "number"
            },
            "grain_scale": {
              "type": "number"
            },
            "grain_sat": {
              "type": "number"
            },
            "grain_shadows": {
              "type": "number"
            },
            "grain_highs": {
              "type": "number"
            },
            "blur_strength": {
              "type": "number"
            },
            "blur_focus_spread": {
              "type": "number"
            },
            "focal_depth": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "center_x",
            "center_y",
            "saturation",
            "vignette_intensity",
            "grain_power",
            "grain_scale",
            "grain_sat",
            "grain_shadows",
            "grain_highs",
            "blur_strength",
            "blur_focus_spread",
            "focal_depth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerFilter: FilmV2": {
      "title": "FilmV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, center_x, center_y, saturation, vignette_intensity, grain_method, grain_power, grain_scale, grain_sat, filmgrainer_shadows, filmgrainer_highs, blur_strength, blur_focus_spread, focal_depth",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "center_x": {
              "type": "number"
            },
            "center_y": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "vignette_intensity": {
              "type": "number"
            },
            "grain_method": {
              "type": "string"
            },
            "grain_power": {
              "type": "number"
            },
            "grain_scale": {
              "type": "number"
            },
            "grain_sat": {
              "type": "number"
            },
            "filmgrainer_shadows": {
              "type": "number"
            },
            "filmgrainer_highs": {
              "type": "number"
            },
            "blur_strength": {
              "type": "number"
            },
            "blur_focus_spread": {
              "type": "number"
            },
            "focal_depth": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "center_x",
            "center_y",
            "saturation",
            "vignette_intensity",
            "grain_method",
            "grain_power",
            "grain_scale",
            "grain_sat",
            "filmgrainer_shadows",
            "filmgrainer_highs",
            "blur_strength",
            "blur_focus_spread",
            "focal_depth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerMask: Florence2Ultra": {
      "title": "Florence2Ultra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: florence2_model, image, task, text_input, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "florence2_model": {
              "type": "FLORENCE2"
            },
            "image": {
              "type": "IMAGE"
            },
            "task": {
              "type": "string"
            },
            "text_input": {
              "type": "string"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "florence2_model",
            "image",
            "task",
            "text_input",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: LoadFlorence2Model": {
      "title": "LS_LoadFlorence2Model",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: version",
          "properties": {
            "version": {
              "type": "string"
            }
          },
          "required": ["version"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLORENCE2",
          "items": [
            {
              "type": "FLORENCE2"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: Florence2Image2Prompt": {
      "title": "Florence2Image2Prompt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: florence2_model, image, task, text_input, max_new_tokens, num_beams, do_sample, fill_mask",
          "properties": {
            "florence2_model": {
              "type": "FLORENCE2"
            },
            "image": {
              "type": "IMAGE"
            },
            "task": {
              "type": "string"
            },
            "text_input": {
              "type": "string"
            },
            "max_new_tokens": {
              "type": "number"
            },
            "num_beams": {
              "type": "number"
            },
            "do_sample": {
              "type": "BOOLEAN"
            },
            "fill_mask": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "florence2_model",
            "image",
            "task",
            "text_input",
            "max_new_tokens",
            "num_beams",
            "do_sample",
            "fill_mask"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, IMAGE",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Prompt"
    },
    "LayerFilter: GaussianBlur": {
      "title": "GaussianBlur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, blur",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": ["image", "blur"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerFilter: GaussianBlurV2": {
      "title": "LS_GaussianBlurV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, blur",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": ["image", "blur"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerUtility: GetColorTone": {
      "title": "GetColorTone",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["image", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, LIST",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "LIST"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: GetColorToneV2": {
      "title": "GetColorToneV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mode, color_of, remove_bkgd_method, invert_mask, mask_grow",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "color_of": {
              "type": "string"
            },
            "remove_bkgd_method": {
              "type": "string"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "mask_grow": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mode",
            "color_of",
            "remove_bkgd_method",
            "invert_mask",
            "mask_grow"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, STRING, LIST, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            },
            {
              "type": "LIST"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: GetImageSize": {
      "title": "GetImageSize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, BOX",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "BOX"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: GetMainColors": {
      "title": "LS_GetMainColors",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, k_means_algorithm",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "k_means_algorithm": {
              "type": "string"
            }
          },
          "required": ["image", "k_means_algorithm"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, STRING, STRING, STRING, STRING, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: GradientImage": {
      "title": "GradientImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, angle, start_color, end_color",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "angle": {
              "type": "number"
            },
            "start_color": {
              "type": "string"
            },
            "end_color": {
              "type": "string"
            }
          },
          "required": ["width", "height", "angle", "start_color", "end_color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: GradientImage V2": {
      "title": "GradientImageV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: size, custom_width, custom_height, angle, start_color, end_color",
          "properties": {
            "size": {
              "type": "string"
            },
            "custom_width": {
              "type": "number"
            },
            "custom_height": {
              "type": "number"
            },
            "angle": {
              "type": "number"
            },
            "start_color": {
              "type": "string"
            },
            "end_color": {
              "type": "string"
            }
          },
          "required": [
            "size",
            "custom_width",
            "custom_height",
            "angle",
            "start_color",
            "end_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerStyle: Gradient Map": {
      "title": "GradientMap",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, start_color, mid_color, end_color, mid_point, opacity",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "start_color": {
              "type": "string"
            },
            "mid_color": {
              "type": "string"
            },
            "end_color": {
              "type": "string"
            },
            "mid_point": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "start_color",
            "mid_color",
            "end_color",
            "mid_point",
            "opacity"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: GradientOverlay": {
      "title": "GradientOverlay",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, start_color, start_alpha, end_color, end_alpha, angle",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "start_color": {
              "type": "string"
            },
            "start_alpha": {
              "type": "number"
            },
            "end_color": {
              "type": "string"
            },
            "end_alpha": {
              "type": "number"
            },
            "angle": {
              "type": "number"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "start_color",
            "start_alpha",
            "end_color",
            "end_alpha",
            "angle"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: GradientOverlay V2": {
      "title": "GradientOverlayV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, start_color, start_alpha, end_color, end_alpha, angle",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "start_color": {
              "type": "string"
            },
            "start_alpha": {
              "type": "number"
            },
            "end_color": {
              "type": "string"
            },
            "end_alpha": {
              "type": "number"
            },
            "angle": {
              "type": "number"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "start_color",
            "start_alpha",
            "end_color",
            "end_alpha",
            "angle"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerFilter: HDREffects": {
      "title": "LS_HDREffects",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, hdr_intensity, shadow_intensity, highlight_intensity, gamma_intensity, contrast, enhance_color",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "hdr_intensity": {
              "type": "number"
            },
            "shadow_intensity": {
              "type": "number"
            },
            "highlight_intensity": {
              "type": "number"
            },
            "gamma_intensity": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "enhance_color": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "hdr_intensity",
            "shadow_intensity",
            "highlight_intensity",
            "gamma_intensity",
            "contrast",
            "enhance_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerUtility: HLFrequencyDetailRestore": {
      "title": "HLFrequencyDetailRestore",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, detail_image, keep_high_freq, erase_low_freq, mask_blur",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "detail_image": {
              "type": "IMAGE"
            },
            "keep_high_freq": {
              "type": "number"
            },
            "erase_low_freq": {
              "type": "number"
            },
            "mask_blur": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "detail_image",
            "keep_high_freq",
            "erase_low_freq",
            "mask_blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerMask: HumanPartsUltra": {
      "title": "LS_HumanPartsUltra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, face, hair, glasses, top_clothes, bottom_clothes, torso_skin, left_arm, right_arm, left_leg, right_leg, left_foot, right_foot, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "face": {
              "type": "BOOLEAN"
            },
            "hair": {
              "type": "BOOLEAN"
            },
            "glasses": {
              "type": "BOOLEAN"
            },
            "top_clothes": {
              "type": "BOOLEAN"
            },
            "bottom_clothes": {
              "type": "BOOLEAN"
            },
            "torso_skin": {
              "type": "BOOLEAN"
            },
            "left_arm": {
              "type": "BOOLEAN"
            },
            "right_arm": {
              "type": "BOOLEAN"
            },
            "left_leg": {
              "type": "BOOLEAN"
            },
            "right_leg": {
              "type": "BOOLEAN"
            },
            "left_foot": {
              "type": "BOOLEAN"
            },
            "right_foot": {
              "type": "BOOLEAN"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "face",
            "hair",
            "glasses",
            "top_clothes",
            "bottom_clothes",
            "torso_skin",
            "left_arm",
            "right_arm",
            "left_leg",
            "right_leg",
            "left_foot",
            "right_foot",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: ImageAutoCrop": {
      "title": "ImageAutoCrop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, background_color, aspect_ratio, proportional_width, proportional_height, scale_to_longest_side, longest_side, detect, border_reserve, ultra_detail_range, matting_method, sam_model, grounding_dino_model, sam_threshold, sam_prompt",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "background_color": {
              "type": "string"
            },
            "aspect_ratio": {
              "type": "string"
            },
            "proportional_width": {
              "type": "number"
            },
            "proportional_height": {
              "type": "number"
            },
            "scale_to_longest_side": {
              "type": "BOOLEAN"
            },
            "longest_side": {
              "type": "number"
            },
            "detect": {
              "type": "string"
            },
            "border_reserve": {
              "type": "number"
            },
            "ultra_detail_range": {
              "type": "number"
            },
            "matting_method": {
              "type": "string"
            },
            "sam_model": {
              "type": "string"
            },
            "grounding_dino_model": {
              "type": "string"
            },
            "sam_threshold": {
              "type": "number"
            },
            "sam_prompt": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "background_color",
            "aspect_ratio",
            "proportional_width",
            "proportional_height",
            "scale_to_longest_side",
            "longest_side",
            "detect",
            "border_reserve",
            "ultra_detail_range",
            "matting_method",
            "sam_model",
            "grounding_dino_model",
            "sam_threshold",
            "sam_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageAutoCrop V2": {
      "title": "ImageAutoCropV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, fill_background, background_color, aspect_ratio, proportional_width, proportional_height, scale_to_side, scale_to_length, detect, border_reserve, ultra_detail_range, matting_method, sam_model, grounding_dino_model, sam_threshold, sam_prompt",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "fill_background": {
              "type": "BOOLEAN"
            },
            "background_color": {
              "type": "string"
            },
            "aspect_ratio": {
              "type": "string"
            },
            "proportional_width": {
              "type": "number"
            },
            "proportional_height": {
              "type": "number"
            },
            "scale_to_side": {
              "type": "string"
            },
            "scale_to_length": {
              "type": "number"
            },
            "detect": {
              "type": "string"
            },
            "border_reserve": {
              "type": "number"
            },
            "ultra_detail_range": {
              "type": "number"
            },
            "matting_method": {
              "type": "string"
            },
            "sam_model": {
              "type": "string"
            },
            "grounding_dino_model": {
              "type": "string"
            },
            "sam_threshold": {
              "type": "number"
            },
            "sam_prompt": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "fill_background",
            "background_color",
            "aspect_ratio",
            "proportional_width",
            "proportional_height",
            "scale_to_side",
            "scale_to_length",
            "detect",
            "border_reserve",
            "ultra_detail_range",
            "matting_method",
            "sam_model",
            "grounding_dino_model",
            "sam_threshold",
            "sam_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageAutoCrop V3": {
      "title": "ImageAutoCropV3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, aspect_ratio, proportional_width, proportional_height, method, scale_to_side, scale_to_length, round_to_multiple",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "aspect_ratio": {
              "type": "string"
            },
            "proportional_width": {
              "type": "number"
            },
            "proportional_height": {
              "type": "number"
            },
            "method": {
              "type": "string"
            },
            "scale_to_side": {
              "type": "string"
            },
            "scale_to_length": {
              "type": "number"
            },
            "round_to_multiple": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "aspect_ratio",
            "proportional_width",
            "proportional_height",
            "method",
            "scale_to_side",
            "scale_to_length",
            "round_to_multiple"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageBlend": {
      "title": "ImageBlend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageBlendAdvance": {
      "title": "ImageBlendAdvance",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, x_percent, y_percent, mirror, scale, aspect_ratio, rotate, transform_method, anti_aliasing",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "x_percent": {
              "type": "number"
            },
            "y_percent": {
              "type": "number"
            },
            "mirror": {
              "type": "string"
            },
            "scale": {
              "type": "number"
            },
            "aspect_ratio": {
              "type": "number"
            },
            "rotate": {
              "type": "number"
            },
            "transform_method": {
              "type": "string"
            },
            "anti_aliasing": {
              "type": "number"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "x_percent",
            "y_percent",
            "mirror",
            "scale",
            "aspect_ratio",
            "rotate",
            "transform_method",
            "anti_aliasing"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageBlendAdvance V2": {
      "title": "ImageBlendAdvanceV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, x_percent, y_percent, mirror, scale, aspect_ratio, rotate, transform_method, anti_aliasing",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "x_percent": {
              "type": "number"
            },
            "y_percent": {
              "type": "number"
            },
            "mirror": {
              "type": "string"
            },
            "scale": {
              "type": "number"
            },
            "aspect_ratio": {
              "type": "number"
            },
            "rotate": {
              "type": "number"
            },
            "transform_method": {
              "type": "string"
            },
            "anti_aliasing": {
              "type": "number"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "x_percent",
            "y_percent",
            "mirror",
            "scale",
            "aspect_ratio",
            "rotate",
            "transform_method",
            "anti_aliasing"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageBlend V2": {
      "title": "ImageBlendV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageChannelMerge": {
      "title": "ImageChannelMerge",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: channel_1, channel_2, channel_3, mode",
          "properties": {
            "channel_1": {
              "type": "IMAGE"
            },
            "channel_2": {
              "type": "IMAGE"
            },
            "channel_3": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["channel_1", "channel_2", "channel_3", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageChannelSplit": {
      "title": "ImageChannelSplit",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["image", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageCombineAlpha": {
      "title": "ImageCombineAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: RGB_image, mask",
          "properties": {
            "RGB_image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["RGB_image", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageHub": {
      "title": "ImageHub",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: output, random_output",
          "properties": {
            "output": {
              "type": "number"
            },
            "random_output": {
              "type": "BOOLEAN"
            }
          },
          "required": ["output", "random_output"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageMaskScaleAs": {
      "title": "ImageMaskScaleAs",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: scale_as, fit, method",
          "properties": {
            "scale_as": {
              "type": "string"
            },
            "fit": {
              "type": "string"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["scale_as", "fit", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, BOX, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BOX"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageOpacity": {
      "title": "ImageOpacity",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, opacity, invert_mask",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "opacity": {
              "type": "number"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "opacity", "invert_mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageReel": {
      "title": "ImageReel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image1_text, image2_text, image3_text, image4_text, reel_height, border",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image1_text": {
              "type": "string"
            },
            "image2_text": {
              "type": "string"
            },
            "image3_text": {
              "type": "string"
            },
            "image4_text": {
              "type": "string"
            },
            "reel_height": {
              "type": "number"
            },
            "border": {
              "type": "number"
            }
          },
          "required": [
            "image1",
            "image1_text",
            "image2_text",
            "image3_text",
            "image4_text",
            "reel_height",
            "border"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: Reel",
          "items": [
            {
              "type": "Reel"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageReelComposit": {
      "title": "ImageReelComposit",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: reel_1, font_file, font_size, border, color_theme",
          "properties": {
            "reel_1": {
              "type": "Reel"
            },
            "font_file": {
              "type": "string"
            },
            "font_size": {
              "type": "number"
            },
            "border": {
              "type": "number"
            },
            "color_theme": {
              "type": "string"
            }
          },
          "required": [
            "reel_1",
            "font_file",
            "font_size",
            "border",
            "color_theme"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageRemoveAlpha": {
      "title": "ImageRemoveAlpha",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: RGBA_image, fill_background, background_color",
          "properties": {
            "RGBA_image": {
              "type": "IMAGE"
            },
            "fill_background": {
              "type": "BOOLEAN"
            },
            "background_color": {
              "type": "string"
            }
          },
          "required": ["RGBA_image", "fill_background", "background_color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageRewardFilter": {
      "title": "ImageRewardFilter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, prompt, output_num",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "prompt": {
              "type": "string"
            },
            "output_num": {
              "type": "number"
            }
          },
          "required": ["images", "prompt", "output_num"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageScaleByAspectRatio": {
      "title": "ImageScaleByAspectRatio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: aspect_ratio, proportional_width, proportional_height, fit, method, round_to_multiple, scale_to_longest_side, longest_side",
          "properties": {
            "aspect_ratio": {
              "type": "string"
            },
            "proportional_width": {
              "type": "number"
            },
            "proportional_height": {
              "type": "number"
            },
            "fit": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "round_to_multiple": {
              "type": "string"
            },
            "scale_to_longest_side": {
              "type": "BOOLEAN"
            },
            "longest_side": {
              "type": "number"
            }
          },
          "required": [
            "aspect_ratio",
            "proportional_width",
            "proportional_height",
            "fit",
            "method",
            "round_to_multiple",
            "scale_to_longest_side",
            "longest_side"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, BOX, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BOX"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageScaleByAspectRatio V2": {
      "title": "ImageScaleByAspectRatioV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: aspect_ratio, proportional_width, proportional_height, fit, method, round_to_multiple, scale_to_side, scale_to_length, background_color",
          "properties": {
            "aspect_ratio": {
              "type": "string"
            },
            "proportional_width": {
              "type": "number"
            },
            "proportional_height": {
              "type": "number"
            },
            "fit": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "round_to_multiple": {
              "type": "string"
            },
            "scale_to_side": {
              "type": "string"
            },
            "scale_to_length": {
              "type": "number"
            },
            "background_color": {
              "type": "string"
            }
          },
          "required": [
            "aspect_ratio",
            "proportional_width",
            "proportional_height",
            "fit",
            "method",
            "round_to_multiple",
            "scale_to_side",
            "scale_to_length",
            "background_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, BOX, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BOX"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageScaleRestore": {
      "title": "ImageScaleRestore",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, scale, method, scale_by_longest_side, longest_side",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "scale": {
              "type": "number"
            },
            "method": {
              "type": "string"
            },
            "scale_by_longest_side": {
              "type": "BOOLEAN"
            },
            "longest_side": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "scale",
            "method",
            "scale_by_longest_side",
            "longest_side"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, BOX, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BOX"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageScaleRestore V2": {
      "title": "ImageScaleRestoreV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, scale, method, scale_by, scale_by_length",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "scale": {
              "type": "number"
            },
            "method": {
              "type": "string"
            },
            "scale_by": {
              "type": "string"
            },
            "scale_by_length": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "scale",
            "method",
            "scale_by",
            "scale_by_length"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, BOX, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "BOX"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageShift": {
      "title": "ImageShift",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, shift_x, shift_y, cyclic, background_color, border_mask_width, border_mask_blur",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "shift_x": {
              "type": "number"
            },
            "shift_y": {
              "type": "number"
            },
            "cyclic": {
              "type": "BOOLEAN"
            },
            "background_color": {
              "type": "string"
            },
            "border_mask_width": {
              "type": "number"
            },
            "border_mask_blur": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "shift_x",
            "shift_y",
            "cyclic",
            "background_color",
            "border_mask_width",
            "border_mask_blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ImageTaggerSave": {
      "title": "LSImageTaggerSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, tag_text, custom_path, filename_prefix, timestamp, format, quality, preview",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "tag_text": {
              "type": "string"
            },
            "custom_path": {
              "type": "string"
            },
            "filename_prefix": {
              "type": "string"
            },
            "timestamp": {
              "type": "string"
            },
            "format": {
              "type": "string"
            },
            "quality": {
              "type": "number"
            },
            "preview": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "tag_text",
            "custom_path",
            "filename_prefix",
            "timestamp",
            "format",
            "quality",
            "preview"
          ]
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerMask: ImageToMask": {
      "title": "ImageToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel, black_point, white_point, gray_point, invert_output_mask",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "channel": {
              "type": "string"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "gray_point": {
              "type": "number"
            },
            "invert_output_mask": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "channel",
            "black_point",
            "white_point",
            "gray_point",
            "invert_output_mask"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerStyle: InnerGlow": {
      "title": "InnerGlow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, brightness, glow_range, blur, light_color, glow_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "brightness": {
              "type": "number"
            },
            "glow_range": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "light_color": {
              "type": "string"
            },
            "glow_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "brightness",
            "glow_range",
            "blur",
            "light_color",
            "glow_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: InnerGlow V2": {
      "title": "InnerGlowV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, brightness, glow_range, blur, light_color, glow_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "brightness": {
              "type": "number"
            },
            "glow_range": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "light_color": {
              "type": "string"
            },
            "glow_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "brightness",
            "glow_range",
            "blur",
            "light_color",
            "glow_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: InnerShadow": {
      "title": "InnerShadow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, distance_x, distance_y, grow, blur, shadow_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "distance_x": {
              "type": "number"
            },
            "distance_y": {
              "type": "number"
            },
            "grow": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "shadow_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "distance_x",
            "distance_y",
            "grow",
            "blur",
            "shadow_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: InnerShadow V2": {
      "title": "InnerShadowV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, distance_x, distance_y, grow, blur, shadow_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "distance_x": {
              "type": "number"
            },
            "distance_y": {
              "type": "number"
            },
            "grow": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "shadow_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "distance_x",
            "distance_y",
            "grow",
            "blur",
            "shadow_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerUtility: LoadJoyCaption2Model": {
      "title": "LS_LoadJoyCaption2Model",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: llm_model, device, dtype, vlm_lora",
          "properties": {
            "llm_model": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "dtype": {
              "type": "string"
            },
            "vlm_lora": {
              "type": "string"
            }
          },
          "required": ["llm_model", "device", "dtype", "vlm_lora"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: JoyCaption2_Model",
          "items": [
            {
              "type": "JoyCaption2_Model"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: JoyCaption2Split": {
      "title": "LS_JoyCaption2Split",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, joy2_model, caption_type, caption_length, user_prompt, max_new_tokens, top_p, temperature",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "joy2_model": {
              "type": "JoyCaption2_Model"
            },
            "caption_type": {
              "type": "string"
            },
            "caption_length": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            },
            "max_new_tokens": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "joy2_model",
            "caption_type",
            "caption_length",
            "user_prompt",
            "max_new_tokens",
            "top_p",
            "temperature"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: JoyCaption2": {
      "title": "LS_JoyCaption2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, llm_model, device, dtype, vlm_lora, caption_type, caption_length, user_prompt, max_new_tokens, top_p, temperature, cache_model, use_global_model",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "llm_model": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "dtype": {
              "type": "string"
            },
            "vlm_lora": {
              "type": "string"
            },
            "caption_type": {
              "type": "string"
            },
            "caption_length": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            },
            "max_new_tokens": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            },
            "cache_model": {
              "type": "BOOLEAN"
            },
            "use_global_model": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "llm_model",
            "device",
            "dtype",
            "vlm_lora",
            "caption_type",
            "caption_length",
            "user_prompt",
            "max_new_tokens",
            "top_p",
            "temperature",
            "cache_model",
            "use_global_model"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: JoyCaption2ExtraOptions": {
      "title": "LS_JoyCaptionExtraOptions",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: refer_character_name, exclude_people_info, include_lighting, include_camera_angle, include_watermark, include_JPEG_artifacts, include_exif, exclude_sexual, exclude_image_resolution, include_aesthetic_quality, include_composition_style, exclude_text, specify_depth_field, specify_lighting_sources, do_not_use_ambiguous_language, include_nsfw, only_describe_most_important_elements, character_name",
          "properties": {
            "refer_character_name": {
              "type": "BOOLEAN"
            },
            "exclude_people_info": {
              "type": "BOOLEAN"
            },
            "include_lighting": {
              "type": "BOOLEAN"
            },
            "include_camera_angle": {
              "type": "BOOLEAN"
            },
            "include_watermark": {
              "type": "BOOLEAN"
            },
            "include_JPEG_artifacts": {
              "type": "BOOLEAN"
            },
            "include_exif": {
              "type": "BOOLEAN"
            },
            "exclude_sexual": {
              "type": "BOOLEAN"
            },
            "exclude_image_resolution": {
              "type": "BOOLEAN"
            },
            "include_aesthetic_quality": {
              "type": "BOOLEAN"
            },
            "include_composition_style": {
              "type": "BOOLEAN"
            },
            "exclude_text": {
              "type": "BOOLEAN"
            },
            "specify_depth_field": {
              "type": "BOOLEAN"
            },
            "specify_lighting_sources": {
              "type": "BOOLEAN"
            },
            "do_not_use_ambiguous_language": {
              "type": "BOOLEAN"
            },
            "include_nsfw": {
              "type": "BOOLEAN"
            },
            "only_describe_most_important_elements": {
              "type": "BOOLEAN"
            },
            "character_name": {
              "type": "string"
            }
          },
          "required": [
            "refer_character_name",
            "exclude_people_info",
            "include_lighting",
            "include_camera_angle",
            "include_watermark",
            "include_JPEG_artifacts",
            "include_exif",
            "exclude_sexual",
            "exclude_image_resolution",
            "include_aesthetic_quality",
            "include_composition_style",
            "exclude_text",
            "specify_depth_field",
            "specify_lighting_sources",
            "do_not_use_ambiguous_language",
            "include_nsfw",
            "only_describe_most_important_elements",
            "character_name"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: JoyCaption2ExtraOption",
          "items": [
            {
              "type": "JoyCaption2ExtraOption"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: LaMa": {
      "title": "LaMa",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, lama_model, device, invert_mask, mask_grow, mask_blur",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "lama_model": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "mask_grow": {
              "type": "number"
            },
            "mask_blur": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mask",
            "lama_model",
            "device",
            "invert_mask",
            "mask_grow",
            "mask_blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: LayerImageTransform": {
      "title": "LayerImageTransform",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, x, y, mirror, scale, aspect_ratio, rotate, transform_method, anti_aliasing",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "mirror": {
              "type": "string"
            },
            "scale": {
              "type": "number"
            },
            "aspect_ratio": {
              "type": "number"
            },
            "rotate": {
              "type": "number"
            },
            "transform_method": {
              "type": "string"
            },
            "anti_aliasing": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "x",
            "y",
            "mirror",
            "scale",
            "aspect_ratio",
            "rotate",
            "transform_method",
            "anti_aliasing"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: LayerMaskTransform": {
      "title": "LayerMaskTransform",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, x, y, mirror, scale, aspect_ratio, rotate, transform_method, anti_aliasing",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "mirror": {
              "type": "string"
            },
            "scale": {
              "type": "number"
            },
            "aspect_ratio": {
              "type": "number"
            },
            "rotate": {
              "type": "number"
            },
            "transform_method": {
              "type": "string"
            },
            "anti_aliasing": {
              "type": "number"
            }
          },
          "required": [
            "mask",
            "x",
            "y",
            "mirror",
            "scale",
            "aspect_ratio",
            "rotate",
            "transform_method",
            "anti_aliasing"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerFilter: LightLeak": {
      "title": "LightLeak",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, light, corner, hue, saturation, opacity",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "light": {
              "type": "string"
            },
            "corner": {
              "type": "string"
            },
            "hue": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "light",
            "corner",
            "hue",
            "saturation",
            "opacity"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerUtility: LlamaVision": {
      "title": "LS_LlamaVision",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, system_prompt, user_prompt, max_new_tokens, do_sample, temperature, top_p, top_k, stop_strings, seed, include_prompt_in_output, cache_model",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "string"
            },
            "system_prompt": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            },
            "max_new_tokens": {
              "type": "number"
            },
            "do_sample": {
              "type": "BOOLEAN"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "top_k": {
              "type": "number"
            },
            "stop_strings": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            },
            "include_prompt_in_output": {
              "type": "BOOLEAN"
            },
            "cache_model": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "model",
            "system_prompt",
            "user_prompt",
            "max_new_tokens",
            "do_sample",
            "temperature",
            "top_p",
            "top_k",
            "stop_strings",
            "seed",
            "include_prompt_in_output",
            "cache_model"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: LoadPSD": {
      "title": "LoadPSD",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, file_path, include_hidden_layer, find_layer_by, layer_index, layer_name",
          "properties": {
            "image": {
              "type": "string"
            },
            "file_path": {
              "type": "string"
            },
            "include_hidden_layer": {
              "type": "BOOLEAN"
            },
            "find_layer_by": {
              "type": "string"
            },
            "layer_index": {
              "type": "number"
            },
            "layer_name": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "file_path",
            "include_hidden_layer",
            "find_layer_by",
            "layer_index",
            "layer_name"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerMask: MaskBoxDetect": {
      "title": "MaskBoxDetect",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, detect, x_adjust, y_adjust, scale_adjust",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "detect": {
              "type": "string"
            },
            "x_adjust": {
              "type": "number"
            },
            "y_adjust": {
              "type": "number"
            },
            "scale_adjust": {
              "type": "number"
            }
          },
          "required": ["mask", "detect", "x_adjust", "y_adjust", "scale_adjust"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, FLOAT, FLOAT, INT, INT, INT, INT",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 7,
          "minItems": 7
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskByColor": {
      "title": "MaskByColor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, color, color_in_HEX, threshold, fix_gap, fix_threshold, invert_mask",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "color": {
              "type": "COLOR"
            },
            "color_in_HEX": {
              "type": "string"
            },
            "threshold": {
              "type": "number"
            },
            "fix_gap": {
              "type": "number"
            },
            "fix_threshold": {
              "type": "number"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "color",
            "color_in_HEX",
            "threshold",
            "fix_gap",
            "fix_threshold",
            "invert_mask"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskByDifferent": {
      "title": "MaskByDifferent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_1, image_2, gain, fix_gap, fix_threshold, main_subject_detect",
          "properties": {
            "image_1": {
              "type": "IMAGE"
            },
            "image_2": {
              "type": "IMAGE"
            },
            "gain": {
              "type": "number"
            },
            "fix_gap": {
              "type": "number"
            },
            "fix_threshold": {
              "type": "number"
            },
            "main_subject_detect": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image_1",
            "image_2",
            "gain",
            "fix_gap",
            "fix_threshold",
            "main_subject_detect"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskEdgeShrink": {
      "title": "MaskEdgeShrink",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, invert_mask, shrink_level, soft, edge_shrink, edge_reserve",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "shrink_level": {
              "type": "number"
            },
            "soft": {
              "type": "number"
            },
            "edge_shrink": {
              "type": "number"
            },
            "edge_reserve": {
              "type": "number"
            }
          },
          "required": [
            "mask",
            "invert_mask",
            "shrink_level",
            "soft",
            "edge_shrink",
            "edge_reserve"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskEdgeUltraDetail": {
      "title": "MaskEdgeUltraDetail",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, method, mask_grow, fix_gap, fix_threshold, detail_range, black_point, white_point",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "method": {
              "type": "string"
            },
            "mask_grow": {
              "type": "number"
            },
            "fix_gap": {
              "type": "number"
            },
            "fix_threshold": {
              "type": "number"
            },
            "detail_range": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mask",
            "method",
            "mask_grow",
            "fix_gap",
            "fix_threshold",
            "detail_range",
            "black_point",
            "white_point"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskEdgeUltraDetail V2": {
      "title": "MaskEdgeUltraDetailV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, method, mask_grow, fix_gap, fix_threshold, edge_erode, edte_dilate, black_point, white_point, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "method": {
              "type": "string"
            },
            "mask_grow": {
              "type": "number"
            },
            "fix_gap": {
              "type": "number"
            },
            "fix_threshold": {
              "type": "number"
            },
            "edge_erode": {
              "type": "number"
            },
            "edte_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mask",
            "method",
            "mask_grow",
            "fix_gap",
            "fix_threshold",
            "edge_erode",
            "edte_dilate",
            "black_point",
            "white_point",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskGradient": {
      "title": "MaskGradient",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, invert_mask, gradient_side, gradient_scale, gradient_offset, opacity",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "gradient_side": {
              "type": "string"
            },
            "gradient_scale": {
              "type": "number"
            },
            "gradient_offset": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": [
            "mask",
            "invert_mask",
            "gradient_side",
            "gradient_scale",
            "gradient_offset",
            "opacity"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskGrain": {
      "title": "MaskGrain",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, grain, invert_mask",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "grain": {
              "type": "number"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            }
          },
          "required": ["mask", "grain", "invert_mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskGrow": {
      "title": "MaskGrow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, invert_mask, grow, blur",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "grow": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": ["mask", "invert_mask", "grow", "blur"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskInvert": {
      "title": "MaskInvert",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskMotionBlur": {
      "title": "MaskMotionBlur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, invert_mask, blur, angle",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blur": {
              "type": "number"
            },
            "angle": {
              "type": "number"
            }
          },
          "required": ["mask", "invert_mask", "blur", "angle"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskPreview": {
      "title": "MaskPreview",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "MASK"
            }
          },
          "required": ["mask"]
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MaskStroke": {
      "title": "MaskStroke",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, invert_mask, stroke_grow, stroke_width, blur",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "stroke_grow": {
              "type": "number"
            },
            "stroke_width": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": [
            "mask",
            "invert_mask",
            "stroke_grow",
            "stroke_width",
            "blur"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: MediapipeFacialSegment": {
      "title": "FacialFeatureSegment",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, left_eye, left_eyebrow, right_eye, right_eyebrow, lips, tooth",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "left_eye": {
              "type": "BOOLEAN"
            },
            "left_eyebrow": {
              "type": "BOOLEAN"
            },
            "right_eye": {
              "type": "BOOLEAN"
            },
            "right_eyebrow": {
              "type": "BOOLEAN"
            },
            "lips": {
              "type": "BOOLEAN"
            },
            "tooth": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "left_eye",
            "left_eyebrow",
            "right_eye",
            "right_eyebrow",
            "lips",
            "tooth"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerFilter: MotionBlur": {
      "title": "MotionBlur",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, angle, blur",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "angle": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            }
          },
          "required": ["image", "angle", "blur"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerMask: BBoxJoin": {
      "title": "LS_BBOXES_JOIN",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: bboxes_1",
          "properties": {
            "bboxes_1": {
              "type": "BBOXES"
            }
          },
          "required": ["bboxes_1"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOXES",
          "items": [
            {
              "type": "BBOXES"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: DrawBBoxMask": {
      "title": "LS_DrawBBoxMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, bboxes, grow_top, grow_bottom, grow_left, grow_right",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "bboxes": {
              "type": "BBOXES"
            },
            "grow_top": {
              "type": "number"
            },
            "grow_bottom": {
              "type": "number"
            },
            "grow_left": {
              "type": "number"
            },
            "grow_right": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "bboxes",
            "grow_top",
            "grow_bottom",
            "grow_left",
            "grow_right"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: ObjectDetectorFL2": {
      "title": "LS_OBJECT_DETECTOR_FL2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, prompt, florence2_model, sort_method, bbox_select, select_index",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "prompt": {
              "type": "string"
            },
            "florence2_model": {
              "type": "FLORENCE2"
            },
            "sort_method": {
              "type": "string"
            },
            "bbox_select": {
              "type": "string"
            },
            "select_index": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "prompt",
            "florence2_model",
            "sort_method",
            "bbox_select",
            "select_index"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOXES, IMAGE",
          "items": [
            {
              "type": "BBOXES"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: ObjectDetectorMask": {
      "title": "LS_OBJECT_DETECTOR_MASK",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: object_mask, sort_method, bbox_select, select_index",
          "properties": {
            "object_mask": {
              "type": "MASK"
            },
            "sort_method": {
              "type": "string"
            },
            "bbox_select": {
              "type": "string"
            },
            "select_index": {
              "type": "string"
            }
          },
          "required": [
            "object_mask",
            "sort_method",
            "bbox_select",
            "select_index"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOXES, IMAGE",
          "items": [
            {
              "type": "BBOXES"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: ObjectDetectorYOLO8": {
      "title": "LS_OBJECT_DETECTOR_YOLO8",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, yolo_model, sort_method, bbox_select, select_index",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "yolo_model": {
              "type": "string"
            },
            "sort_method": {
              "type": "string"
            },
            "bbox_select": {
              "type": "string"
            },
            "select_index": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "yolo_model",
            "sort_method",
            "bbox_select",
            "select_index"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOXES, IMAGE",
          "items": [
            {
              "type": "BBOXES"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: ObjectDetectorYOLOWorld": {
      "title": "LS_OBJECT_DETECTOR_YOLOWORLD",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, yolo_world_model, confidence_threshold, nms_iou_threshold, prompt, sort_method, bbox_select, select_index",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "yolo_world_model": {
              "type": "string"
            },
            "confidence_threshold": {
              "type": "number"
            },
            "nms_iou_threshold": {
              "type": "number"
            },
            "prompt": {
              "type": "string"
            },
            "sort_method": {
              "type": "string"
            },
            "bbox_select": {
              "type": "string"
            },
            "select_index": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "yolo_world_model",
            "confidence_threshold",
            "nms_iou_threshold",
            "prompt",
            "sort_method",
            "bbox_select",
            "select_index"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOXES, IMAGE",
          "items": [
            {
              "type": "BBOXES"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerStyle: OuterGlow": {
      "title": "OuterGlow",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, brightness, glow_range, blur, light_color, glow_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "brightness": {
              "type": "number"
            },
            "glow_range": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "light_color": {
              "type": "string"
            },
            "glow_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "brightness",
            "glow_range",
            "blur",
            "light_color",
            "glow_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: OuterGlow V2": {
      "title": "OuterGlowV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, brightness, glow_range, blur, light_color, glow_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "brightness": {
              "type": "number"
            },
            "glow_range": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "light_color": {
              "type": "string"
            },
            "glow_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "brightness",
            "glow_range",
            "blur",
            "light_color",
            "glow_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerMask: PersonMaskUltra": {
      "title": "PersonMaskUltra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, face, hair, body, clothes, accessories, background, confidence, detail_range, black_point, white_point, process_detail",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "face": {
              "type": "BOOLEAN"
            },
            "hair": {
              "type": "BOOLEAN"
            },
            "body": {
              "type": "BOOLEAN"
            },
            "clothes": {
              "type": "BOOLEAN"
            },
            "accessories": {
              "type": "BOOLEAN"
            },
            "background": {
              "type": "BOOLEAN"
            },
            "confidence": {
              "type": "number"
            },
            "detail_range": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "images",
            "face",
            "hair",
            "body",
            "clothes",
            "accessories",
            "background",
            "confidence",
            "detail_range",
            "black_point",
            "white_point",
            "process_detail"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: PersonMaskUltra V2": {
      "title": "PersonMaskUltraV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, face, hair, body, clothes, accessories, background, confidence, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "face": {
              "type": "BOOLEAN"
            },
            "hair": {
              "type": "BOOLEAN"
            },
            "body": {
              "type": "BOOLEAN"
            },
            "clothes": {
              "type": "BOOLEAN"
            },
            "accessories": {
              "type": "BOOLEAN"
            },
            "background": {
              "type": "BOOLEAN"
            },
            "confidence": {
              "type": "number"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "face",
            "hair",
            "body",
            "clothes",
            "accessories",
            "background",
            "confidence",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: PhiPrompt": {
      "title": "LS_Phi_Prompt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, device, dtype, cache_model, system_prompt, user_prompt, do_sample, temperature, max_new_tokens",
          "properties": {
            "model": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "dtype": {
              "type": "string"
            },
            "cache_model": {
              "type": "BOOLEAN"
            },
            "system_prompt": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            },
            "do_sample": {
              "type": "BOOLEAN"
            },
            "temperature": {
              "type": "number"
            },
            "max_new_tokens": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "device",
            "dtype",
            "cache_model",
            "system_prompt",
            "user_prompt",
            "do_sample",
            "temperature",
            "max_new_tokens"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerMask: PixelSpread": {
      "title": "PixelSpread",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, invert_mask, mask_grow",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "mask_grow": {
              "type": "number"
            }
          },
          "required": ["image", "invert_mask", "mask_grow"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: PrintInfo": {
      "title": "PrintInfo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: anything",
          "properties": {
            "anything": {
              "type": "string"
            }
          },
          "required": ["anything"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: PromptEmbellish": {
      "title": "PromptEmbellish",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: api, token_limit, describe",
          "properties": {
            "api": {
              "type": "string"
            },
            "token_limit": {
              "type": "number"
            },
            "describe": {
              "type": "string"
            }
          },
          "required": ["api", "token_limit", "describe"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Prompt"
    },
    "LayerUtility: PromptTagger": {
      "title": "PromptTagger",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, api, token_limit, exclude_word, replace_with_word",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "api": {
              "type": "string"
            },
            "token_limit": {
              "type": "number"
            },
            "exclude_word": {
              "type": "string"
            },
            "replace_with_word": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "api",
            "token_limit",
            "exclude_word",
            "replace_with_word"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Prompt"
    },
    "LayerUtility: PurgeVRAM": {
      "title": "PurgeVRAM",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: anything, purge_cache, purge_models",
          "properties": {
            "anything": {
              "type": "string"
            },
            "purge_cache": {
              "type": "BOOLEAN"
            },
            "purge_models": {
              "type": "BOOLEAN"
            }
          },
          "required": ["anything", "purge_cache", "purge_models"]
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerUtility: CreateQRCode": {
      "title": "CreateQRCode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: size, border, text",
          "properties": {
            "size": {
              "type": "number"
            },
            "border": {
              "type": "number"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["size", "border", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerUtility: DecodeQRCode": {
      "title": "DecodeQRCode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, pre_blur",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "pre_blur": {
              "type": "number"
            }
          },
          "required": ["image", "pre_blur"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerUtility: QWenImage2Prompt": {
      "title": "QWenImage2Prompt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, question",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "question": {
              "type": "string"
            }
          },
          "required": ["image", "question"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Prompt"
    },
    "LayerUtility: RandomGenerator": {
      "title": "LSRandomGenerator",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: min_value, max_value, float_decimal_places, fix_seed",
          "properties": {
            "min_value": {
              "type": "number"
            },
            "max_value": {
              "type": "number"
            },
            "float_decimal_places": {
              "type": "number"
            },
            "fix_seed": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "min_value",
            "max_value",
            "float_decimal_places",
            "fix_seed"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, BOOLEAN",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: RandomGeneratorV2": {
      "title": "LS_RandomGeneratorV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: min_value, max_value, least, float_decimal_places, seed",
          "properties": {
            "min_value": {
              "type": "number"
            },
            "max_value": {
              "type": "number"
            },
            "least": {
              "type": "number"
            },
            "float_decimal_places": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": [
            "min_value",
            "max_value",
            "least",
            "float_decimal_places",
            "seed"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, BOOLEAN",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: RestoreCropBox": {
      "title": "RestoreCropBox",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, croped_image, invert_mask, crop_box",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "croped_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "crop_box": {
              "type": "BOX"
            }
          },
          "required": [
            "background_image",
            "croped_image",
            "invert_mask",
            "crop_box"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerMask: RemBgUltra": {
      "title": "RemBgUltra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, detail_range, black_point, white_point, process_detail",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "detail_range": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "detail_range",
            "black_point",
            "white_point",
            "process_detail"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: RmBgUltra V2": {
      "title": "RmBgUltraV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: SAM2Ultra": {
      "title": "LS_SAM2_ULTRA",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, bboxes, sam2_model, precision, bbox_select, select_index, cache_model, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "bboxes": {
              "type": "BBOXES"
            },
            "sam2_model": {
              "type": "string"
            },
            "precision": {
              "type": "string"
            },
            "bbox_select": {
              "type": "string"
            },
            "select_index": {
              "type": "string"
            },
            "cache_model": {
              "type": "BOOLEAN"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "bboxes",
            "sam2_model",
            "precision",
            "bbox_select",
            "select_index",
            "cache_model",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: SAM2VideoUltra": {
      "title": "LS_SAM2_VIDEO_ULTRA",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sam2_model, precision, cache_model, individual_objects, mask_preview_color, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sam2_model": {
              "type": "string"
            },
            "precision": {
              "type": "string"
            },
            "cache_model": {
              "type": "BOOLEAN"
            },
            "individual_objects": {
              "type": "BOOLEAN"
            },
            "mask_preview_color": {
              "type": "string"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "sam2_model",
            "precision",
            "cache_model",
            "individual_objects",
            "mask_preview_color",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: SaveImagePlus": {
      "title": "SaveImagePlus",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, custom_path, filename_prefix, timestamp, format, quality, meta_data, blind_watermark, save_workflow_as_json, preview",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "custom_path": {
              "type": "string"
            },
            "filename_prefix": {
              "type": "string"
            },
            "timestamp": {
              "type": "string"
            },
            "format": {
              "type": "string"
            },
            "quality": {
              "type": "number"
            },
            "meta_data": {
              "type": "BOOLEAN"
            },
            "blind_watermark": {
              "type": "string"
            },
            "save_workflow_as_json": {
              "type": "BOOLEAN"
            },
            "preview": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "images",
            "custom_path",
            "filename_prefix",
            "timestamp",
            "format",
            "quality",
            "meta_data",
            "blind_watermark",
            "save_workflow_as_json",
            "preview"
          ]
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerUtility: SD3NegativeConditioning": {
      "title": "SD3NegativeConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning, zero_out_start",
          "properties": {
            "conditioning": {
              "type": "CONDITIONING"
            },
            "zero_out_start": {
              "type": "number"
            }
          },
          "required": ["conditioning", "zero_out_start"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerMask: SegformerB2ClothesUltra": {
      "title": "Segformer_B2_Clothes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, face, hair, hat, sunglass, left_arm, right_arm, left_leg, right_leg, upper_clothes, skirt, pants, dress, belt, shoe, bag, scarf, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "face": {
              "type": "BOOLEAN"
            },
            "hair": {
              "type": "BOOLEAN"
            },
            "hat": {
              "type": "BOOLEAN"
            },
            "sunglass": {
              "type": "BOOLEAN"
            },
            "left_arm": {
              "type": "BOOLEAN"
            },
            "right_arm": {
              "type": "BOOLEAN"
            },
            "left_leg": {
              "type": "BOOLEAN"
            },
            "right_leg": {
              "type": "BOOLEAN"
            },
            "upper_clothes": {
              "type": "BOOLEAN"
            },
            "skirt": {
              "type": "BOOLEAN"
            },
            "pants": {
              "type": "BOOLEAN"
            },
            "dress": {
              "type": "BOOLEAN"
            },
            "belt": {
              "type": "BOOLEAN"
            },
            "shoe": {
              "type": "BOOLEAN"
            },
            "bag": {
              "type": "BOOLEAN"
            },
            "scarf": {
              "type": "BOOLEAN"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "face",
            "hair",
            "hat",
            "sunglass",
            "left_arm",
            "right_arm",
            "left_leg",
            "right_leg",
            "upper_clothes",
            "skirt",
            "pants",
            "dress",
            "belt",
            "shoe",
            "bag",
            "scarf",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: SegformerUltraV2": {
      "title": "SegformerUltraV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, segformer_pipeline, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "segformer_pipeline": {
              "type": "SegPipeline"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "segformer_pipeline",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: SegformerClothesPipelineLoader": {
      "title": "SegformerClothesPipelineLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, face, hair, hat, sunglass, left_arm, right_arm, left_leg, right_leg, left_shoe, right_shoe, upper_clothes, skirt, pants, dress, belt, bag, scarf",
          "properties": {
            "model": {
              "type": "string"
            },
            "face": {
              "type": "BOOLEAN"
            },
            "hair": {
              "type": "BOOLEAN"
            },
            "hat": {
              "type": "BOOLEAN"
            },
            "sunglass": {
              "type": "BOOLEAN"
            },
            "left_arm": {
              "type": "BOOLEAN"
            },
            "right_arm": {
              "type": "BOOLEAN"
            },
            "left_leg": {
              "type": "BOOLEAN"
            },
            "right_leg": {
              "type": "BOOLEAN"
            },
            "left_shoe": {
              "type": "BOOLEAN"
            },
            "right_shoe": {
              "type": "BOOLEAN"
            },
            "upper_clothes": {
              "type": "BOOLEAN"
            },
            "skirt": {
              "type": "BOOLEAN"
            },
            "pants": {
              "type": "BOOLEAN"
            },
            "dress": {
              "type": "BOOLEAN"
            },
            "belt": {
              "type": "BOOLEAN"
            },
            "bag": {
              "type": "BOOLEAN"
            },
            "scarf": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "model",
            "face",
            "hair",
            "hat",
            "sunglass",
            "left_arm",
            "right_arm",
            "left_leg",
            "right_leg",
            "left_shoe",
            "right_shoe",
            "upper_clothes",
            "skirt",
            "pants",
            "dress",
            "belt",
            "bag",
            "scarf"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SegPipeline",
          "items": [
            {
              "type": "SegPipeline"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: SegformerFashionPipelineLoader": {
      "title": "SegformerFashionPipelineLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, shirt, top, sweater, cardigan, jacket, vest, pants, shorts, skirt, coat, dress, jumpsuit, cape, glasses, hat, hairaccessory, tie, glove, watch, belt, legwarmer, tights, sock, shoe, bagwallet, scarf, umbrella, hood, collar, lapel, epaulette, sleeve, pocket, neckline, buckle, zipper, applique, bead, bow, flower, fringe, ribbon, rivet, ruffle, sequin, tassel",
          "properties": {
            "model": {
              "type": "string"
            },
            "shirt": {
              "type": "BOOLEAN"
            },
            "top": {
              "type": "BOOLEAN"
            },
            "sweater": {
              "type": "BOOLEAN"
            },
            "cardigan": {
              "type": "BOOLEAN"
            },
            "jacket": {
              "type": "BOOLEAN"
            },
            "vest": {
              "type": "BOOLEAN"
            },
            "pants": {
              "type": "BOOLEAN"
            },
            "shorts": {
              "type": "BOOLEAN"
            },
            "skirt": {
              "type": "BOOLEAN"
            },
            "coat": {
              "type": "BOOLEAN"
            },
            "dress": {
              "type": "BOOLEAN"
            },
            "jumpsuit": {
              "type": "BOOLEAN"
            },
            "cape": {
              "type": "BOOLEAN"
            },
            "glasses": {
              "type": "BOOLEAN"
            },
            "hat": {
              "type": "BOOLEAN"
            },
            "hairaccessory": {
              "type": "BOOLEAN"
            },
            "tie": {
              "type": "BOOLEAN"
            },
            "glove": {
              "type": "BOOLEAN"
            },
            "watch": {
              "type": "BOOLEAN"
            },
            "belt": {
              "type": "BOOLEAN"
            },
            "legwarmer": {
              "type": "BOOLEAN"
            },
            "tights": {
              "type": "BOOLEAN"
            },
            "sock": {
              "type": "BOOLEAN"
            },
            "shoe": {
              "type": "BOOLEAN"
            },
            "bagwallet": {
              "type": "BOOLEAN"
            },
            "scarf": {
              "type": "BOOLEAN"
            },
            "umbrella": {
              "type": "BOOLEAN"
            },
            "hood": {
              "type": "BOOLEAN"
            },
            "collar": {
              "type": "BOOLEAN"
            },
            "lapel": {
              "type": "BOOLEAN"
            },
            "epaulette": {
              "type": "BOOLEAN"
            },
            "sleeve": {
              "type": "BOOLEAN"
            },
            "pocket": {
              "type": "BOOLEAN"
            },
            "neckline": {
              "type": "BOOLEAN"
            },
            "buckle": {
              "type": "BOOLEAN"
            },
            "zipper": {
              "type": "BOOLEAN"
            },
            "applique": {
              "type": "BOOLEAN"
            },
            "bead": {
              "type": "BOOLEAN"
            },
            "bow": {
              "type": "BOOLEAN"
            },
            "flower": {
              "type": "BOOLEAN"
            },
            "fringe": {
              "type": "BOOLEAN"
            },
            "ribbon": {
              "type": "BOOLEAN"
            },
            "rivet": {
              "type": "BOOLEAN"
            },
            "ruffle": {
              "type": "BOOLEAN"
            },
            "sequin": {
              "type": "BOOLEAN"
            },
            "tassel": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "model",
            "shirt",
            "top",
            "sweater",
            "cardigan",
            "jacket",
            "vest",
            "pants",
            "shorts",
            "skirt",
            "coat",
            "dress",
            "jumpsuit",
            "cape",
            "glasses",
            "hat",
            "hairaccessory",
            "tie",
            "glove",
            "watch",
            "belt",
            "legwarmer",
            "tights",
            "sock",
            "shoe",
            "bagwallet",
            "scarf",
            "umbrella",
            "hood",
            "collar",
            "lapel",
            "epaulette",
            "sleeve",
            "pocket",
            "neckline",
            "buckle",
            "zipper",
            "applique",
            "bead",
            "bow",
            "flower",
            "fringe",
            "ribbon",
            "rivet",
            "ruffle",
            "sequin",
            "tassel"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SegPipeline",
          "items": [
            {
              "type": "SegPipeline"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: SegmentAnythingUltra": {
      "title": "SegmentAnythingUltra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sam_model, grounding_dino_model, threshold, detail_range, black_point, white_point, process_detail, prompt, cache_model",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sam_model": {
              "type": "string"
            },
            "grounding_dino_model": {
              "type": "string"
            },
            "threshold": {
              "type": "number"
            },
            "detail_range": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "prompt": {
              "type": "string"
            },
            "cache_model": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "sam_model",
            "grounding_dino_model",
            "threshold",
            "detail_range",
            "black_point",
            "white_point",
            "process_detail",
            "prompt",
            "cache_model"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: SegmentAnythingUltra V2": {
      "title": "SegmentAnythingUltraV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sam_model, grounding_dino_model, threshold, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, prompt, device, max_megapixels, cache_model",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sam_model": {
              "type": "string"
            },
            "grounding_dino_model": {
              "type": "string"
            },
            "threshold": {
              "type": "number"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "prompt": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            },
            "cache_model": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "sam_model",
            "grounding_dino_model",
            "threshold",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "prompt",
            "device",
            "max_megapixels",
            "cache_model"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: Shadow & Highlight Mask": {
      "title": "ShadowAndHighlightMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, shadow_level_offset, shadow_range, highlight_level_offset, highlight_range",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "shadow_level_offset": {
              "type": "number"
            },
            "shadow_range": {
              "type": "number"
            },
            "highlight_level_offset": {
              "type": "number"
            },
            "highlight_range": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "shadow_level_offset",
            "shadow_range",
            "highlight_level_offset",
            "highlight_range"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: ShadowHighlightMaskV2": {
      "title": "LS_ShadowAndHighlightMaskV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, shadow_level_offset, shadow_range, highlight_level_offset, highlight_range",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "shadow_level_offset": {
              "type": "number"
            },
            "shadow_range": {
              "type": "number"
            },
            "highlight_level_offset": {
              "type": "number"
            },
            "highlight_range": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "shadow_level_offset",
            "shadow_range",
            "highlight_level_offset",
            "highlight_range"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerFilter: Sharp & Soft": {
      "title": "SharpAndSoft",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, enhance",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "enhance": {
              "type": "string"
            }
          },
          "required": ["images", "enhance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerUtility: SimpleTextImage": {
      "title": "SimpleTextImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, font_file, align, char_per_line, leading, font_size, text_color, stroke_width, stroke_color, x_offset, y_offset, width, height",
          "properties": {
            "text": {
              "type": "string"
            },
            "font_file": {
              "type": "string"
            },
            "align": {
              "type": "string"
            },
            "char_per_line": {
              "type": "number"
            },
            "leading": {
              "type": "number"
            },
            "font_size": {
              "type": "number"
            },
            "text_color": {
              "type": "string"
            },
            "stroke_width": {
              "type": "number"
            },
            "stroke_color": {
              "type": "string"
            },
            "x_offset": {
              "type": "number"
            },
            "y_offset": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            }
          },
          "required": [
            "text",
            "font_file",
            "align",
            "char_per_line",
            "leading",
            "font_size",
            "text_color",
            "stroke_width",
            "stroke_color",
            "x_offset",
            "y_offset",
            "width",
            "height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerFilter: SkinBeauty": {
      "title": "SkinBeauty",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, smooth, threshold, opacity",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "smooth": {
              "type": "number"
            },
            "threshold": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": ["image", "smooth", "threshold", "opacity"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerFilter: SoftLight": {
      "title": "SoftLight",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, soft, threshold, opacity",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "soft": {
              "type": "number"
            },
            "threshold": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": ["image", "soft", "threshold", "opacity"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerStyle: Stroke": {
      "title": "Stroke",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, stroke_grow, stroke_width, blur, stroke_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "stroke_grow": {
              "type": "number"
            },
            "stroke_width": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "stroke_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "stroke_grow",
            "stroke_width",
            "blur",
            "stroke_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerStyle: Stroke V2": {
      "title": "StrokeV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, invert_mask, blend_mode, opacity, stroke_grow, stroke_width, blur, stroke_color",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "invert_mask": {
              "type": "BOOLEAN"
            },
            "blend_mode": {
              "type": "string"
            },
            "opacity": {
              "type": "number"
            },
            "stroke_grow": {
              "type": "number"
            },
            "stroke_width": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "stroke_color": {
              "type": "string"
            }
          },
          "required": [
            "background_image",
            "layer_image",
            "invert_mask",
            "blend_mode",
            "opacity",
            "stroke_grow",
            "stroke_width",
            "blur",
            "stroke_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerStyle"
    },
    "LayerUtility: TextImage": {
      "title": "TextImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, font_file, spacing, leading, horizontal_border, vertical_border, scale, variation_range, variation_seed, layout, width, height, text_color, background_color",
          "properties": {
            "text": {
              "type": "string"
            },
            "font_file": {
              "type": "string"
            },
            "spacing": {
              "type": "number"
            },
            "leading": {
              "type": "number"
            },
            "horizontal_border": {
              "type": "number"
            },
            "vertical_border": {
              "type": "number"
            },
            "scale": {
              "type": "number"
            },
            "variation_range": {
              "type": "number"
            },
            "variation_seed": {
              "type": "number"
            },
            "layout": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "text_color": {
              "type": "string"
            },
            "background_color": {
              "type": "string"
            }
          },
          "required": [
            "text",
            "font_file",
            "spacing",
            "leading",
            "horizontal_border",
            "vertical_border",
            "scale",
            "variation_range",
            "variation_seed",
            "layout",
            "width",
            "height",
            "text_color",
            "background_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: TextImage V2": {
      "title": "TextImage_v2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, font_file, spacing, leading, horizontal_border, vertical_border, scale, variation_range, variation_seed, layout, width, height, text_color, background_color",
          "properties": {
            "text": {
              "type": "string"
            },
            "font_file": {
              "type": "string"
            },
            "spacing": {
              "type": "number"
            },
            "leading": {
              "type": "number"
            },
            "horizontal_border": {
              "type": "number"
            },
            "vertical_border": {
              "type": "number"
            },
            "scale": {
              "type": "number"
            },
            "variation_range": {
              "type": "number"
            },
            "variation_seed": {
              "type": "number"
            },
            "layout": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "text_color": {
              "type": "string"
            },
            "background_color": {
              "type": "string"
            }
          },
          "required": [
            "text",
            "font_file",
            "spacing",
            "leading",
            "horizontal_border",
            "vertical_border",
            "scale",
            "variation_range",
            "variation_seed",
            "layout",
            "width",
            "height",
            "text_color",
            "background_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: TextJoin": {
      "title": "TextJoin",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text_1",
          "properties": {
            "text_1": {
              "type": "string"
            }
          },
          "required": ["text_1"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerUtility: TextJoinV2": {
      "title": "LS_TextJoinV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text_1, delimiter",
          "properties": {
            "text_1": {
              "type": "string"
            },
            "delimiter": {
              "type": "string"
            }
          },
          "required": ["text_1", "delimiter"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerMask: TransparentBackgroundUltra": {
      "title": "TransparentBackgroundUltra",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "string"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "model",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: UserPromptGeneratorTxt2ImgPrompt": {
      "title": "LS_UserPromptGenerator_Txt2ImgPrompt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: template, describe, limit_words",
          "properties": {
            "template": {
              "type": "string"
            },
            "describe": {
              "type": "string"
            },
            "limit_words": {
              "type": "number"
            }
          },
          "required": ["template", "describe", "limit_words"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Prompt"
    },
    "LayerUtility: UserPromptGeneratorTxt2ImgPromptWithReference": {
      "title": "LS_UserPromptGenerator_Txt2ImgPromptWithReference",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: template, reference_text, describe, limit_words",
          "properties": {
            "template": {
              "type": "string"
            },
            "reference_text": {
              "type": "string"
            },
            "describe": {
              "type": "string"
            },
            "limit_words": {
              "type": "number"
            }
          },
          "required": ["template", "reference_text", "describe", "limit_words"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Prompt"
    },
    "LayerUtility: UserPromptGeneratorReplaceWord": {
      "title": "LS_UserPromptGenerator_ReplaceWord",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: orig_prompt, template, exclude_word, replace_with_word",
          "properties": {
            "orig_prompt": {
              "type": "string"
            },
            "template": {
              "type": "string"
            },
            "exclude_word": {
              "type": "string"
            },
            "replace_with_word": {
              "type": "string"
            }
          },
          "required": [
            "orig_prompt",
            "template",
            "exclude_word",
            "replace_with_word"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/Prompt"
    },
    "LayerUtility: VQAPrompt": {
      "title": "LS_VQA_Prompt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, vqa_model, question",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "vqa_model": {
              "type": "VQA_MODEL"
            },
            "question": {
              "type": "string"
            }
          },
          "required": ["image", "vqa_model", "question"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: LoadVQAModel": {
      "title": "LS_LoadVQAModel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, precision, device",
          "properties": {
            "model": {
              "type": "string"
            },
            "precision": {
              "type": "string"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["model", "precision", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VQA_MODEL",
          "items": [
            {
              "type": "VQA_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: AddBlindWaterMark": {
      "title": "EncodeBlindWaterMark",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, watermark_image",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "watermark_image": {
              "type": "IMAGE"
            }
          },
          "required": ["image", "watermark_image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerUtility: ShowBlindWaterMark": {
      "title": "DecodeBlindWaterMark",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerFilter: WaterColor": {
      "title": "WaterColor",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, line_density, opacity",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "line_density": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": ["image", "line_density", "opacity"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerFilter"
    },
    "LayerUtility: XY to Percent": {
      "title": "XYtoPercent",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: background_image, layer_image, x, y",
          "properties": {
            "background_image": {
              "type": "IMAGE"
            },
            "layer_image": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            }
          },
          "required": ["background_image", "layer_image", "x", "y"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT, FLOAT",
          "items": [
            {
              "type": "FLOAT"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility/Data"
    },
    "LayerMask: YoloV8Detect": {
      "title": "YoloV8Detect",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, yolo_model, mask_merge",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "yolo_model": {
              "type": "string"
            },
            "mask_merge": {
              "type": "string"
            }
          },
          "required": ["image", "yolo_model", "mask_merge"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: Collage": {
      "title": "LS_Collage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, canvas_width, canvas_height, border_width, rounded_rect_radius, uniformity, background_color, seed",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "canvas_width": {
              "type": "number"
            },
            "canvas_height": {
              "type": "number"
            },
            "border_width": {
              "type": "number"
            },
            "rounded_rect_radius": {
              "type": "number"
            },
            "uniformity": {
              "type": "number"
            },
            "background_color": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "canvas_width",
            "canvas_height",
            "border_width",
            "rounded_rect_radius",
            "uniformity",
            "background_color",
            "seed"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: DeepSeekAPI": {
      "title": "LS_DeepSeek_API",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, max_tokens, temperature, top_p, presence_penalty, frequency_penalty, history_length, system_prompt, user_prompt",
          "properties": {
            "model": {
              "type": "string"
            },
            "max_tokens": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "presence_penalty": {
              "type": "number"
            },
            "frequency_penalty": {
              "type": "number"
            },
            "history_length": {
              "type": "number"
            },
            "system_prompt": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "max_tokens",
            "temperature",
            "top_p",
            "presence_penalty",
            "frequency_penalty",
            "history_length",
            "system_prompt",
            "user_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, DEEPSEEK_HISTORY",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "DEEPSEEK_HISTORY"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: DeepSeekAPIV2": {
      "title": "LS_DeepSeek_API_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, time_out, max_tokens, temperature, top_p, presence_penalty, frequency_penalty, history_length, system_prompt, user_prompt",
          "properties": {
            "model": {
              "type": "string"
            },
            "time_out": {
              "type": "number"
            },
            "max_tokens": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "presence_penalty": {
              "type": "number"
            },
            "frequency_penalty": {
              "type": "number"
            },
            "history_length": {
              "type": "number"
            },
            "system_prompt": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "time_out",
            "max_tokens",
            "temperature",
            "top_p",
            "presence_penalty",
            "frequency_penalty",
            "history_length",
            "system_prompt",
            "user_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, DEEPSEEK_HISTORY",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "DEEPSEEK_HISTORY"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: Gemini": {
      "title": "LS_GeminiNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, max_output_tokens, temperature, words_limit, response_language, system_prompt, user_prompt",
          "properties": {
            "model": {
              "type": "string"
            },
            "max_output_tokens": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            },
            "words_limit": {
              "type": "number"
            },
            "response_language": {
              "type": "string"
            },
            "system_prompt": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "max_output_tokens",
            "temperature",
            "words_limit",
            "response_language",
            "system_prompt",
            "user_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: GeminiV2": {
      "title": "LS_GeminiNode_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, max_output_tokens, temperature, words_limit, response_language, seed, system_prompt, user_prompt",
          "properties": {
            "model": {
              "type": "string"
            },
            "max_output_tokens": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            },
            "words_limit": {
              "type": "number"
            },
            "response_language": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            },
            "system_prompt": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "max_output_tokens",
            "temperature",
            "words_limit",
            "response_language",
            "seed",
            "system_prompt",
            "user_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerMask: ObjectDetectorGemini": {
      "title": "LS_OBJECT_DETECTOR_Gemini",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, prompt",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "string"
            },
            "prompt": {
              "type": "string"
            }
          },
          "required": ["image", "model", "prompt"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOXES, IMAGE",
          "items": [
            {
              "type": "BBOXES"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: ObjectDetectorGeminiV2": {
      "title": "LS_OBJECT_DETECTOR_Gemini_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, prompt",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "string"
            },
            "prompt": {
              "type": "string"
            }
          },
          "required": ["image", "model", "prompt"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BBOXES, IMAGE",
          "items": [
            {
              "type": "BBOXES"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: GeminiImageEdit": {
      "title": "LS_Gemini_Image_Edit",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, temperature, seed, user_prompt",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "string"
            },
            "temperature": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": ["image", "model", "temperature", "seed", "user_prompt"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: JoyCaptionBeta1": {
      "title": "LS_JoyCaptionB1",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, joycaption_beta1_model, caption_type, caption_length, max_new_tokens, top_p, top_k, temperature, user_prompt",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "joycaption_beta1_model": {
              "type": "JOYCAPTIONBETA1_MODEL"
            },
            "caption_type": {
              "type": "string"
            },
            "caption_length": {
              "type": "string"
            },
            "max_new_tokens": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "top_k": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "joycaption_beta1_model",
            "caption_type",
            "caption_length",
            "max_new_tokens",
            "top_p",
            "top_k",
            "temperature",
            "user_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: LoadJoyCaptionBeta1Model": {
      "title": "LS_LoadJoyCaptionB1Model",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, quantization_mode, device",
          "properties": {
            "model": {
              "type": "string"
            },
            "quantization_mode": {
              "type": "string"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["model", "quantization_mode", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: JOYCAPTIONBETA1_MODEL",
          "items": [
            {
              "type": "JOYCAPTIONBETA1_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: JoyCaptionBeta1ExtraOptions": {
      "title": "LS_JoyCaptionBetaExtraOptions",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: refer_character_name, exclude_people_info, include_lighting, include_camera_angle, include_watermark, include_JPEG_artifacts, include_exif, exclude_sexual, exclude_image_resolution, include_aesthetic_quality, include_composition_style, exclude_text, specify_depth_field, specify_lighting_sources, do_not_use_ambiguous_language, include_nsfw, only_describe_most_important_elements, do_not_include_artist_name_or_title, identify_image_orientation, use_vulgar_slang_and_profanity, do_not_use_polite_euphemisms, include_character_age, include_camera_shot_type, exclude_mood_feeling, include_camera_vantage_height, mention_watermark, avoid_meta_descriptive_phrases, character_name",
          "properties": {
            "refer_character_name": {
              "type": "BOOLEAN"
            },
            "exclude_people_info": {
              "type": "BOOLEAN"
            },
            "include_lighting": {
              "type": "BOOLEAN"
            },
            "include_camera_angle": {
              "type": "BOOLEAN"
            },
            "include_watermark": {
              "type": "BOOLEAN"
            },
            "include_JPEG_artifacts": {
              "type": "BOOLEAN"
            },
            "include_exif": {
              "type": "BOOLEAN"
            },
            "exclude_sexual": {
              "type": "BOOLEAN"
            },
            "exclude_image_resolution": {
              "type": "BOOLEAN"
            },
            "include_aesthetic_quality": {
              "type": "BOOLEAN"
            },
            "include_composition_style": {
              "type": "BOOLEAN"
            },
            "exclude_text": {
              "type": "BOOLEAN"
            },
            "specify_depth_field": {
              "type": "BOOLEAN"
            },
            "specify_lighting_sources": {
              "type": "BOOLEAN"
            },
            "do_not_use_ambiguous_language": {
              "type": "BOOLEAN"
            },
            "include_nsfw": {
              "type": "BOOLEAN"
            },
            "only_describe_most_important_elements": {
              "type": "BOOLEAN"
            },
            "do_not_include_artist_name_or_title": {
              "type": "BOOLEAN"
            },
            "identify_image_orientation": {
              "type": "BOOLEAN"
            },
            "use_vulgar_slang_and_profanity": {
              "type": "BOOLEAN"
            },
            "do_not_use_polite_euphemisms": {
              "type": "BOOLEAN"
            },
            "include_character_age": {
              "type": "BOOLEAN"
            },
            "include_camera_shot_type": {
              "type": "BOOLEAN"
            },
            "exclude_mood_feeling": {
              "type": "BOOLEAN"
            },
            "include_camera_vantage_height": {
              "type": "BOOLEAN"
            },
            "mention_watermark": {
              "type": "BOOLEAN"
            },
            "avoid_meta_descriptive_phrases": {
              "type": "BOOLEAN"
            },
            "character_name": {
              "type": "string"
            }
          },
          "required": [
            "refer_character_name",
            "exclude_people_info",
            "include_lighting",
            "include_camera_angle",
            "include_watermark",
            "include_JPEG_artifacts",
            "include_exif",
            "exclude_sexual",
            "exclude_image_resolution",
            "include_aesthetic_quality",
            "include_composition_style",
            "exclude_text",
            "specify_depth_field",
            "specify_lighting_sources",
            "do_not_use_ambiguous_language",
            "include_nsfw",
            "only_describe_most_important_elements",
            "do_not_include_artist_name_or_title",
            "identify_image_orientation",
            "use_vulgar_slang_and_profanity",
            "do_not_use_polite_euphemisms",
            "include_character_age",
            "include_camera_shot_type",
            "exclude_mood_feeling",
            "include_camera_vantage_height",
            "mention_watermark",
            "avoid_meta_descriptive_phrases",
            "character_name"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: JoyCaption2ExtraOption",
          "items": [
            {
              "type": "JoyCaption2ExtraOption"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerMask: DrawBBoxMaskV2": {
      "title": "LS_DrawBBoxMaskV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, bboxes, grow_top, grow_bottom, grow_left, grow_right, rounded_rect_radius, anti_aliasing",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "bboxes": {
              "type": "BBOXES"
            },
            "grow_top": {
              "type": "number"
            },
            "grow_bottom": {
              "type": "number"
            },
            "grow_left": {
              "type": "number"
            },
            "grow_right": {
              "type": "number"
            },
            "rounded_rect_radius": {
              "type": "number"
            },
            "anti_aliasing": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "bboxes",
            "grow_top",
            "grow_bottom",
            "grow_left",
            "grow_right",
            "rounded_rect_radius",
            "anti_aliasing"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: SAM2UltraV2": {
      "title": "LS_SAM2_ULTRA_V2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sam2_model, image, bboxes, bbox_select, select_index, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, max_megapixels",
          "properties": {
            "sam2_model": {
              "type": "LS_SAM2_MODEL"
            },
            "image": {
              "type": "IMAGE"
            },
            "bboxes": {
              "type": "BBOXES"
            },
            "bbox_select": {
              "type": "string"
            },
            "select_index": {
              "type": "string"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "sam2_model",
            "image",
            "bboxes",
            "bbox_select",
            "select_index",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: LoadSAM2Model": {
      "title": "LS_Load_SAM2_Model",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sam2_model, precision, device",
          "properties": {
            "sam2_model": {
              "type": "string"
            },
            "precision": {
              "type": "string"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["sam2_model", "precision", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LS_SAM2_MODEL",
          "items": [
            {
              "type": "LS_SAM2_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: SaveImagePlusV2": {
      "title": "SaveImagePlusV2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, custom_path, custom_filename, filename_prefix, timestamp, dpi, format, quality, meta_data, blind_watermark, save_workflow_as_json, preview",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "custom_path": {
              "type": "string"
            },
            "custom_filename": {
              "type": "string"
            },
            "filename_prefix": {
              "type": "string"
            },
            "timestamp": {
              "type": "string"
            },
            "dpi": {
              "type": "number"
            },
            "format": {
              "type": "string"
            },
            "quality": {
              "type": "number"
            },
            "meta_data": {
              "type": "BOOLEAN"
            },
            "blind_watermark": {
              "type": "string"
            },
            "save_workflow_as_json": {
              "type": "BOOLEAN"
            },
            "preview": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "images",
            "custom_path",
            "custom_filename",
            "filename_prefix",
            "timestamp",
            "dpi",
            "format",
            "quality",
            "meta_data",
            "blind_watermark",
            "save_workflow_as_json",
            "preview"
          ]
        }
      },
      "$category": "😺dzNodes/LayerUtility/SystemIO"
    },
    "LayerMask: SegmentAnythingUltra V3": {
      "title": "LS_SegmentAnythingUltraV3",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, sam_models, threshold, detail_method, detail_erode, detail_dilate, black_point, white_point, process_detail, prompt, device, max_megapixels",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "sam_models": {
              "type": "LS_SAM_MODELS"
            },
            "threshold": {
              "type": "number"
            },
            "detail_method": {
              "type": "string"
            },
            "detail_erode": {
              "type": "number"
            },
            "detail_dilate": {
              "type": "number"
            },
            "black_point": {
              "type": "number"
            },
            "white_point": {
              "type": "number"
            },
            "process_detail": {
              "type": "BOOLEAN"
            },
            "prompt": {
              "type": "string"
            },
            "device": {
              "type": "string"
            },
            "max_megapixels": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "sam_models",
            "threshold",
            "detail_method",
            "detail_erode",
            "detail_dilate",
            "black_point",
            "white_point",
            "process_detail",
            "prompt",
            "device",
            "max_megapixels"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerMask: LoadSegmentAnythingModels": {
      "title": "LS_LoadSAMModels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sam_model, grounding_dino_model",
          "properties": {
            "sam_model": {
              "type": "string"
            },
            "grounding_dino_model": {
              "type": "string"
            }
          },
          "required": ["sam_model", "grounding_dino_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LS_SAM_MODELS",
          "items": [
            {
              "type": "LS_SAM_MODELS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerMask"
    },
    "LayerUtility: LoadSmolLM2Model": {
      "title": "LS_Load_SmolLM2_Model",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, dtype, device",
          "properties": {
            "model": {
              "type": "string"
            },
            "dtype": {
              "type": "string"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["model", "dtype", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SmolLM2_MODEL",
          "items": [
            {
              "type": "SmolLM2_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: LoadSmolVLMModel": {
      "title": "LS_Load_SmolVLM_Model",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, dtype, device",
          "properties": {
            "model": {
              "type": "string"
            },
            "dtype": {
              "type": "string"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["model", "dtype", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SmolVLM_MODEL",
          "items": [
            {
              "type": "SmolVLM_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: SmolLM2": {
      "title": "LS_SmolLM2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: smolLM2_model, max_new_tokens, do_sample, temperature, top_p, system_prompt, user_prompt",
          "properties": {
            "smolLM2_model": {
              "type": "SmolLM2_MODEL"
            },
            "max_new_tokens": {
              "type": "number"
            },
            "do_sample": {
              "type": "BOOLEAN"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "system_prompt": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": [
            "smolLM2_model",
            "max_new_tokens",
            "do_sample",
            "temperature",
            "top_p",
            "system_prompt",
            "user_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: SmolVLM": {
      "title": "LS_SmolVLM",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, smolVLM_model, max_new_tokens, user_prompt",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "smolVLM_model": {
              "type": "SmolVLM_MODEL"
            },
            "max_new_tokens": {
              "type": "number"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "smolVLM_model",
            "max_new_tokens",
            "user_prompt"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ZhipuGLM4V": {
      "title": "LS_ZhipuImage",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, user_prompt",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            }
          },
          "required": ["image", "model", "user_prompt"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "LayerUtility: ZhipuGLM4": {
      "title": "LS_ZhipuText",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, user_prompt, history_length",
          "properties": {
            "model": {
              "type": "string"
            },
            "user_prompt": {
              "type": "string"
            },
            "history_length": {
              "type": "number"
            }
          },
          "required": ["model", "user_prompt", "history_length"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, GLM4_HISTORY",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "GLM4_HISTORY"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "😺dzNodes/LayerUtility"
    },
    "segformer_b2_clothes": {
      "title": "segformer_b2_clothes",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, Face, Hat, Hair, Upper_clothes, Skirt, Pants, Dress, Belt, shoe, leg, arm, Bag, Scarf",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "Face": {
              "type": "BOOLEAN"
            },
            "Hat": {
              "type": "BOOLEAN"
            },
            "Hair": {
              "type": "BOOLEAN"
            },
            "Upper_clothes": {
              "type": "BOOLEAN"
            },
            "Skirt": {
              "type": "BOOLEAN"
            },
            "Pants": {
              "type": "BOOLEAN"
            },
            "Dress": {
              "type": "BOOLEAN"
            },
            "Belt": {
              "type": "BOOLEAN"
            },
            "shoe": {
              "type": "BOOLEAN"
            },
            "leg": {
              "type": "BOOLEAN"
            },
            "arm": {
              "type": "BOOLEAN"
            },
            "Bag": {
              "type": "BOOLEAN"
            },
            "Scarf": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "Face",
            "Hat",
            "Hair",
            "Upper_clothes",
            "Skirt",
            "Pants",
            "Dress",
            "Belt",
            "shoe",
            "leg",
            "arm",
            "Bag",
            "Scarf"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "CXH"
    },
    "segformer_b3_fashion": {
      "title": "segformer_b3_fashion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, shirt, top, sweater, cardigan, jacket, vest, pants, shorts, skirt, coat, dress, jumpsuit, cape, glasses, hat, hairaccessory, tie, glove, watch, belt, legwarmer, tights, sock, shoe, bagwallet, scarf, umbrella, hood, collar, lapel, epaulette, sleeve, pocket, neckline, buckle, zipper, applique, bead, bow, flower, fringe, ribbon, rivet, ruffle, sequin, tassel",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "shirt": {
              "type": "BOOLEAN"
            },
            "top": {
              "type": "BOOLEAN"
            },
            "sweater": {
              "type": "BOOLEAN"
            },
            "cardigan": {
              "type": "BOOLEAN"
            },
            "jacket": {
              "type": "BOOLEAN"
            },
            "vest": {
              "type": "BOOLEAN"
            },
            "pants": {
              "type": "BOOLEAN"
            },
            "shorts": {
              "type": "BOOLEAN"
            },
            "skirt": {
              "type": "BOOLEAN"
            },
            "coat": {
              "type": "BOOLEAN"
            },
            "dress": {
              "type": "BOOLEAN"
            },
            "jumpsuit": {
              "type": "BOOLEAN"
            },
            "cape": {
              "type": "BOOLEAN"
            },
            "glasses": {
              "type": "BOOLEAN"
            },
            "hat": {
              "type": "BOOLEAN"
            },
            "hairaccessory": {
              "type": "BOOLEAN"
            },
            "tie": {
              "type": "BOOLEAN"
            },
            "glove": {
              "type": "BOOLEAN"
            },
            "watch": {
              "type": "BOOLEAN"
            },
            "belt": {
              "type": "BOOLEAN"
            },
            "legwarmer": {
              "type": "BOOLEAN"
            },
            "tights": {
              "type": "BOOLEAN"
            },
            "sock": {
              "type": "BOOLEAN"
            },
            "shoe": {
              "type": "BOOLEAN"
            },
            "bagwallet": {
              "type": "BOOLEAN"
            },
            "scarf": {
              "type": "BOOLEAN"
            },
            "umbrella": {
              "type": "BOOLEAN"
            },
            "hood": {
              "type": "BOOLEAN"
            },
            "collar": {
              "type": "BOOLEAN"
            },
            "lapel": {
              "type": "BOOLEAN"
            },
            "epaulette": {
              "type": "BOOLEAN"
            },
            "sleeve": {
              "type": "BOOLEAN"
            },
            "pocket": {
              "type": "BOOLEAN"
            },
            "neckline": {
              "type": "BOOLEAN"
            },
            "buckle": {
              "type": "BOOLEAN"
            },
            "zipper": {
              "type": "BOOLEAN"
            },
            "applique": {
              "type": "BOOLEAN"
            },
            "bead": {
              "type": "BOOLEAN"
            },
            "bow": {
              "type": "BOOLEAN"
            },
            "flower": {
              "type": "BOOLEAN"
            },
            "fringe": {
              "type": "BOOLEAN"
            },
            "ribbon": {
              "type": "BOOLEAN"
            },
            "rivet": {
              "type": "BOOLEAN"
            },
            "ruffle": {
              "type": "BOOLEAN"
            },
            "sequin": {
              "type": "BOOLEAN"
            },
            "tassel": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "shirt",
            "top",
            "sweater",
            "cardigan",
            "jacket",
            "vest",
            "pants",
            "shorts",
            "skirt",
            "coat",
            "dress",
            "jumpsuit",
            "cape",
            "glasses",
            "hat",
            "hairaccessory",
            "tie",
            "glove",
            "watch",
            "belt",
            "legwarmer",
            "tights",
            "sock",
            "shoe",
            "bagwallet",
            "scarf",
            "umbrella",
            "hood",
            "collar",
            "lapel",
            "epaulette",
            "sleeve",
            "pocket",
            "neckline",
            "buckle",
            "zipper",
            "applique",
            "bead",
            "bow",
            "flower",
            "fringe",
            "ribbon",
            "rivet",
            "ruffle",
            "sequin",
            "tassel"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "CXH"
    },
    "UltimateSDUpscale": {
      "title": "UltimateSDUpscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, positive, negative, vae, upscale_by, seed, steps, cfg, sampler_name, scheduler, denoise, upscale_model, mode_type, tile_width, tile_height, mask_blur, tile_padding, seam_fix_mode, seam_fix_denoise, seam_fix_width, seam_fix_mask_blur, seam_fix_padding, force_uniform_tiles, tiled_decode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "upscale_by": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "denoise": {
              "type": "number"
            },
            "upscale_model": {
              "type": "UPSCALE_MODEL"
            },
            "mode_type": {
              "type": "string"
            },
            "tile_width": {
              "type": "number"
            },
            "tile_height": {
              "type": "number"
            },
            "mask_blur": {
              "type": "number"
            },
            "tile_padding": {
              "type": "number"
            },
            "seam_fix_mode": {
              "type": "string"
            },
            "seam_fix_denoise": {
              "type": "number"
            },
            "seam_fix_width": {
              "type": "number"
            },
            "seam_fix_mask_blur": {
              "type": "number"
            },
            "seam_fix_padding": {
              "type": "number"
            },
            "force_uniform_tiles": {
              "type": "BOOLEAN"
            },
            "tiled_decode": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "model",
            "positive",
            "negative",
            "vae",
            "upscale_by",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "denoise",
            "upscale_model",
            "mode_type",
            "tile_width",
            "tile_height",
            "mask_blur",
            "tile_padding",
            "seam_fix_mode",
            "seam_fix_denoise",
            "seam_fix_width",
            "seam_fix_mask_blur",
            "seam_fix_padding",
            "force_uniform_tiles",
            "tiled_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "UltimateSDUpscaleNoUpscale": {
      "title": "UltimateSDUpscaleNoUpscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscaled_image, model, positive, negative, vae, seed, steps, cfg, sampler_name, scheduler, denoise, mode_type, tile_width, tile_height, mask_blur, tile_padding, seam_fix_mode, seam_fix_denoise, seam_fix_width, seam_fix_mask_blur, seam_fix_padding, force_uniform_tiles, tiled_decode",
          "properties": {
            "upscaled_image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "denoise": {
              "type": "number"
            },
            "mode_type": {
              "type": "string"
            },
            "tile_width": {
              "type": "number"
            },
            "tile_height": {
              "type": "number"
            },
            "mask_blur": {
              "type": "number"
            },
            "tile_padding": {
              "type": "number"
            },
            "seam_fix_mode": {
              "type": "string"
            },
            "seam_fix_denoise": {
              "type": "number"
            },
            "seam_fix_width": {
              "type": "number"
            },
            "seam_fix_mask_blur": {
              "type": "number"
            },
            "seam_fix_padding": {
              "type": "number"
            },
            "force_uniform_tiles": {
              "type": "BOOLEAN"
            },
            "tiled_decode": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "upscaled_image",
            "model",
            "positive",
            "negative",
            "vae",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "denoise",
            "mode_type",
            "tile_width",
            "tile_height",
            "mask_blur",
            "tile_padding",
            "seam_fix_mode",
            "seam_fix_denoise",
            "seam_fix_width",
            "seam_fix_mask_blur",
            "seam_fix_padding",
            "force_uniform_tiles",
            "tiled_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "UltimateSDUpscaleCustomSample": {
      "title": "UltimateSDUpscaleCustomSample",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, model, positive, negative, vae, upscale_by, seed, steps, cfg, sampler_name, scheduler, denoise, mode_type, tile_width, tile_height, mask_blur, tile_padding, seam_fix_mode, seam_fix_denoise, seam_fix_width, seam_fix_mask_blur, seam_fix_padding, force_uniform_tiles, tiled_decode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "model": {
              "type": "MODEL"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "upscale_by": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "denoise": {
              "type": "number"
            },
            "mode_type": {
              "type": "string"
            },
            "tile_width": {
              "type": "number"
            },
            "tile_height": {
              "type": "number"
            },
            "mask_blur": {
              "type": "number"
            },
            "tile_padding": {
              "type": "number"
            },
            "seam_fix_mode": {
              "type": "string"
            },
            "seam_fix_denoise": {
              "type": "number"
            },
            "seam_fix_width": {
              "type": "number"
            },
            "seam_fix_mask_blur": {
              "type": "number"
            },
            "seam_fix_padding": {
              "type": "number"
            },
            "force_uniform_tiles": {
              "type": "BOOLEAN"
            },
            "tiled_decode": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "image",
            "model",
            "positive",
            "negative",
            "vae",
            "upscale_by",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "denoise",
            "mode_type",
            "tile_width",
            "tile_height",
            "mask_blur",
            "tile_padding",
            "seam_fix_mode",
            "seam_fix_denoise",
            "seam_fix_width",
            "seam_fix_mask_blur",
            "seam_fix_padding",
            "force_uniform_tiles",
            "tiled_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/upscaling"
    },
    "KSampler (Efficient)": {
      "title": "TSC_KSampler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, denoise, preview_method, vae_decode",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "denoise": {
              "type": "number"
            },
            "preview_method": {
              "type": "string"
            },
            "vae_decode": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "denoise",
            "preview_method",
            "vae_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CONDITIONING, CONDITIONING, LATENT, VAE, IMAGE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "Efficiency Nodes/Sampling"
    },
    "KSampler Adv. (Efficient)": {
      "title": "TSC_KSamplerAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, add_noise, noise_seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, start_at_step, end_at_step, return_with_leftover_noise, preview_method, vae_decode",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "add_noise": {
              "type": "string"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "start_at_step": {
              "type": "number"
            },
            "end_at_step": {
              "type": "number"
            },
            "return_with_leftover_noise": {
              "type": "string"
            },
            "preview_method": {
              "type": "string"
            },
            "vae_decode": {
              "type": "string"
            }
          },
          "required": [
            "model",
            "add_noise",
            "noise_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "start_at_step",
            "end_at_step",
            "return_with_leftover_noise",
            "preview_method",
            "vae_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CONDITIONING, CONDITIONING, LATENT, VAE, IMAGE",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "Efficiency Nodes/Sampling"
    },
    "KSampler SDXL (Eff.)": {
      "title": "TSC_KSamplerSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sdxl_tuple, noise_seed, steps, cfg, sampler_name, scheduler, latent_image, start_at_step, refine_at_step, preview_method, vae_decode",
          "properties": {
            "sdxl_tuple": {
              "type": "SDXL_TUPLE"
            },
            "noise_seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "start_at_step": {
              "type": "number"
            },
            "refine_at_step": {
              "type": "number"
            },
            "preview_method": {
              "type": "string"
            },
            "vae_decode": {
              "type": "string"
            }
          },
          "required": [
            "sdxl_tuple",
            "noise_seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "latent_image",
            "start_at_step",
            "refine_at_step",
            "preview_method",
            "vae_decode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SDXL_TUPLE, LATENT, VAE, IMAGE",
          "items": [
            {
              "type": "SDXL_TUPLE"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "Efficiency Nodes/Sampling"
    },
    "Efficient Loader": {
      "title": "TSC_EfficientLoader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name, vae_name, clip_skip, lora_name, lora_model_strength, lora_clip_strength, positive, negative, token_normalization, weight_interpretation, empty_latent_width, empty_latent_height, batch_size",
          "properties": {
            "ckpt_name": {
              "type": "string"
            },
            "vae_name": {
              "type": "string"
            },
            "clip_skip": {
              "type": "number"
            },
            "lora_name": {
              "type": "string"
            },
            "lora_model_strength": {
              "type": "number"
            },
            "lora_clip_strength": {
              "type": "number"
            },
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "token_normalization": {
              "type": "string"
            },
            "weight_interpretation": {
              "type": "string"
            },
            "empty_latent_width": {
              "type": "number"
            },
            "empty_latent_height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "ckpt_name",
            "vae_name",
            "clip_skip",
            "lora_name",
            "lora_model_strength",
            "lora_clip_strength",
            "positive",
            "negative",
            "token_normalization",
            "weight_interpretation",
            "empty_latent_width",
            "empty_latent_height",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CONDITIONING, CONDITIONING, LATENT, VAE, CLIP, DEPENDENCIES",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "DEPENDENCIES"
            }
          ],
          "maxItems": 7,
          "minItems": 7
        }
      },
      "$category": "Efficiency Nodes/Loaders"
    },
    "Eff. Loader SDXL": {
      "title": "TSC_EfficientLoaderSDXL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_ckpt_name, base_clip_skip, refiner_ckpt_name, refiner_clip_skip, positive_ascore, negative_ascore, vae_name, positive, negative, token_normalization, weight_interpretation, empty_latent_width, empty_latent_height, batch_size",
          "properties": {
            "base_ckpt_name": {
              "type": "string"
            },
            "base_clip_skip": {
              "type": "number"
            },
            "refiner_ckpt_name": {
              "type": "string"
            },
            "refiner_clip_skip": {
              "type": "number"
            },
            "positive_ascore": {
              "type": "number"
            },
            "negative_ascore": {
              "type": "number"
            },
            "vae_name": {
              "type": "string"
            },
            "positive": {
              "type": "string"
            },
            "negative": {
              "type": "string"
            },
            "token_normalization": {
              "type": "string"
            },
            "weight_interpretation": {
              "type": "string"
            },
            "empty_latent_width": {
              "type": "number"
            },
            "empty_latent_height": {
              "type": "number"
            },
            "batch_size": {
              "type": "number"
            }
          },
          "required": [
            "base_ckpt_name",
            "base_clip_skip",
            "refiner_ckpt_name",
            "refiner_clip_skip",
            "positive_ascore",
            "negative_ascore",
            "vae_name",
            "positive",
            "negative",
            "token_normalization",
            "weight_interpretation",
            "empty_latent_width",
            "empty_latent_height",
            "batch_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SDXL_TUPLE, LATENT, VAE, DEPENDENCIES",
          "items": [
            {
              "type": "SDXL_TUPLE"
            },
            {
              "type": "LATENT"
            },
            {
              "type": "VAE"
            },
            {
              "type": "DEPENDENCIES"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "Efficiency Nodes/Loaders"
    },
    "LoRA Stacker": {
      "title": "TSC_LoRA_Stacker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_mode, lora_count, lora_name_1, lora_wt_1, model_str_1, clip_str_1, lora_name_2, lora_wt_2, model_str_2, clip_str_2, lora_name_3, lora_wt_3, model_str_3, clip_str_3, lora_name_4, lora_wt_4, model_str_4, clip_str_4, lora_name_5, lora_wt_5, model_str_5, clip_str_5, lora_name_6, lora_wt_6, model_str_6, clip_str_6, lora_name_7, lora_wt_7, model_str_7, clip_str_7, lora_name_8, lora_wt_8, model_str_8, clip_str_8, lora_name_9, lora_wt_9, model_str_9, clip_str_9, lora_name_10, lora_wt_10, model_str_10, clip_str_10, lora_name_11, lora_wt_11, model_str_11, clip_str_11, lora_name_12, lora_wt_12, model_str_12, clip_str_12, lora_name_13, lora_wt_13, model_str_13, clip_str_13, lora_name_14, lora_wt_14, model_str_14, clip_str_14, lora_name_15, lora_wt_15, model_str_15, clip_str_15, lora_name_16, lora_wt_16, model_str_16, clip_str_16, lora_name_17, lora_wt_17, model_str_17, clip_str_17, lora_name_18, lora_wt_18, model_str_18, clip_str_18, lora_name_19, lora_wt_19, model_str_19, clip_str_19, lora_name_20, lora_wt_20, model_str_20, clip_str_20, lora_name_21, lora_wt_21, model_str_21, clip_str_21, lora_name_22, lora_wt_22, model_str_22, clip_str_22, lora_name_23, lora_wt_23, model_str_23, clip_str_23, lora_name_24, lora_wt_24, model_str_24, clip_str_24, lora_name_25, lora_wt_25, model_str_25, clip_str_25, lora_name_26, lora_wt_26, model_str_26, clip_str_26, lora_name_27, lora_wt_27, model_str_27, clip_str_27, lora_name_28, lora_wt_28, model_str_28, clip_str_28, lora_name_29, lora_wt_29, model_str_29, clip_str_29, lora_name_30, lora_wt_30, model_str_30, clip_str_30, lora_name_31, lora_wt_31, model_str_31, clip_str_31, lora_name_32, lora_wt_32, model_str_32, clip_str_32, lora_name_33, lora_wt_33, model_str_33, clip_str_33, lora_name_34, lora_wt_34, model_str_34, clip_str_34, lora_name_35, lora_wt_35, model_str_35, clip_str_35, lora_name_36, lora_wt_36, model_str_36, clip_str_36, lora_name_37, lora_wt_37, model_str_37, clip_str_37, lora_name_38, lora_wt_38, model_str_38, clip_str_38, lora_name_39, lora_wt_39, model_str_39, clip_str_39, lora_name_40, lora_wt_40, model_str_40, clip_str_40, lora_name_41, lora_wt_41, model_str_41, clip_str_41, lora_name_42, lora_wt_42, model_str_42, clip_str_42, lora_name_43, lora_wt_43, model_str_43, clip_str_43, lora_name_44, lora_wt_44, model_str_44, clip_str_44, lora_name_45, lora_wt_45, model_str_45, clip_str_45, lora_name_46, lora_wt_46, model_str_46, clip_str_46, lora_name_47, lora_wt_47, model_str_47, clip_str_47, lora_name_48, lora_wt_48, model_str_48, clip_str_48, lora_name_49, lora_wt_49, model_str_49, clip_str_49",
          "properties": {
            "input_mode": {
              "type": "string"
            },
            "lora_count": {
              "type": "number"
            },
            "lora_name_1": {
              "type": "string"
            },
            "lora_wt_1": {
              "type": "number"
            },
            "model_str_1": {
              "type": "number"
            },
            "clip_str_1": {
              "type": "number"
            },
            "lora_name_2": {
              "type": "string"
            },
            "lora_wt_2": {
              "type": "number"
            },
            "model_str_2": {
              "type": "number"
            },
            "clip_str_2": {
              "type": "number"
            },
            "lora_name_3": {
              "type": "string"
            },
            "lora_wt_3": {
              "type": "number"
            },
            "model_str_3": {
              "type": "number"
            },
            "clip_str_3": {
              "type": "number"
            },
            "lora_name_4": {
              "type": "string"
            },
            "lora_wt_4": {
              "type": "number"
            },
            "model_str_4": {
              "type": "number"
            },
            "clip_str_4": {
              "type": "number"
            },
            "lora_name_5": {
              "type": "string"
            },
            "lora_wt_5": {
              "type": "number"
            },
            "model_str_5": {
              "type": "number"
            },
            "clip_str_5": {
              "type": "number"
            },
            "lora_name_6": {
              "type": "string"
            },
            "lora_wt_6": {
              "type": "number"
            },
            "model_str_6": {
              "type": "number"
            },
            "clip_str_6": {
              "type": "number"
            },
            "lora_name_7": {
              "type": "string"
            },
            "lora_wt_7": {
              "type": "number"
            },
            "model_str_7": {
              "type": "number"
            },
            "clip_str_7": {
              "type": "number"
            },
            "lora_name_8": {
              "type": "string"
            },
            "lora_wt_8": {
              "type": "number"
            },
            "model_str_8": {
              "type": "number"
            },
            "clip_str_8": {
              "type": "number"
            },
            "lora_name_9": {
              "type": "string"
            },
            "lora_wt_9": {
              "type": "number"
            },
            "model_str_9": {
              "type": "number"
            },
            "clip_str_9": {
              "type": "number"
            },
            "lora_name_10": {
              "type": "string"
            },
            "lora_wt_10": {
              "type": "number"
            },
            "model_str_10": {
              "type": "number"
            },
            "clip_str_10": {
              "type": "number"
            },
            "lora_name_11": {
              "type": "string"
            },
            "lora_wt_11": {
              "type": "number"
            },
            "model_str_11": {
              "type": "number"
            },
            "clip_str_11": {
              "type": "number"
            },
            "lora_name_12": {
              "type": "string"
            },
            "lora_wt_12": {
              "type": "number"
            },
            "model_str_12": {
              "type": "number"
            },
            "clip_str_12": {
              "type": "number"
            },
            "lora_name_13": {
              "type": "string"
            },
            "lora_wt_13": {
              "type": "number"
            },
            "model_str_13": {
              "type": "number"
            },
            "clip_str_13": {
              "type": "number"
            },
            "lora_name_14": {
              "type": "string"
            },
            "lora_wt_14": {
              "type": "number"
            },
            "model_str_14": {
              "type": "number"
            },
            "clip_str_14": {
              "type": "number"
            },
            "lora_name_15": {
              "type": "string"
            },
            "lora_wt_15": {
              "type": "number"
            },
            "model_str_15": {
              "type": "number"
            },
            "clip_str_15": {
              "type": "number"
            },
            "lora_name_16": {
              "type": "string"
            },
            "lora_wt_16": {
              "type": "number"
            },
            "model_str_16": {
              "type": "number"
            },
            "clip_str_16": {
              "type": "number"
            },
            "lora_name_17": {
              "type": "string"
            },
            "lora_wt_17": {
              "type": "number"
            },
            "model_str_17": {
              "type": "number"
            },
            "clip_str_17": {
              "type": "number"
            },
            "lora_name_18": {
              "type": "string"
            },
            "lora_wt_18": {
              "type": "number"
            },
            "model_str_18": {
              "type": "number"
            },
            "clip_str_18": {
              "type": "number"
            },
            "lora_name_19": {
              "type": "string"
            },
            "lora_wt_19": {
              "type": "number"
            },
            "model_str_19": {
              "type": "number"
            },
            "clip_str_19": {
              "type": "number"
            },
            "lora_name_20": {
              "type": "string"
            },
            "lora_wt_20": {
              "type": "number"
            },
            "model_str_20": {
              "type": "number"
            },
            "clip_str_20": {
              "type": "number"
            },
            "lora_name_21": {
              "type": "string"
            },
            "lora_wt_21": {
              "type": "number"
            },
            "model_str_21": {
              "type": "number"
            },
            "clip_str_21": {
              "type": "number"
            },
            "lora_name_22": {
              "type": "string"
            },
            "lora_wt_22": {
              "type": "number"
            },
            "model_str_22": {
              "type": "number"
            },
            "clip_str_22": {
              "type": "number"
            },
            "lora_name_23": {
              "type": "string"
            },
            "lora_wt_23": {
              "type": "number"
            },
            "model_str_23": {
              "type": "number"
            },
            "clip_str_23": {
              "type": "number"
            },
            "lora_name_24": {
              "type": "string"
            },
            "lora_wt_24": {
              "type": "number"
            },
            "model_str_24": {
              "type": "number"
            },
            "clip_str_24": {
              "type": "number"
            },
            "lora_name_25": {
              "type": "string"
            },
            "lora_wt_25": {
              "type": "number"
            },
            "model_str_25": {
              "type": "number"
            },
            "clip_str_25": {
              "type": "number"
            },
            "lora_name_26": {
              "type": "string"
            },
            "lora_wt_26": {
              "type": "number"
            },
            "model_str_26": {
              "type": "number"
            },
            "clip_str_26": {
              "type": "number"
            },
            "lora_name_27": {
              "type": "string"
            },
            "lora_wt_27": {
              "type": "number"
            },
            "model_str_27": {
              "type": "number"
            },
            "clip_str_27": {
              "type": "number"
            },
            "lora_name_28": {
              "type": "string"
            },
            "lora_wt_28": {
              "type": "number"
            },
            "model_str_28": {
              "type": "number"
            },
            "clip_str_28": {
              "type": "number"
            },
            "lora_name_29": {
              "type": "string"
            },
            "lora_wt_29": {
              "type": "number"
            },
            "model_str_29": {
              "type": "number"
            },
            "clip_str_29": {
              "type": "number"
            },
            "lora_name_30": {
              "type": "string"
            },
            "lora_wt_30": {
              "type": "number"
            },
            "model_str_30": {
              "type": "number"
            },
            "clip_str_30": {
              "type": "number"
            },
            "lora_name_31": {
              "type": "string"
            },
            "lora_wt_31": {
              "type": "number"
            },
            "model_str_31": {
              "type": "number"
            },
            "clip_str_31": {
              "type": "number"
            },
            "lora_name_32": {
              "type": "string"
            },
            "lora_wt_32": {
              "type": "number"
            },
            "model_str_32": {
              "type": "number"
            },
            "clip_str_32": {
              "type": "number"
            },
            "lora_name_33": {
              "type": "string"
            },
            "lora_wt_33": {
              "type": "number"
            },
            "model_str_33": {
              "type": "number"
            },
            "clip_str_33": {
              "type": "number"
            },
            "lora_name_34": {
              "type": "string"
            },
            "lora_wt_34": {
              "type": "number"
            },
            "model_str_34": {
              "type": "number"
            },
            "clip_str_34": {
              "type": "number"
            },
            "lora_name_35": {
              "type": "string"
            },
            "lora_wt_35": {
              "type": "number"
            },
            "model_str_35": {
              "type": "number"
            },
            "clip_str_35": {
              "type": "number"
            },
            "lora_name_36": {
              "type": "string"
            },
            "lora_wt_36": {
              "type": "number"
            },
            "model_str_36": {
              "type": "number"
            },
            "clip_str_36": {
              "type": "number"
            },
            "lora_name_37": {
              "type": "string"
            },
            "lora_wt_37": {
              "type": "number"
            },
            "model_str_37": {
              "type": "number"
            },
            "clip_str_37": {
              "type": "number"
            },
            "lora_name_38": {
              "type": "string"
            },
            "lora_wt_38": {
              "type": "number"
            },
            "model_str_38": {
              "type": "number"
            },
            "clip_str_38": {
              "type": "number"
            },
            "lora_name_39": {
              "type": "string"
            },
            "lora_wt_39": {
              "type": "number"
            },
            "model_str_39": {
              "type": "number"
            },
            "clip_str_39": {
              "type": "number"
            },
            "lora_name_40": {
              "type": "string"
            },
            "lora_wt_40": {
              "type": "number"
            },
            "model_str_40": {
              "type": "number"
            },
            "clip_str_40": {
              "type": "number"
            },
            "lora_name_41": {
              "type": "string"
            },
            "lora_wt_41": {
              "type": "number"
            },
            "model_str_41": {
              "type": "number"
            },
            "clip_str_41": {
              "type": "number"
            },
            "lora_name_42": {
              "type": "string"
            },
            "lora_wt_42": {
              "type": "number"
            },
            "model_str_42": {
              "type": "number"
            },
            "clip_str_42": {
              "type": "number"
            },
            "lora_name_43": {
              "type": "string"
            },
            "lora_wt_43": {
              "type": "number"
            },
            "model_str_43": {
              "type": "number"
            },
            "clip_str_43": {
              "type": "number"
            },
            "lora_name_44": {
              "type": "string"
            },
            "lora_wt_44": {
              "type": "number"
            },
            "model_str_44": {
              "type": "number"
            },
            "clip_str_44": {
              "type": "number"
            },
            "lora_name_45": {
              "type": "string"
            },
            "lora_wt_45": {
              "type": "number"
            },
            "model_str_45": {
              "type": "number"
            },
            "clip_str_45": {
              "type": "number"
            },
            "lora_name_46": {
              "type": "string"
            },
            "lora_wt_46": {
              "type": "number"
            },
            "model_str_46": {
              "type": "number"
            },
            "clip_str_46": {
              "type": "number"
            },
            "lora_name_47": {
              "type": "string"
            },
            "lora_wt_47": {
              "type": "number"
            },
            "model_str_47": {
              "type": "number"
            },
            "clip_str_47": {
              "type": "number"
            },
            "lora_name_48": {
              "type": "string"
            },
            "lora_wt_48": {
              "type": "number"
            },
            "model_str_48": {
              "type": "number"
            },
            "clip_str_48": {
              "type": "number"
            },
            "lora_name_49": {
              "type": "string"
            },
            "lora_wt_49": {
              "type": "number"
            },
            "model_str_49": {
              "type": "number"
            },
            "clip_str_49": {
              "type": "number"
            }
          },
          "required": [
            "input_mode",
            "lora_count",
            "lora_name_1",
            "lora_wt_1",
            "model_str_1",
            "clip_str_1",
            "lora_name_2",
            "lora_wt_2",
            "model_str_2",
            "clip_str_2",
            "lora_name_3",
            "lora_wt_3",
            "model_str_3",
            "clip_str_3",
            "lora_name_4",
            "lora_wt_4",
            "model_str_4",
            "clip_str_4",
            "lora_name_5",
            "lora_wt_5",
            "model_str_5",
            "clip_str_5",
            "lora_name_6",
            "lora_wt_6",
            "model_str_6",
            "clip_str_6",
            "lora_name_7",
            "lora_wt_7",
            "model_str_7",
            "clip_str_7",
            "lora_name_8",
            "lora_wt_8",
            "model_str_8",
            "clip_str_8",
            "lora_name_9",
            "lora_wt_9",
            "model_str_9",
            "clip_str_9",
            "lora_name_10",
            "lora_wt_10",
            "model_str_10",
            "clip_str_10",
            "lora_name_11",
            "lora_wt_11",
            "model_str_11",
            "clip_str_11",
            "lora_name_12",
            "lora_wt_12",
            "model_str_12",
            "clip_str_12",
            "lora_name_13",
            "lora_wt_13",
            "model_str_13",
            "clip_str_13",
            "lora_name_14",
            "lora_wt_14",
            "model_str_14",
            "clip_str_14",
            "lora_name_15",
            "lora_wt_15",
            "model_str_15",
            "clip_str_15",
            "lora_name_16",
            "lora_wt_16",
            "model_str_16",
            "clip_str_16",
            "lora_name_17",
            "lora_wt_17",
            "model_str_17",
            "clip_str_17",
            "lora_name_18",
            "lora_wt_18",
            "model_str_18",
            "clip_str_18",
            "lora_name_19",
            "lora_wt_19",
            "model_str_19",
            "clip_str_19",
            "lora_name_20",
            "lora_wt_20",
            "model_str_20",
            "clip_str_20",
            "lora_name_21",
            "lora_wt_21",
            "model_str_21",
            "clip_str_21",
            "lora_name_22",
            "lora_wt_22",
            "model_str_22",
            "clip_str_22",
            "lora_name_23",
            "lora_wt_23",
            "model_str_23",
            "clip_str_23",
            "lora_name_24",
            "lora_wt_24",
            "model_str_24",
            "clip_str_24",
            "lora_name_25",
            "lora_wt_25",
            "model_str_25",
            "clip_str_25",
            "lora_name_26",
            "lora_wt_26",
            "model_str_26",
            "clip_str_26",
            "lora_name_27",
            "lora_wt_27",
            "model_str_27",
            "clip_str_27",
            "lora_name_28",
            "lora_wt_28",
            "model_str_28",
            "clip_str_28",
            "lora_name_29",
            "lora_wt_29",
            "model_str_29",
            "clip_str_29",
            "lora_name_30",
            "lora_wt_30",
            "model_str_30",
            "clip_str_30",
            "lora_name_31",
            "lora_wt_31",
            "model_str_31",
            "clip_str_31",
            "lora_name_32",
            "lora_wt_32",
            "model_str_32",
            "clip_str_32",
            "lora_name_33",
            "lora_wt_33",
            "model_str_33",
            "clip_str_33",
            "lora_name_34",
            "lora_wt_34",
            "model_str_34",
            "clip_str_34",
            "lora_name_35",
            "lora_wt_35",
            "model_str_35",
            "clip_str_35",
            "lora_name_36",
            "lora_wt_36",
            "model_str_36",
            "clip_str_36",
            "lora_name_37",
            "lora_wt_37",
            "model_str_37",
            "clip_str_37",
            "lora_name_38",
            "lora_wt_38",
            "model_str_38",
            "clip_str_38",
            "lora_name_39",
            "lora_wt_39",
            "model_str_39",
            "clip_str_39",
            "lora_name_40",
            "lora_wt_40",
            "model_str_40",
            "clip_str_40",
            "lora_name_41",
            "lora_wt_41",
            "model_str_41",
            "clip_str_41",
            "lora_name_42",
            "lora_wt_42",
            "model_str_42",
            "clip_str_42",
            "lora_name_43",
            "lora_wt_43",
            "model_str_43",
            "clip_str_43",
            "lora_name_44",
            "lora_wt_44",
            "model_str_44",
            "clip_str_44",
            "lora_name_45",
            "lora_wt_45",
            "model_str_45",
            "clip_str_45",
            "lora_name_46",
            "lora_wt_46",
            "model_str_46",
            "clip_str_46",
            "lora_name_47",
            "lora_wt_47",
            "model_str_47",
            "clip_str_47",
            "lora_name_48",
            "lora_wt_48",
            "model_str_48",
            "clip_str_48",
            "lora_name_49",
            "lora_wt_49",
            "model_str_49",
            "clip_str_49"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LORA_STACK",
          "items": [
            {
              "type": "LORA_STACK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Stackers"
    },
    "Control Net Stacker": {
      "title": "TSC_Control_Net_Stacker",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, image, strength, start_percent, end_percent",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "control_net",
            "image",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET_STACK",
          "items": [
            {
              "type": "CONTROL_NET_STACK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Stackers"
    },
    "Apply ControlNet Stack": {
      "title": "TSC_Apply_ControlNet_Stack",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: positive, negative",
          "properties": {
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            }
          },
          "required": ["positive", "negative"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Efficiency Nodes/Stackers"
    },
    "Unpack SDXL Tuple": {
      "title": "TSC_Unpack_SDXL_Tuple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sdxl_tuple",
          "properties": {
            "sdxl_tuple": {
              "type": "SDXL_TUPLE"
            }
          },
          "required": ["sdxl_tuple"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, CONDITIONING, CONDITIONING, MODEL, CLIP, CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 8,
          "minItems": 8
        }
      },
      "$category": "Efficiency Nodes/Misc"
    },
    "Pack SDXL Tuple": {
      "title": "TSC_Pack_SDXL_Tuple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_model, base_clip, base_positive, base_negative, refiner_model, refiner_clip, refiner_positive, refiner_negative",
          "properties": {
            "base_model": {
              "type": "MODEL"
            },
            "base_clip": {
              "type": "CLIP"
            },
            "base_positive": {
              "type": "CONDITIONING"
            },
            "base_negative": {
              "type": "CONDITIONING"
            },
            "refiner_model": {
              "type": "MODEL"
            },
            "refiner_clip": {
              "type": "CLIP"
            },
            "refiner_positive": {
              "type": "CONDITIONING"
            },
            "refiner_negative": {
              "type": "CONDITIONING"
            }
          },
          "required": [
            "base_model",
            "base_clip",
            "base_positive",
            "base_negative",
            "refiner_model",
            "refiner_clip",
            "refiner_positive",
            "refiner_negative"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SDXL_TUPLE",
          "items": [
            {
              "type": "SDXL_TUPLE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Misc"
    },
    "XY Plot": {
      "title": "TSC_XYplot",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: grid_spacing, XY_flip, Y_label_orientation, cache_models, ksampler_output_image",
          "properties": {
            "grid_spacing": {
              "type": "number"
            },
            "XY_flip": {
              "type": "string"
            },
            "Y_label_orientation": {
              "type": "string"
            },
            "cache_models": {
              "type": "string"
            },
            "ksampler_output_image": {
              "type": "string"
            }
          },
          "required": [
            "grid_spacing",
            "XY_flip",
            "Y_label_orientation",
            "cache_models",
            "ksampler_output_image"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SCRIPT",
          "items": [
            {
              "type": "SCRIPT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Scripts"
    },
    "XY Input: Seeds++ Batch": {
      "title": "TSC_XYplot_SeedsBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_count",
          "properties": {
            "batch_count": {
              "type": "number"
            }
          },
          "required": ["batch_count"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Add/Return Noise": {
      "title": "TSC_XYplot_AddReturnNoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: XY_type",
          "properties": {
            "XY_type": {
              "type": "string"
            }
          },
          "required": ["XY_type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Steps": {
      "title": "TSC_XYplot_Steps",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_parameter, batch_count, first_step, last_step, first_start_step, last_start_step, first_end_step, last_end_step, first_refine_step, last_refine_step",
          "properties": {
            "target_parameter": {
              "type": "string"
            },
            "batch_count": {
              "type": "number"
            },
            "first_step": {
              "type": "number"
            },
            "last_step": {
              "type": "number"
            },
            "first_start_step": {
              "type": "number"
            },
            "last_start_step": {
              "type": "number"
            },
            "first_end_step": {
              "type": "number"
            },
            "last_end_step": {
              "type": "number"
            },
            "first_refine_step": {
              "type": "number"
            },
            "last_refine_step": {
              "type": "number"
            }
          },
          "required": [
            "target_parameter",
            "batch_count",
            "first_step",
            "last_step",
            "first_start_step",
            "last_start_step",
            "first_end_step",
            "last_end_step",
            "first_refine_step",
            "last_refine_step"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: CFG Scale": {
      "title": "TSC_XYplot_CFG",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_count, first_cfg, last_cfg",
          "properties": {
            "batch_count": {
              "type": "number"
            },
            "first_cfg": {
              "type": "number"
            },
            "last_cfg": {
              "type": "number"
            }
          },
          "required": ["batch_count", "first_cfg", "last_cfg"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Sampler/Scheduler": {
      "title": "TSC_XYplot_Sampler_Scheduler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_parameter, input_count, sampler_1, scheduler_1, sampler_2, scheduler_2, sampler_3, scheduler_3, sampler_4, scheduler_4, sampler_5, scheduler_5, sampler_6, scheduler_6, sampler_7, scheduler_7, sampler_8, scheduler_8, sampler_9, scheduler_9, sampler_10, scheduler_10, sampler_11, scheduler_11, sampler_12, scheduler_12, sampler_13, scheduler_13, sampler_14, scheduler_14, sampler_15, scheduler_15, sampler_16, scheduler_16, sampler_17, scheduler_17, sampler_18, scheduler_18, sampler_19, scheduler_19, sampler_20, scheduler_20, sampler_21, scheduler_21, sampler_22, scheduler_22, sampler_23, scheduler_23, sampler_24, scheduler_24, sampler_25, scheduler_25, sampler_26, scheduler_26, sampler_27, scheduler_27, sampler_28, scheduler_28, sampler_29, scheduler_29, sampler_30, scheduler_30, sampler_31, scheduler_31, sampler_32, scheduler_32, sampler_33, scheduler_33, sampler_34, scheduler_34, sampler_35, scheduler_35, sampler_36, scheduler_36, sampler_37, scheduler_37, sampler_38, scheduler_38, sampler_39, scheduler_39, sampler_40, scheduler_40, sampler_41, scheduler_41, sampler_42, scheduler_42, sampler_43, scheduler_43, sampler_44, scheduler_44, sampler_45, scheduler_45, sampler_46, scheduler_46, sampler_47, scheduler_47, sampler_48, scheduler_48, sampler_49, scheduler_49, sampler_50, scheduler_50",
          "properties": {
            "target_parameter": {
              "type": "string"
            },
            "input_count": {
              "type": "number"
            },
            "sampler_1": {
              "type": "string"
            },
            "scheduler_1": {
              "type": "string"
            },
            "sampler_2": {
              "type": "string"
            },
            "scheduler_2": {
              "type": "string"
            },
            "sampler_3": {
              "type": "string"
            },
            "scheduler_3": {
              "type": "string"
            },
            "sampler_4": {
              "type": "string"
            },
            "scheduler_4": {
              "type": "string"
            },
            "sampler_5": {
              "type": "string"
            },
            "scheduler_5": {
              "type": "string"
            },
            "sampler_6": {
              "type": "string"
            },
            "scheduler_6": {
              "type": "string"
            },
            "sampler_7": {
              "type": "string"
            },
            "scheduler_7": {
              "type": "string"
            },
            "sampler_8": {
              "type": "string"
            },
            "scheduler_8": {
              "type": "string"
            },
            "sampler_9": {
              "type": "string"
            },
            "scheduler_9": {
              "type": "string"
            },
            "sampler_10": {
              "type": "string"
            },
            "scheduler_10": {
              "type": "string"
            },
            "sampler_11": {
              "type": "string"
            },
            "scheduler_11": {
              "type": "string"
            },
            "sampler_12": {
              "type": "string"
            },
            "scheduler_12": {
              "type": "string"
            },
            "sampler_13": {
              "type": "string"
            },
            "scheduler_13": {
              "type": "string"
            },
            "sampler_14": {
              "type": "string"
            },
            "scheduler_14": {
              "type": "string"
            },
            "sampler_15": {
              "type": "string"
            },
            "scheduler_15": {
              "type": "string"
            },
            "sampler_16": {
              "type": "string"
            },
            "scheduler_16": {
              "type": "string"
            },
            "sampler_17": {
              "type": "string"
            },
            "scheduler_17": {
              "type": "string"
            },
            "sampler_18": {
              "type": "string"
            },
            "scheduler_18": {
              "type": "string"
            },
            "sampler_19": {
              "type": "string"
            },
            "scheduler_19": {
              "type": "string"
            },
            "sampler_20": {
              "type": "string"
            },
            "scheduler_20": {
              "type": "string"
            },
            "sampler_21": {
              "type": "string"
            },
            "scheduler_21": {
              "type": "string"
            },
            "sampler_22": {
              "type": "string"
            },
            "scheduler_22": {
              "type": "string"
            },
            "sampler_23": {
              "type": "string"
            },
            "scheduler_23": {
              "type": "string"
            },
            "sampler_24": {
              "type": "string"
            },
            "scheduler_24": {
              "type": "string"
            },
            "sampler_25": {
              "type": "string"
            },
            "scheduler_25": {
              "type": "string"
            },
            "sampler_26": {
              "type": "string"
            },
            "scheduler_26": {
              "type": "string"
            },
            "sampler_27": {
              "type": "string"
            },
            "scheduler_27": {
              "type": "string"
            },
            "sampler_28": {
              "type": "string"
            },
            "scheduler_28": {
              "type": "string"
            },
            "sampler_29": {
              "type": "string"
            },
            "scheduler_29": {
              "type": "string"
            },
            "sampler_30": {
              "type": "string"
            },
            "scheduler_30": {
              "type": "string"
            },
            "sampler_31": {
              "type": "string"
            },
            "scheduler_31": {
              "type": "string"
            },
            "sampler_32": {
              "type": "string"
            },
            "scheduler_32": {
              "type": "string"
            },
            "sampler_33": {
              "type": "string"
            },
            "scheduler_33": {
              "type": "string"
            },
            "sampler_34": {
              "type": "string"
            },
            "scheduler_34": {
              "type": "string"
            },
            "sampler_35": {
              "type": "string"
            },
            "scheduler_35": {
              "type": "string"
            },
            "sampler_36": {
              "type": "string"
            },
            "scheduler_36": {
              "type": "string"
            },
            "sampler_37": {
              "type": "string"
            },
            "scheduler_37": {
              "type": "string"
            },
            "sampler_38": {
              "type": "string"
            },
            "scheduler_38": {
              "type": "string"
            },
            "sampler_39": {
              "type": "string"
            },
            "scheduler_39": {
              "type": "string"
            },
            "sampler_40": {
              "type": "string"
            },
            "scheduler_40": {
              "type": "string"
            },
            "sampler_41": {
              "type": "string"
            },
            "scheduler_41": {
              "type": "string"
            },
            "sampler_42": {
              "type": "string"
            },
            "scheduler_42": {
              "type": "string"
            },
            "sampler_43": {
              "type": "string"
            },
            "scheduler_43": {
              "type": "string"
            },
            "sampler_44": {
              "type": "string"
            },
            "scheduler_44": {
              "type": "string"
            },
            "sampler_45": {
              "type": "string"
            },
            "scheduler_45": {
              "type": "string"
            },
            "sampler_46": {
              "type": "string"
            },
            "scheduler_46": {
              "type": "string"
            },
            "sampler_47": {
              "type": "string"
            },
            "scheduler_47": {
              "type": "string"
            },
            "sampler_48": {
              "type": "string"
            },
            "scheduler_48": {
              "type": "string"
            },
            "sampler_49": {
              "type": "string"
            },
            "scheduler_49": {
              "type": "string"
            },
            "sampler_50": {
              "type": "string"
            },
            "scheduler_50": {
              "type": "string"
            }
          },
          "required": [
            "target_parameter",
            "input_count",
            "sampler_1",
            "scheduler_1",
            "sampler_2",
            "scheduler_2",
            "sampler_3",
            "scheduler_3",
            "sampler_4",
            "scheduler_4",
            "sampler_5",
            "scheduler_5",
            "sampler_6",
            "scheduler_6",
            "sampler_7",
            "scheduler_7",
            "sampler_8",
            "scheduler_8",
            "sampler_9",
            "scheduler_9",
            "sampler_10",
            "scheduler_10",
            "sampler_11",
            "scheduler_11",
            "sampler_12",
            "scheduler_12",
            "sampler_13",
            "scheduler_13",
            "sampler_14",
            "scheduler_14",
            "sampler_15",
            "scheduler_15",
            "sampler_16",
            "scheduler_16",
            "sampler_17",
            "scheduler_17",
            "sampler_18",
            "scheduler_18",
            "sampler_19",
            "scheduler_19",
            "sampler_20",
            "scheduler_20",
            "sampler_21",
            "scheduler_21",
            "sampler_22",
            "scheduler_22",
            "sampler_23",
            "scheduler_23",
            "sampler_24",
            "scheduler_24",
            "sampler_25",
            "scheduler_25",
            "sampler_26",
            "scheduler_26",
            "sampler_27",
            "scheduler_27",
            "sampler_28",
            "scheduler_28",
            "sampler_29",
            "scheduler_29",
            "sampler_30",
            "scheduler_30",
            "sampler_31",
            "scheduler_31",
            "sampler_32",
            "scheduler_32",
            "sampler_33",
            "scheduler_33",
            "sampler_34",
            "scheduler_34",
            "sampler_35",
            "scheduler_35",
            "sampler_36",
            "scheduler_36",
            "sampler_37",
            "scheduler_37",
            "sampler_38",
            "scheduler_38",
            "sampler_39",
            "scheduler_39",
            "sampler_40",
            "scheduler_40",
            "sampler_41",
            "scheduler_41",
            "sampler_42",
            "scheduler_42",
            "sampler_43",
            "scheduler_43",
            "sampler_44",
            "scheduler_44",
            "sampler_45",
            "scheduler_45",
            "sampler_46",
            "scheduler_46",
            "sampler_47",
            "scheduler_47",
            "sampler_48",
            "scheduler_48",
            "sampler_49",
            "scheduler_49",
            "sampler_50",
            "scheduler_50"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Denoise": {
      "title": "TSC_XYplot_Denoise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: batch_count, first_denoise, last_denoise",
          "properties": {
            "batch_count": {
              "type": "number"
            },
            "first_denoise": {
              "type": "number"
            },
            "last_denoise": {
              "type": "number"
            }
          },
          "required": ["batch_count", "first_denoise", "last_denoise"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: VAE": {
      "title": "TSC_XYplot_VAE",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_mode, batch_path, subdirectories, batch_sort, batch_max, vae_count, vae_name_1, vae_name_2, vae_name_3, vae_name_4, vae_name_5, vae_name_6, vae_name_7, vae_name_8, vae_name_9, vae_name_10, vae_name_11, vae_name_12, vae_name_13, vae_name_14, vae_name_15, vae_name_16, vae_name_17, vae_name_18, vae_name_19, vae_name_20, vae_name_21, vae_name_22, vae_name_23, vae_name_24, vae_name_25, vae_name_26, vae_name_27, vae_name_28, vae_name_29, vae_name_30, vae_name_31, vae_name_32, vae_name_33, vae_name_34, vae_name_35, vae_name_36, vae_name_37, vae_name_38, vae_name_39, vae_name_40, vae_name_41, vae_name_42, vae_name_43, vae_name_44, vae_name_45, vae_name_46, vae_name_47, vae_name_48, vae_name_49, vae_name_50",
          "properties": {
            "input_mode": {
              "type": "string"
            },
            "batch_path": {
              "type": "string"
            },
            "subdirectories": {
              "type": "BOOLEAN"
            },
            "batch_sort": {
              "type": "string"
            },
            "batch_max": {
              "type": "number"
            },
            "vae_count": {
              "type": "number"
            },
            "vae_name_1": {
              "type": "string"
            },
            "vae_name_2": {
              "type": "string"
            },
            "vae_name_3": {
              "type": "string"
            },
            "vae_name_4": {
              "type": "string"
            },
            "vae_name_5": {
              "type": "string"
            },
            "vae_name_6": {
              "type": "string"
            },
            "vae_name_7": {
              "type": "string"
            },
            "vae_name_8": {
              "type": "string"
            },
            "vae_name_9": {
              "type": "string"
            },
            "vae_name_10": {
              "type": "string"
            },
            "vae_name_11": {
              "type": "string"
            },
            "vae_name_12": {
              "type": "string"
            },
            "vae_name_13": {
              "type": "string"
            },
            "vae_name_14": {
              "type": "string"
            },
            "vae_name_15": {
              "type": "string"
            },
            "vae_name_16": {
              "type": "string"
            },
            "vae_name_17": {
              "type": "string"
            },
            "vae_name_18": {
              "type": "string"
            },
            "vae_name_19": {
              "type": "string"
            },
            "vae_name_20": {
              "type": "string"
            },
            "vae_name_21": {
              "type": "string"
            },
            "vae_name_22": {
              "type": "string"
            },
            "vae_name_23": {
              "type": "string"
            },
            "vae_name_24": {
              "type": "string"
            },
            "vae_name_25": {
              "type": "string"
            },
            "vae_name_26": {
              "type": "string"
            },
            "vae_name_27": {
              "type": "string"
            },
            "vae_name_28": {
              "type": "string"
            },
            "vae_name_29": {
              "type": "string"
            },
            "vae_name_30": {
              "type": "string"
            },
            "vae_name_31": {
              "type": "string"
            },
            "vae_name_32": {
              "type": "string"
            },
            "vae_name_33": {
              "type": "string"
            },
            "vae_name_34": {
              "type": "string"
            },
            "vae_name_35": {
              "type": "string"
            },
            "vae_name_36": {
              "type": "string"
            },
            "vae_name_37": {
              "type": "string"
            },
            "vae_name_38": {
              "type": "string"
            },
            "vae_name_39": {
              "type": "string"
            },
            "vae_name_40": {
              "type": "string"
            },
            "vae_name_41": {
              "type": "string"
            },
            "vae_name_42": {
              "type": "string"
            },
            "vae_name_43": {
              "type": "string"
            },
            "vae_name_44": {
              "type": "string"
            },
            "vae_name_45": {
              "type": "string"
            },
            "vae_name_46": {
              "type": "string"
            },
            "vae_name_47": {
              "type": "string"
            },
            "vae_name_48": {
              "type": "string"
            },
            "vae_name_49": {
              "type": "string"
            },
            "vae_name_50": {
              "type": "string"
            }
          },
          "required": [
            "input_mode",
            "batch_path",
            "subdirectories",
            "batch_sort",
            "batch_max",
            "vae_count",
            "vae_name_1",
            "vae_name_2",
            "vae_name_3",
            "vae_name_4",
            "vae_name_5",
            "vae_name_6",
            "vae_name_7",
            "vae_name_8",
            "vae_name_9",
            "vae_name_10",
            "vae_name_11",
            "vae_name_12",
            "vae_name_13",
            "vae_name_14",
            "vae_name_15",
            "vae_name_16",
            "vae_name_17",
            "vae_name_18",
            "vae_name_19",
            "vae_name_20",
            "vae_name_21",
            "vae_name_22",
            "vae_name_23",
            "vae_name_24",
            "vae_name_25",
            "vae_name_26",
            "vae_name_27",
            "vae_name_28",
            "vae_name_29",
            "vae_name_30",
            "vae_name_31",
            "vae_name_32",
            "vae_name_33",
            "vae_name_34",
            "vae_name_35",
            "vae_name_36",
            "vae_name_37",
            "vae_name_38",
            "vae_name_39",
            "vae_name_40",
            "vae_name_41",
            "vae_name_42",
            "vae_name_43",
            "vae_name_44",
            "vae_name_45",
            "vae_name_46",
            "vae_name_47",
            "vae_name_48",
            "vae_name_49",
            "vae_name_50"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Prompt S/R": {
      "title": "TSC_XYplot_PromptSR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_prompt, search_txt, replace_count, replace_1, replace_2, replace_3, replace_4, replace_5, replace_6, replace_7, replace_8, replace_9, replace_10, replace_11, replace_12, replace_13, replace_14, replace_15, replace_16, replace_17, replace_18, replace_19, replace_20, replace_21, replace_22, replace_23, replace_24, replace_25, replace_26, replace_27, replace_28, replace_29, replace_30, replace_31, replace_32, replace_33, replace_34, replace_35, replace_36, replace_37, replace_38, replace_39, replace_40, replace_41, replace_42, replace_43, replace_44, replace_45, replace_46, replace_47, replace_48, replace_49",
          "properties": {
            "target_prompt": {
              "type": "string"
            },
            "search_txt": {
              "type": "string"
            },
            "replace_count": {
              "type": "number"
            },
            "replace_1": {
              "type": "string"
            },
            "replace_2": {
              "type": "string"
            },
            "replace_3": {
              "type": "string"
            },
            "replace_4": {
              "type": "string"
            },
            "replace_5": {
              "type": "string"
            },
            "replace_6": {
              "type": "string"
            },
            "replace_7": {
              "type": "string"
            },
            "replace_8": {
              "type": "string"
            },
            "replace_9": {
              "type": "string"
            },
            "replace_10": {
              "type": "string"
            },
            "replace_11": {
              "type": "string"
            },
            "replace_12": {
              "type": "string"
            },
            "replace_13": {
              "type": "string"
            },
            "replace_14": {
              "type": "string"
            },
            "replace_15": {
              "type": "string"
            },
            "replace_16": {
              "type": "string"
            },
            "replace_17": {
              "type": "string"
            },
            "replace_18": {
              "type": "string"
            },
            "replace_19": {
              "type": "string"
            },
            "replace_20": {
              "type": "string"
            },
            "replace_21": {
              "type": "string"
            },
            "replace_22": {
              "type": "string"
            },
            "replace_23": {
              "type": "string"
            },
            "replace_24": {
              "type": "string"
            },
            "replace_25": {
              "type": "string"
            },
            "replace_26": {
              "type": "string"
            },
            "replace_27": {
              "type": "string"
            },
            "replace_28": {
              "type": "string"
            },
            "replace_29": {
              "type": "string"
            },
            "replace_30": {
              "type": "string"
            },
            "replace_31": {
              "type": "string"
            },
            "replace_32": {
              "type": "string"
            },
            "replace_33": {
              "type": "string"
            },
            "replace_34": {
              "type": "string"
            },
            "replace_35": {
              "type": "string"
            },
            "replace_36": {
              "type": "string"
            },
            "replace_37": {
              "type": "string"
            },
            "replace_38": {
              "type": "string"
            },
            "replace_39": {
              "type": "string"
            },
            "replace_40": {
              "type": "string"
            },
            "replace_41": {
              "type": "string"
            },
            "replace_42": {
              "type": "string"
            },
            "replace_43": {
              "type": "string"
            },
            "replace_44": {
              "type": "string"
            },
            "replace_45": {
              "type": "string"
            },
            "replace_46": {
              "type": "string"
            },
            "replace_47": {
              "type": "string"
            },
            "replace_48": {
              "type": "string"
            },
            "replace_49": {
              "type": "string"
            }
          },
          "required": [
            "target_prompt",
            "search_txt",
            "replace_count",
            "replace_1",
            "replace_2",
            "replace_3",
            "replace_4",
            "replace_5",
            "replace_6",
            "replace_7",
            "replace_8",
            "replace_9",
            "replace_10",
            "replace_11",
            "replace_12",
            "replace_13",
            "replace_14",
            "replace_15",
            "replace_16",
            "replace_17",
            "replace_18",
            "replace_19",
            "replace_20",
            "replace_21",
            "replace_22",
            "replace_23",
            "replace_24",
            "replace_25",
            "replace_26",
            "replace_27",
            "replace_28",
            "replace_29",
            "replace_30",
            "replace_31",
            "replace_32",
            "replace_33",
            "replace_34",
            "replace_35",
            "replace_36",
            "replace_37",
            "replace_38",
            "replace_39",
            "replace_40",
            "replace_41",
            "replace_42",
            "replace_43",
            "replace_44",
            "replace_45",
            "replace_46",
            "replace_47",
            "replace_48",
            "replace_49"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Aesthetic Score": {
      "title": "TSC_XYplot_AScore",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_ascore, batch_count, first_ascore, last_ascore",
          "properties": {
            "target_ascore": {
              "type": "string"
            },
            "batch_count": {
              "type": "number"
            },
            "first_ascore": {
              "type": "number"
            },
            "last_ascore": {
              "type": "number"
            }
          },
          "required": [
            "target_ascore",
            "batch_count",
            "first_ascore",
            "last_ascore"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Refiner On/Off": {
      "title": "TSC_XYplot_Refiner_OnOff",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: refine_at_percent",
          "properties": {
            "refine_at_percent": {
              "type": "number"
            }
          },
          "required": ["refine_at_percent"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Checkpoint": {
      "title": "TSC_XYplot_Checkpoint",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_ckpt, input_mode, batch_path, subdirectories, batch_sort, batch_max, ckpt_count, ckpt_name_1, clip_skip_1, vae_name_1, ckpt_name_2, clip_skip_2, vae_name_2, ckpt_name_3, clip_skip_3, vae_name_3, ckpt_name_4, clip_skip_4, vae_name_4, ckpt_name_5, clip_skip_5, vae_name_5, ckpt_name_6, clip_skip_6, vae_name_6, ckpt_name_7, clip_skip_7, vae_name_7, ckpt_name_8, clip_skip_8, vae_name_8, ckpt_name_9, clip_skip_9, vae_name_9, ckpt_name_10, clip_skip_10, vae_name_10, ckpt_name_11, clip_skip_11, vae_name_11, ckpt_name_12, clip_skip_12, vae_name_12, ckpt_name_13, clip_skip_13, vae_name_13, ckpt_name_14, clip_skip_14, vae_name_14, ckpt_name_15, clip_skip_15, vae_name_15, ckpt_name_16, clip_skip_16, vae_name_16, ckpt_name_17, clip_skip_17, vae_name_17, ckpt_name_18, clip_skip_18, vae_name_18, ckpt_name_19, clip_skip_19, vae_name_19, ckpt_name_20, clip_skip_20, vae_name_20, ckpt_name_21, clip_skip_21, vae_name_21, ckpt_name_22, clip_skip_22, vae_name_22, ckpt_name_23, clip_skip_23, vae_name_23, ckpt_name_24, clip_skip_24, vae_name_24, ckpt_name_25, clip_skip_25, vae_name_25, ckpt_name_26, clip_skip_26, vae_name_26, ckpt_name_27, clip_skip_27, vae_name_27, ckpt_name_28, clip_skip_28, vae_name_28, ckpt_name_29, clip_skip_29, vae_name_29, ckpt_name_30, clip_skip_30, vae_name_30, ckpt_name_31, clip_skip_31, vae_name_31, ckpt_name_32, clip_skip_32, vae_name_32, ckpt_name_33, clip_skip_33, vae_name_33, ckpt_name_34, clip_skip_34, vae_name_34, ckpt_name_35, clip_skip_35, vae_name_35, ckpt_name_36, clip_skip_36, vae_name_36, ckpt_name_37, clip_skip_37, vae_name_37, ckpt_name_38, clip_skip_38, vae_name_38, ckpt_name_39, clip_skip_39, vae_name_39, ckpt_name_40, clip_skip_40, vae_name_40, ckpt_name_41, clip_skip_41, vae_name_41, ckpt_name_42, clip_skip_42, vae_name_42, ckpt_name_43, clip_skip_43, vae_name_43, ckpt_name_44, clip_skip_44, vae_name_44, ckpt_name_45, clip_skip_45, vae_name_45, ckpt_name_46, clip_skip_46, vae_name_46, ckpt_name_47, clip_skip_47, vae_name_47, ckpt_name_48, clip_skip_48, vae_name_48, ckpt_name_49, clip_skip_49, vae_name_49, ckpt_name_50, clip_skip_50, vae_name_50",
          "properties": {
            "target_ckpt": {
              "type": "string"
            },
            "input_mode": {
              "type": "string"
            },
            "batch_path": {
              "type": "string"
            },
            "subdirectories": {
              "type": "BOOLEAN"
            },
            "batch_sort": {
              "type": "string"
            },
            "batch_max": {
              "type": "number"
            },
            "ckpt_count": {
              "type": "number"
            },
            "ckpt_name_1": {
              "type": "string"
            },
            "clip_skip_1": {
              "type": "number"
            },
            "vae_name_1": {
              "type": "string"
            },
            "ckpt_name_2": {
              "type": "string"
            },
            "clip_skip_2": {
              "type": "number"
            },
            "vae_name_2": {
              "type": "string"
            },
            "ckpt_name_3": {
              "type": "string"
            },
            "clip_skip_3": {
              "type": "number"
            },
            "vae_name_3": {
              "type": "string"
            },
            "ckpt_name_4": {
              "type": "string"
            },
            "clip_skip_4": {
              "type": "number"
            },
            "vae_name_4": {
              "type": "string"
            },
            "ckpt_name_5": {
              "type": "string"
            },
            "clip_skip_5": {
              "type": "number"
            },
            "vae_name_5": {
              "type": "string"
            },
            "ckpt_name_6": {
              "type": "string"
            },
            "clip_skip_6": {
              "type": "number"
            },
            "vae_name_6": {
              "type": "string"
            },
            "ckpt_name_7": {
              "type": "string"
            },
            "clip_skip_7": {
              "type": "number"
            },
            "vae_name_7": {
              "type": "string"
            },
            "ckpt_name_8": {
              "type": "string"
            },
            "clip_skip_8": {
              "type": "number"
            },
            "vae_name_8": {
              "type": "string"
            },
            "ckpt_name_9": {
              "type": "string"
            },
            "clip_skip_9": {
              "type": "number"
            },
            "vae_name_9": {
              "type": "string"
            },
            "ckpt_name_10": {
              "type": "string"
            },
            "clip_skip_10": {
              "type": "number"
            },
            "vae_name_10": {
              "type": "string"
            },
            "ckpt_name_11": {
              "type": "string"
            },
            "clip_skip_11": {
              "type": "number"
            },
            "vae_name_11": {
              "type": "string"
            },
            "ckpt_name_12": {
              "type": "string"
            },
            "clip_skip_12": {
              "type": "number"
            },
            "vae_name_12": {
              "type": "string"
            },
            "ckpt_name_13": {
              "type": "string"
            },
            "clip_skip_13": {
              "type": "number"
            },
            "vae_name_13": {
              "type": "string"
            },
            "ckpt_name_14": {
              "type": "string"
            },
            "clip_skip_14": {
              "type": "number"
            },
            "vae_name_14": {
              "type": "string"
            },
            "ckpt_name_15": {
              "type": "string"
            },
            "clip_skip_15": {
              "type": "number"
            },
            "vae_name_15": {
              "type": "string"
            },
            "ckpt_name_16": {
              "type": "string"
            },
            "clip_skip_16": {
              "type": "number"
            },
            "vae_name_16": {
              "type": "string"
            },
            "ckpt_name_17": {
              "type": "string"
            },
            "clip_skip_17": {
              "type": "number"
            },
            "vae_name_17": {
              "type": "string"
            },
            "ckpt_name_18": {
              "type": "string"
            },
            "clip_skip_18": {
              "type": "number"
            },
            "vae_name_18": {
              "type": "string"
            },
            "ckpt_name_19": {
              "type": "string"
            },
            "clip_skip_19": {
              "type": "number"
            },
            "vae_name_19": {
              "type": "string"
            },
            "ckpt_name_20": {
              "type": "string"
            },
            "clip_skip_20": {
              "type": "number"
            },
            "vae_name_20": {
              "type": "string"
            },
            "ckpt_name_21": {
              "type": "string"
            },
            "clip_skip_21": {
              "type": "number"
            },
            "vae_name_21": {
              "type": "string"
            },
            "ckpt_name_22": {
              "type": "string"
            },
            "clip_skip_22": {
              "type": "number"
            },
            "vae_name_22": {
              "type": "string"
            },
            "ckpt_name_23": {
              "type": "string"
            },
            "clip_skip_23": {
              "type": "number"
            },
            "vae_name_23": {
              "type": "string"
            },
            "ckpt_name_24": {
              "type": "string"
            },
            "clip_skip_24": {
              "type": "number"
            },
            "vae_name_24": {
              "type": "string"
            },
            "ckpt_name_25": {
              "type": "string"
            },
            "clip_skip_25": {
              "type": "number"
            },
            "vae_name_25": {
              "type": "string"
            },
            "ckpt_name_26": {
              "type": "string"
            },
            "clip_skip_26": {
              "type": "number"
            },
            "vae_name_26": {
              "type": "string"
            },
            "ckpt_name_27": {
              "type": "string"
            },
            "clip_skip_27": {
              "type": "number"
            },
            "vae_name_27": {
              "type": "string"
            },
            "ckpt_name_28": {
              "type": "string"
            },
            "clip_skip_28": {
              "type": "number"
            },
            "vae_name_28": {
              "type": "string"
            },
            "ckpt_name_29": {
              "type": "string"
            },
            "clip_skip_29": {
              "type": "number"
            },
            "vae_name_29": {
              "type": "string"
            },
            "ckpt_name_30": {
              "type": "string"
            },
            "clip_skip_30": {
              "type": "number"
            },
            "vae_name_30": {
              "type": "string"
            },
            "ckpt_name_31": {
              "type": "string"
            },
            "clip_skip_31": {
              "type": "number"
            },
            "vae_name_31": {
              "type": "string"
            },
            "ckpt_name_32": {
              "type": "string"
            },
            "clip_skip_32": {
              "type": "number"
            },
            "vae_name_32": {
              "type": "string"
            },
            "ckpt_name_33": {
              "type": "string"
            },
            "clip_skip_33": {
              "type": "number"
            },
            "vae_name_33": {
              "type": "string"
            },
            "ckpt_name_34": {
              "type": "string"
            },
            "clip_skip_34": {
              "type": "number"
            },
            "vae_name_34": {
              "type": "string"
            },
            "ckpt_name_35": {
              "type": "string"
            },
            "clip_skip_35": {
              "type": "number"
            },
            "vae_name_35": {
              "type": "string"
            },
            "ckpt_name_36": {
              "type": "string"
            },
            "clip_skip_36": {
              "type": "number"
            },
            "vae_name_36": {
              "type": "string"
            },
            "ckpt_name_37": {
              "type": "string"
            },
            "clip_skip_37": {
              "type": "number"
            },
            "vae_name_37": {
              "type": "string"
            },
            "ckpt_name_38": {
              "type": "string"
            },
            "clip_skip_38": {
              "type": "number"
            },
            "vae_name_38": {
              "type": "string"
            },
            "ckpt_name_39": {
              "type": "string"
            },
            "clip_skip_39": {
              "type": "number"
            },
            "vae_name_39": {
              "type": "string"
            },
            "ckpt_name_40": {
              "type": "string"
            },
            "clip_skip_40": {
              "type": "number"
            },
            "vae_name_40": {
              "type": "string"
            },
            "ckpt_name_41": {
              "type": "string"
            },
            "clip_skip_41": {
              "type": "number"
            },
            "vae_name_41": {
              "type": "string"
            },
            "ckpt_name_42": {
              "type": "string"
            },
            "clip_skip_42": {
              "type": "number"
            },
            "vae_name_42": {
              "type": "string"
            },
            "ckpt_name_43": {
              "type": "string"
            },
            "clip_skip_43": {
              "type": "number"
            },
            "vae_name_43": {
              "type": "string"
            },
            "ckpt_name_44": {
              "type": "string"
            },
            "clip_skip_44": {
              "type": "number"
            },
            "vae_name_44": {
              "type": "string"
            },
            "ckpt_name_45": {
              "type": "string"
            },
            "clip_skip_45": {
              "type": "number"
            },
            "vae_name_45": {
              "type": "string"
            },
            "ckpt_name_46": {
              "type": "string"
            },
            "clip_skip_46": {
              "type": "number"
            },
            "vae_name_46": {
              "type": "string"
            },
            "ckpt_name_47": {
              "type": "string"
            },
            "clip_skip_47": {
              "type": "number"
            },
            "vae_name_47": {
              "type": "string"
            },
            "ckpt_name_48": {
              "type": "string"
            },
            "clip_skip_48": {
              "type": "number"
            },
            "vae_name_48": {
              "type": "string"
            },
            "ckpt_name_49": {
              "type": "string"
            },
            "clip_skip_49": {
              "type": "number"
            },
            "vae_name_49": {
              "type": "string"
            },
            "ckpt_name_50": {
              "type": "string"
            },
            "clip_skip_50": {
              "type": "number"
            },
            "vae_name_50": {
              "type": "string"
            }
          },
          "required": [
            "target_ckpt",
            "input_mode",
            "batch_path",
            "subdirectories",
            "batch_sort",
            "batch_max",
            "ckpt_count",
            "ckpt_name_1",
            "clip_skip_1",
            "vae_name_1",
            "ckpt_name_2",
            "clip_skip_2",
            "vae_name_2",
            "ckpt_name_3",
            "clip_skip_3",
            "vae_name_3",
            "ckpt_name_4",
            "clip_skip_4",
            "vae_name_4",
            "ckpt_name_5",
            "clip_skip_5",
            "vae_name_5",
            "ckpt_name_6",
            "clip_skip_6",
            "vae_name_6",
            "ckpt_name_7",
            "clip_skip_7",
            "vae_name_7",
            "ckpt_name_8",
            "clip_skip_8",
            "vae_name_8",
            "ckpt_name_9",
            "clip_skip_9",
            "vae_name_9",
            "ckpt_name_10",
            "clip_skip_10",
            "vae_name_10",
            "ckpt_name_11",
            "clip_skip_11",
            "vae_name_11",
            "ckpt_name_12",
            "clip_skip_12",
            "vae_name_12",
            "ckpt_name_13",
            "clip_skip_13",
            "vae_name_13",
            "ckpt_name_14",
            "clip_skip_14",
            "vae_name_14",
            "ckpt_name_15",
            "clip_skip_15",
            "vae_name_15",
            "ckpt_name_16",
            "clip_skip_16",
            "vae_name_16",
            "ckpt_name_17",
            "clip_skip_17",
            "vae_name_17",
            "ckpt_name_18",
            "clip_skip_18",
            "vae_name_18",
            "ckpt_name_19",
            "clip_skip_19",
            "vae_name_19",
            "ckpt_name_20",
            "clip_skip_20",
            "vae_name_20",
            "ckpt_name_21",
            "clip_skip_21",
            "vae_name_21",
            "ckpt_name_22",
            "clip_skip_22",
            "vae_name_22",
            "ckpt_name_23",
            "clip_skip_23",
            "vae_name_23",
            "ckpt_name_24",
            "clip_skip_24",
            "vae_name_24",
            "ckpt_name_25",
            "clip_skip_25",
            "vae_name_25",
            "ckpt_name_26",
            "clip_skip_26",
            "vae_name_26",
            "ckpt_name_27",
            "clip_skip_27",
            "vae_name_27",
            "ckpt_name_28",
            "clip_skip_28",
            "vae_name_28",
            "ckpt_name_29",
            "clip_skip_29",
            "vae_name_29",
            "ckpt_name_30",
            "clip_skip_30",
            "vae_name_30",
            "ckpt_name_31",
            "clip_skip_31",
            "vae_name_31",
            "ckpt_name_32",
            "clip_skip_32",
            "vae_name_32",
            "ckpt_name_33",
            "clip_skip_33",
            "vae_name_33",
            "ckpt_name_34",
            "clip_skip_34",
            "vae_name_34",
            "ckpt_name_35",
            "clip_skip_35",
            "vae_name_35",
            "ckpt_name_36",
            "clip_skip_36",
            "vae_name_36",
            "ckpt_name_37",
            "clip_skip_37",
            "vae_name_37",
            "ckpt_name_38",
            "clip_skip_38",
            "vae_name_38",
            "ckpt_name_39",
            "clip_skip_39",
            "vae_name_39",
            "ckpt_name_40",
            "clip_skip_40",
            "vae_name_40",
            "ckpt_name_41",
            "clip_skip_41",
            "vae_name_41",
            "ckpt_name_42",
            "clip_skip_42",
            "vae_name_42",
            "ckpt_name_43",
            "clip_skip_43",
            "vae_name_43",
            "ckpt_name_44",
            "clip_skip_44",
            "vae_name_44",
            "ckpt_name_45",
            "clip_skip_45",
            "vae_name_45",
            "ckpt_name_46",
            "clip_skip_46",
            "vae_name_46",
            "ckpt_name_47",
            "clip_skip_47",
            "vae_name_47",
            "ckpt_name_48",
            "clip_skip_48",
            "vae_name_48",
            "ckpt_name_49",
            "clip_skip_49",
            "vae_name_49",
            "ckpt_name_50",
            "clip_skip_50",
            "vae_name_50"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Clip Skip": {
      "title": "TSC_XYplot_ClipSkip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target_ckpt, batch_count, first_clip_skip, last_clip_skip",
          "properties": {
            "target_ckpt": {
              "type": "string"
            },
            "batch_count": {
              "type": "number"
            },
            "first_clip_skip": {
              "type": "number"
            },
            "last_clip_skip": {
              "type": "number"
            }
          },
          "required": [
            "target_ckpt",
            "batch_count",
            "first_clip_skip",
            "last_clip_skip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: LoRA": {
      "title": "TSC_XYplot_LoRA",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_mode, batch_path, subdirectories, batch_sort, batch_max, lora_count, model_strength, clip_strength, lora_name_1, model_str_1, clip_str_1, lora_name_2, model_str_2, clip_str_2, lora_name_3, model_str_3, clip_str_3, lora_name_4, model_str_4, clip_str_4, lora_name_5, model_str_5, clip_str_5, lora_name_6, model_str_6, clip_str_6, lora_name_7, model_str_7, clip_str_7, lora_name_8, model_str_8, clip_str_8, lora_name_9, model_str_9, clip_str_9, lora_name_10, model_str_10, clip_str_10, lora_name_11, model_str_11, clip_str_11, lora_name_12, model_str_12, clip_str_12, lora_name_13, model_str_13, clip_str_13, lora_name_14, model_str_14, clip_str_14, lora_name_15, model_str_15, clip_str_15, lora_name_16, model_str_16, clip_str_16, lora_name_17, model_str_17, clip_str_17, lora_name_18, model_str_18, clip_str_18, lora_name_19, model_str_19, clip_str_19, lora_name_20, model_str_20, clip_str_20, lora_name_21, model_str_21, clip_str_21, lora_name_22, model_str_22, clip_str_22, lora_name_23, model_str_23, clip_str_23, lora_name_24, model_str_24, clip_str_24, lora_name_25, model_str_25, clip_str_25, lora_name_26, model_str_26, clip_str_26, lora_name_27, model_str_27, clip_str_27, lora_name_28, model_str_28, clip_str_28, lora_name_29, model_str_29, clip_str_29, lora_name_30, model_str_30, clip_str_30, lora_name_31, model_str_31, clip_str_31, lora_name_32, model_str_32, clip_str_32, lora_name_33, model_str_33, clip_str_33, lora_name_34, model_str_34, clip_str_34, lora_name_35, model_str_35, clip_str_35, lora_name_36, model_str_36, clip_str_36, lora_name_37, model_str_37, clip_str_37, lora_name_38, model_str_38, clip_str_38, lora_name_39, model_str_39, clip_str_39, lora_name_40, model_str_40, clip_str_40, lora_name_41, model_str_41, clip_str_41, lora_name_42, model_str_42, clip_str_42, lora_name_43, model_str_43, clip_str_43, lora_name_44, model_str_44, clip_str_44, lora_name_45, model_str_45, clip_str_45, lora_name_46, model_str_46, clip_str_46, lora_name_47, model_str_47, clip_str_47, lora_name_48, model_str_48, clip_str_48, lora_name_49, model_str_49, clip_str_49, lora_name_50, model_str_50, clip_str_50",
          "properties": {
            "input_mode": {
              "type": "string"
            },
            "batch_path": {
              "type": "string"
            },
            "subdirectories": {
              "type": "BOOLEAN"
            },
            "batch_sort": {
              "type": "string"
            },
            "batch_max": {
              "type": "number"
            },
            "lora_count": {
              "type": "number"
            },
            "model_strength": {
              "type": "number"
            },
            "clip_strength": {
              "type": "number"
            },
            "lora_name_1": {
              "type": "string"
            },
            "model_str_1": {
              "type": "number"
            },
            "clip_str_1": {
              "type": "number"
            },
            "lora_name_2": {
              "type": "string"
            },
            "model_str_2": {
              "type": "number"
            },
            "clip_str_2": {
              "type": "number"
            },
            "lora_name_3": {
              "type": "string"
            },
            "model_str_3": {
              "type": "number"
            },
            "clip_str_3": {
              "type": "number"
            },
            "lora_name_4": {
              "type": "string"
            },
            "model_str_4": {
              "type": "number"
            },
            "clip_str_4": {
              "type": "number"
            },
            "lora_name_5": {
              "type": "string"
            },
            "model_str_5": {
              "type": "number"
            },
            "clip_str_5": {
              "type": "number"
            },
            "lora_name_6": {
              "type": "string"
            },
            "model_str_6": {
              "type": "number"
            },
            "clip_str_6": {
              "type": "number"
            },
            "lora_name_7": {
              "type": "string"
            },
            "model_str_7": {
              "type": "number"
            },
            "clip_str_7": {
              "type": "number"
            },
            "lora_name_8": {
              "type": "string"
            },
            "model_str_8": {
              "type": "number"
            },
            "clip_str_8": {
              "type": "number"
            },
            "lora_name_9": {
              "type": "string"
            },
            "model_str_9": {
              "type": "number"
            },
            "clip_str_9": {
              "type": "number"
            },
            "lora_name_10": {
              "type": "string"
            },
            "model_str_10": {
              "type": "number"
            },
            "clip_str_10": {
              "type": "number"
            },
            "lora_name_11": {
              "type": "string"
            },
            "model_str_11": {
              "type": "number"
            },
            "clip_str_11": {
              "type": "number"
            },
            "lora_name_12": {
              "type": "string"
            },
            "model_str_12": {
              "type": "number"
            },
            "clip_str_12": {
              "type": "number"
            },
            "lora_name_13": {
              "type": "string"
            },
            "model_str_13": {
              "type": "number"
            },
            "clip_str_13": {
              "type": "number"
            },
            "lora_name_14": {
              "type": "string"
            },
            "model_str_14": {
              "type": "number"
            },
            "clip_str_14": {
              "type": "number"
            },
            "lora_name_15": {
              "type": "string"
            },
            "model_str_15": {
              "type": "number"
            },
            "clip_str_15": {
              "type": "number"
            },
            "lora_name_16": {
              "type": "string"
            },
            "model_str_16": {
              "type": "number"
            },
            "clip_str_16": {
              "type": "number"
            },
            "lora_name_17": {
              "type": "string"
            },
            "model_str_17": {
              "type": "number"
            },
            "clip_str_17": {
              "type": "number"
            },
            "lora_name_18": {
              "type": "string"
            },
            "model_str_18": {
              "type": "number"
            },
            "clip_str_18": {
              "type": "number"
            },
            "lora_name_19": {
              "type": "string"
            },
            "model_str_19": {
              "type": "number"
            },
            "clip_str_19": {
              "type": "number"
            },
            "lora_name_20": {
              "type": "string"
            },
            "model_str_20": {
              "type": "number"
            },
            "clip_str_20": {
              "type": "number"
            },
            "lora_name_21": {
              "type": "string"
            },
            "model_str_21": {
              "type": "number"
            },
            "clip_str_21": {
              "type": "number"
            },
            "lora_name_22": {
              "type": "string"
            },
            "model_str_22": {
              "type": "number"
            },
            "clip_str_22": {
              "type": "number"
            },
            "lora_name_23": {
              "type": "string"
            },
            "model_str_23": {
              "type": "number"
            },
            "clip_str_23": {
              "type": "number"
            },
            "lora_name_24": {
              "type": "string"
            },
            "model_str_24": {
              "type": "number"
            },
            "clip_str_24": {
              "type": "number"
            },
            "lora_name_25": {
              "type": "string"
            },
            "model_str_25": {
              "type": "number"
            },
            "clip_str_25": {
              "type": "number"
            },
            "lora_name_26": {
              "type": "string"
            },
            "model_str_26": {
              "type": "number"
            },
            "clip_str_26": {
              "type": "number"
            },
            "lora_name_27": {
              "type": "string"
            },
            "model_str_27": {
              "type": "number"
            },
            "clip_str_27": {
              "type": "number"
            },
            "lora_name_28": {
              "type": "string"
            },
            "model_str_28": {
              "type": "number"
            },
            "clip_str_28": {
              "type": "number"
            },
            "lora_name_29": {
              "type": "string"
            },
            "model_str_29": {
              "type": "number"
            },
            "clip_str_29": {
              "type": "number"
            },
            "lora_name_30": {
              "type": "string"
            },
            "model_str_30": {
              "type": "number"
            },
            "clip_str_30": {
              "type": "number"
            },
            "lora_name_31": {
              "type": "string"
            },
            "model_str_31": {
              "type": "number"
            },
            "clip_str_31": {
              "type": "number"
            },
            "lora_name_32": {
              "type": "string"
            },
            "model_str_32": {
              "type": "number"
            },
            "clip_str_32": {
              "type": "number"
            },
            "lora_name_33": {
              "type": "string"
            },
            "model_str_33": {
              "type": "number"
            },
            "clip_str_33": {
              "type": "number"
            },
            "lora_name_34": {
              "type": "string"
            },
            "model_str_34": {
              "type": "number"
            },
            "clip_str_34": {
              "type": "number"
            },
            "lora_name_35": {
              "type": "string"
            },
            "model_str_35": {
              "type": "number"
            },
            "clip_str_35": {
              "type": "number"
            },
            "lora_name_36": {
              "type": "string"
            },
            "model_str_36": {
              "type": "number"
            },
            "clip_str_36": {
              "type": "number"
            },
            "lora_name_37": {
              "type": "string"
            },
            "model_str_37": {
              "type": "number"
            },
            "clip_str_37": {
              "type": "number"
            },
            "lora_name_38": {
              "type": "string"
            },
            "model_str_38": {
              "type": "number"
            },
            "clip_str_38": {
              "type": "number"
            },
            "lora_name_39": {
              "type": "string"
            },
            "model_str_39": {
              "type": "number"
            },
            "clip_str_39": {
              "type": "number"
            },
            "lora_name_40": {
              "type": "string"
            },
            "model_str_40": {
              "type": "number"
            },
            "clip_str_40": {
              "type": "number"
            },
            "lora_name_41": {
              "type": "string"
            },
            "model_str_41": {
              "type": "number"
            },
            "clip_str_41": {
              "type": "number"
            },
            "lora_name_42": {
              "type": "string"
            },
            "model_str_42": {
              "type": "number"
            },
            "clip_str_42": {
              "type": "number"
            },
            "lora_name_43": {
              "type": "string"
            },
            "model_str_43": {
              "type": "number"
            },
            "clip_str_43": {
              "type": "number"
            },
            "lora_name_44": {
              "type": "string"
            },
            "model_str_44": {
              "type": "number"
            },
            "clip_str_44": {
              "type": "number"
            },
            "lora_name_45": {
              "type": "string"
            },
            "model_str_45": {
              "type": "number"
            },
            "clip_str_45": {
              "type": "number"
            },
            "lora_name_46": {
              "type": "string"
            },
            "model_str_46": {
              "type": "number"
            },
            "clip_str_46": {
              "type": "number"
            },
            "lora_name_47": {
              "type": "string"
            },
            "model_str_47": {
              "type": "number"
            },
            "clip_str_47": {
              "type": "number"
            },
            "lora_name_48": {
              "type": "string"
            },
            "model_str_48": {
              "type": "number"
            },
            "clip_str_48": {
              "type": "number"
            },
            "lora_name_49": {
              "type": "string"
            },
            "model_str_49": {
              "type": "number"
            },
            "clip_str_49": {
              "type": "number"
            },
            "lora_name_50": {
              "type": "string"
            },
            "model_str_50": {
              "type": "number"
            },
            "clip_str_50": {
              "type": "number"
            }
          },
          "required": [
            "input_mode",
            "batch_path",
            "subdirectories",
            "batch_sort",
            "batch_max",
            "lora_count",
            "model_strength",
            "clip_strength",
            "lora_name_1",
            "model_str_1",
            "clip_str_1",
            "lora_name_2",
            "model_str_2",
            "clip_str_2",
            "lora_name_3",
            "model_str_3",
            "clip_str_3",
            "lora_name_4",
            "model_str_4",
            "clip_str_4",
            "lora_name_5",
            "model_str_5",
            "clip_str_5",
            "lora_name_6",
            "model_str_6",
            "clip_str_6",
            "lora_name_7",
            "model_str_7",
            "clip_str_7",
            "lora_name_8",
            "model_str_8",
            "clip_str_8",
            "lora_name_9",
            "model_str_9",
            "clip_str_9",
            "lora_name_10",
            "model_str_10",
            "clip_str_10",
            "lora_name_11",
            "model_str_11",
            "clip_str_11",
            "lora_name_12",
            "model_str_12",
            "clip_str_12",
            "lora_name_13",
            "model_str_13",
            "clip_str_13",
            "lora_name_14",
            "model_str_14",
            "clip_str_14",
            "lora_name_15",
            "model_str_15",
            "clip_str_15",
            "lora_name_16",
            "model_str_16",
            "clip_str_16",
            "lora_name_17",
            "model_str_17",
            "clip_str_17",
            "lora_name_18",
            "model_str_18",
            "clip_str_18",
            "lora_name_19",
            "model_str_19",
            "clip_str_19",
            "lora_name_20",
            "model_str_20",
            "clip_str_20",
            "lora_name_21",
            "model_str_21",
            "clip_str_21",
            "lora_name_22",
            "model_str_22",
            "clip_str_22",
            "lora_name_23",
            "model_str_23",
            "clip_str_23",
            "lora_name_24",
            "model_str_24",
            "clip_str_24",
            "lora_name_25",
            "model_str_25",
            "clip_str_25",
            "lora_name_26",
            "model_str_26",
            "clip_str_26",
            "lora_name_27",
            "model_str_27",
            "clip_str_27",
            "lora_name_28",
            "model_str_28",
            "clip_str_28",
            "lora_name_29",
            "model_str_29",
            "clip_str_29",
            "lora_name_30",
            "model_str_30",
            "clip_str_30",
            "lora_name_31",
            "model_str_31",
            "clip_str_31",
            "lora_name_32",
            "model_str_32",
            "clip_str_32",
            "lora_name_33",
            "model_str_33",
            "clip_str_33",
            "lora_name_34",
            "model_str_34",
            "clip_str_34",
            "lora_name_35",
            "model_str_35",
            "clip_str_35",
            "lora_name_36",
            "model_str_36",
            "clip_str_36",
            "lora_name_37",
            "model_str_37",
            "clip_str_37",
            "lora_name_38",
            "model_str_38",
            "clip_str_38",
            "lora_name_39",
            "model_str_39",
            "clip_str_39",
            "lora_name_40",
            "model_str_40",
            "clip_str_40",
            "lora_name_41",
            "model_str_41",
            "clip_str_41",
            "lora_name_42",
            "model_str_42",
            "clip_str_42",
            "lora_name_43",
            "model_str_43",
            "clip_str_43",
            "lora_name_44",
            "model_str_44",
            "clip_str_44",
            "lora_name_45",
            "model_str_45",
            "clip_str_45",
            "lora_name_46",
            "model_str_46",
            "clip_str_46",
            "lora_name_47",
            "model_str_47",
            "clip_str_47",
            "lora_name_48",
            "model_str_48",
            "clip_str_48",
            "lora_name_49",
            "model_str_49",
            "clip_str_49",
            "lora_name_50",
            "model_str_50",
            "clip_str_50"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: LoRA Plot": {
      "title": "TSC_XYplot_LoRA_Plot",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: input_mode, lora_name, model_strength, clip_strength, X_batch_count, X_batch_path, X_subdirectories, X_batch_sort, X_first_value, X_last_value, Y_batch_count, Y_first_value, Y_last_value",
          "properties": {
            "input_mode": {
              "type": "string"
            },
            "lora_name": {
              "type": "string"
            },
            "model_strength": {
              "type": "number"
            },
            "clip_strength": {
              "type": "number"
            },
            "X_batch_count": {
              "type": "number"
            },
            "X_batch_path": {
              "type": "string"
            },
            "X_subdirectories": {
              "type": "BOOLEAN"
            },
            "X_batch_sort": {
              "type": "string"
            },
            "X_first_value": {
              "type": "number"
            },
            "X_last_value": {
              "type": "number"
            },
            "Y_batch_count": {
              "type": "number"
            },
            "Y_first_value": {
              "type": "number"
            },
            "Y_last_value": {
              "type": "number"
            }
          },
          "required": [
            "input_mode",
            "lora_name",
            "model_strength",
            "clip_strength",
            "X_batch_count",
            "X_batch_path",
            "X_subdirectories",
            "X_batch_sort",
            "X_first_value",
            "X_last_value",
            "Y_batch_count",
            "Y_first_value",
            "Y_last_value"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY, XY",
          "items": [
            {
              "type": "XY"
            },
            {
              "type": "XY"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: LoRA Stacks": {
      "title": "TSC_XYplot_LoRA_Stacks",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: node_state",
          "properties": {
            "node_state": {
              "type": "string"
            }
          },
          "required": ["node_state"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Control Net": {
      "title": "TSC_XYplot_Control_Net",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, image, target_parameter, batch_count, first_strength, last_strength, first_start_percent, last_start_percent, first_end_percent, last_end_percent, strength, start_percent, end_percent",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "target_parameter": {
              "type": "string"
            },
            "batch_count": {
              "type": "number"
            },
            "first_strength": {
              "type": "number"
            },
            "last_strength": {
              "type": "number"
            },
            "first_start_percent": {
              "type": "number"
            },
            "last_start_percent": {
              "type": "number"
            },
            "first_end_percent": {
              "type": "number"
            },
            "last_end_percent": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            }
          },
          "required": [
            "control_net",
            "image",
            "target_parameter",
            "batch_count",
            "first_strength",
            "last_strength",
            "first_start_percent",
            "last_start_percent",
            "first_end_percent",
            "last_end_percent",
            "strength",
            "start_percent",
            "end_percent"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Control Net Plot": {
      "title": "TSC_XYplot_Control_Net_Plot",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net, image, plot_type, strength, start_percent, end_percent, X_batch_count, X_first_value, X_last_value, Y_batch_count, Y_first_value, Y_last_value",
          "properties": {
            "control_net": {
              "type": "CONTROL_NET"
            },
            "image": {
              "type": "IMAGE"
            },
            "plot_type": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            },
            "start_percent": {
              "type": "number"
            },
            "end_percent": {
              "type": "number"
            },
            "X_batch_count": {
              "type": "number"
            },
            "X_first_value": {
              "type": "number"
            },
            "X_last_value": {
              "type": "number"
            },
            "Y_batch_count": {
              "type": "number"
            },
            "Y_first_value": {
              "type": "number"
            },
            "Y_last_value": {
              "type": "number"
            }
          },
          "required": [
            "control_net",
            "image",
            "plot_type",
            "strength",
            "start_percent",
            "end_percent",
            "X_batch_count",
            "X_first_value",
            "X_last_value",
            "Y_batch_count",
            "Y_first_value",
            "Y_last_value"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY, XY",
          "items": [
            {
              "type": "XY"
            },
            {
              "type": "XY"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "XY Input: Manual XY Entry": {
      "title": "TSC_XYplot_Manual_XY_Entry",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: plot_type, plot_value",
          "properties": {
            "plot_type": {
              "type": "string"
            },
            "plot_value": {
              "type": "string"
            }
          },
          "required": ["plot_type", "plot_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "Join XY Inputs of Same Type": {
      "title": "TSC_XYplot_JoinInputs",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: XY_1, XY_2",
          "properties": {
            "XY_1": {
              "type": "XY"
            },
            "XY_2": {
              "type": "XY"
            }
          },
          "required": ["XY_1", "XY_2"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: XY",
          "items": [
            {
              "type": "XY"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/XY Inputs"
    },
    "Image Overlay": {
      "title": "TSC_ImageOverlay",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: base_image, overlay_image, overlay_resize, resize_method, rescale_factor, width, height, x_offset, y_offset, rotation, opacity",
          "properties": {
            "base_image": {
              "type": "IMAGE"
            },
            "overlay_image": {
              "type": "IMAGE"
            },
            "overlay_resize": {
              "type": "string"
            },
            "resize_method": {
              "type": "string"
            },
            "rescale_factor": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "x_offset": {
              "type": "number"
            },
            "y_offset": {
              "type": "number"
            },
            "rotation": {
              "type": "number"
            },
            "opacity": {
              "type": "number"
            }
          },
          "required": [
            "base_image",
            "overlay_image",
            "overlay_resize",
            "resize_method",
            "rescale_factor",
            "width",
            "height",
            "x_offset",
            "y_offset",
            "rotation",
            "opacity"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Image"
    },
    "Noise Control Script": {
      "title": "TSC_Noise_Control_Script",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: rng_source, cfg_denoiser, add_seed_noise, seed, weight",
          "properties": {
            "rng_source": {
              "type": "string"
            },
            "cfg_denoiser": {
              "type": "BOOLEAN"
            },
            "add_seed_noise": {
              "type": "BOOLEAN"
            },
            "seed": {
              "type": "number"
            },
            "weight": {
              "type": "number"
            }
          },
          "required": [
            "rng_source",
            "cfg_denoiser",
            "add_seed_noise",
            "seed",
            "weight"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SCRIPT",
          "items": [
            {
              "type": "SCRIPT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Scripts"
    },
    "HighRes-Fix Script": {
      "title": "TSC_HighRes_Fix",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_type, hires_ckpt_name, latent_upscaler, pixel_upscaler, upscale_by, use_same_seed, seed, hires_steps, denoise, iterations, use_controlnet, control_net_name, strength, preprocessor, preprocessor_imgs",
          "properties": {
            "upscale_type": {
              "type": "string"
            },
            "hires_ckpt_name": {
              "type": "string"
            },
            "latent_upscaler": {
              "type": "string"
            },
            "pixel_upscaler": {
              "type": "string"
            },
            "upscale_by": {
              "type": "number"
            },
            "use_same_seed": {
              "type": "BOOLEAN"
            },
            "seed": {
              "type": "number"
            },
            "hires_steps": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            },
            "iterations": {
              "type": "number"
            },
            "use_controlnet": {
              "type": "BOOLEAN"
            },
            "control_net_name": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            },
            "preprocessor": {
              "type": "string"
            },
            "preprocessor_imgs": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "upscale_type",
            "hires_ckpt_name",
            "latent_upscaler",
            "pixel_upscaler",
            "upscale_by",
            "use_same_seed",
            "seed",
            "hires_steps",
            "denoise",
            "iterations",
            "use_controlnet",
            "control_net_name",
            "strength",
            "preprocessor",
            "preprocessor_imgs"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SCRIPT",
          "items": [
            {
              "type": "SCRIPT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Scripts"
    },
    "Tiled Upscaler Script": {
      "title": "TSC_Tiled_Upscaler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_by, tile_size, tiling_strategy, tiling_steps, seed, denoise, use_controlnet, tile_controlnet, strength",
          "properties": {
            "upscale_by": {
              "type": "number"
            },
            "tile_size": {
              "type": "number"
            },
            "tiling_strategy": {
              "type": "string"
            },
            "tiling_steps": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            },
            "denoise": {
              "type": "number"
            },
            "use_controlnet": {
              "type": "BOOLEAN"
            },
            "tile_controlnet": {
              "type": "string"
            },
            "strength": {
              "type": "number"
            }
          },
          "required": [
            "upscale_by",
            "tile_size",
            "tiling_strategy",
            "tiling_steps",
            "seed",
            "denoise",
            "use_controlnet",
            "tile_controlnet",
            "strength"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SCRIPT",
          "items": [
            {
              "type": "SCRIPT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Scripts"
    },
    "LoRA Stack to String converter": {
      "title": "TSC_LoRA_Stack2String",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: lora_stack",
          "properties": {
            "lora_stack": {
              "type": "LORA_STACK"
            }
          },
          "required": ["lora_stack"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Misc"
    },
    "Evaluate Integers": {
      "title": "TSC_EvaluateInts",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: python_expression, print_to_console",
          "properties": {
            "python_expression": {
              "type": "string"
            },
            "print_to_console": {
              "type": "string"
            }
          },
          "required": ["python_expression", "print_to_console"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, STRING",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Efficiency Nodes/Simple Eval"
    },
    "Evaluate Floats": {
      "title": "TSC_EvaluateFloats",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: python_expression, print_to_console",
          "properties": {
            "python_expression": {
              "type": "string"
            },
            "print_to_console": {
              "type": "string"
            }
          },
          "required": ["python_expression", "print_to_console"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, FLOAT, STRING",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "Efficiency Nodes/Simple Eval"
    },
    "Evaluate Strings": {
      "title": "TSC_EvaluateStrs",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: python_expression, print_to_console",
          "properties": {
            "python_expression": {
              "type": "string"
            },
            "print_to_console": {
              "type": "string"
            }
          },
          "required": ["python_expression", "print_to_console"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Efficiency Nodes/Simple Eval"
    },
    "LoaderGGUF": {
      "title": "LoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: gguf_name",
          "properties": {
            "gguf_name": {
              "type": "string"
            }
          },
          "required": ["gguf_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "gguf"
    },
    "ClipLoaderGGUF": {
      "title": "ClipLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name, type",
          "properties": {
            "clip_name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "gguf"
    },
    "DualClipLoaderGGUF": {
      "title": "DualClipLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, type",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "gguf"
    },
    "TripleClipLoaderGGUF": {
      "title": "TripleClipLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, clip_name3",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "clip_name3": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "clip_name3"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "gguf"
    },
    "QuadrupleClipLoaderGGUF": {
      "title": "QuadrupleClipLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_name1, clip_name2, clip_name3, clip_name4",
          "properties": {
            "clip_name1": {
              "type": "string"
            },
            "clip_name2": {
              "type": "string"
            },
            "clip_name3": {
              "type": "string"
            },
            "clip_name4": {
              "type": "string"
            }
          },
          "required": ["clip_name1", "clip_name2", "clip_name3", "clip_name4"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "gguf"
    },
    "AudioEncoderLoaderGGUF": {
      "title": "AudioEncoderLoaderGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: audio_encoder_name",
          "properties": {
            "audio_encoder_name": {
              "type": "string"
            }
          },
          "required": ["audio_encoder_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: AUDIO_ENCODER",
          "items": [
            {
              "type": "AUDIO_ENCODER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "gguf"
    },
    "LoaderGGUFAdvanced": {
      "title": "LoaderGGUFAdvanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: gguf_name, dequant_dtype, patch_dtype, patch_on_device",
          "properties": {
            "gguf_name": {
              "type": "string"
            },
            "dequant_dtype": {
              "type": "string"
            },
            "patch_dtype": {
              "type": "string"
            },
            "patch_on_device": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "gguf_name",
            "dequant_dtype",
            "patch_dtype",
            "patch_on_device"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "gguf"
    },
    "VaeGGUF": {
      "title": "VaeGGUF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae_name",
          "properties": {
            "vae_name": {
              "type": "string"
            }
          },
          "required": ["vae_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VAE",
          "items": [
            {
              "type": "VAE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "gguf"
    },
    "GGUFUndo": {
      "title": "GGUFUndo",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: select_gguf",
          "properties": {
            "select_gguf": {
              "type": "string"
            }
          },
          "required": ["select_gguf"]
        }
      },
      "$category": "gguf"
    },
    "GGUFSave": {
      "title": "GGUFSave",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: select_safetensors",
          "properties": {
            "select_safetensors": {
              "type": "string"
            }
          },
          "required": ["select_safetensors"]
        }
      },
      "$category": "gguf"
    },
    "GGUFRun": {
      "title": "GGUFRun",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: select_safetensors",
          "properties": {
            "select_safetensors": {
              "type": "string"
            }
          },
          "required": ["select_safetensors"]
        }
      },
      "$category": "gguf"
    },
    "TENSORCut": {
      "title": "TENSORCut",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: select_safetensors",
          "properties": {
            "select_safetensors": {
              "type": "string"
            }
          },
          "required": ["select_safetensors"]
        }
      },
      "$category": "gguf"
    },
    "TENSORBoost": {
      "title": "TENSORBoost",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: select_safetensors",
          "properties": {
            "select_safetensors": {
              "type": "string"
            }
          },
          "required": ["select_safetensors"]
        }
      },
      "$category": "gguf"
    },
    "InContextEditInstruction": {
      "title": "InContextEditInstruction",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: editText, clip",
          "properties": {
            "editText": {
              "type": "string"
            },
            "clip": {
              "type": "string"
            }
          },
          "required": ["editText", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "In-context_Editing_Framework"
    },
    "DiptychCreate": {
      "title": "DiptychCreate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "string"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "In-context_Editing_Framework"
    },
    "ICEFConditioning": {
      "title": "ICEFConditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: In_context, negative, vae, diptych, maskDiptych",
          "properties": {
            "In_context": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "vae": {
              "type": "VAE"
            },
            "diptych": {
              "type": "IMAGE"
            },
            "maskDiptych": {
              "type": "MASK"
            }
          },
          "required": [
            "In_context",
            "negative",
            "vae",
            "diptych",
            "maskDiptych"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, CONDITIONING, LATENT",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "In-context_Editing_Framework"
    },
    "Mask By Text": {
      "title": "ClipSegNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, prompt, negative_prompt, precision, normalize",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "prompt": {
              "type": "string"
            },
            "negative_prompt": {
              "type": "string"
            },
            "precision": {
              "type": "number"
            },
            "normalize": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "prompt",
            "negative_prompt",
            "precision",
            "normalize"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Mask Morphology": {
      "title": "MaskMorphologyNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, distance, op",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "distance": {
              "type": "number"
            },
            "op": {
              "type": "string"
            }
          },
          "required": ["image", "distance", "op"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Combine Masks": {
      "title": "MaskCombineOp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, op, clamp_result, round_result",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "op": {
              "type": "string"
            },
            "clamp_result": {
              "type": "string"
            },
            "round_result": {
              "type": "string"
            }
          },
          "required": ["image1", "image2", "op", "clamp_result", "round_result"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Unary Mask Op": {
      "title": "UnaryMaskOp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, op",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "op": {
              "type": "string"
            }
          },
          "required": ["image", "op"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Unary Image Op": {
      "title": "UnaryImageOp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, op",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "op": {
              "type": "string"
            }
          },
          "required": ["image", "op"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Blur": {
      "title": "BlurNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, radius, sigma_factor",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "radius": {
              "type": "number"
            },
            "sigma_factor": {
              "type": "number"
            }
          },
          "required": ["image", "radius", "sigma_factor"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Image To Mask": {
      "title": "ImageToMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, method",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "method": {
              "type": "string"
            }
          },
          "required": ["image", "method"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Mix Images By Mask": {
      "title": "MixByMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1, image2, mask",
          "properties": {
            "image1": {
              "type": "IMAGE"
            },
            "image2": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "IMAGE"
            }
          },
          "required": ["image1", "image2", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Mix Color By Mask": {
      "title": "MixColorByMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, r, g, b, mask",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "r": {
              "type": "number"
            },
            "g": {
              "type": "number"
            },
            "b": {
              "type": "number"
            },
            "mask": {
              "type": "IMAGE"
            }
          },
          "required": ["image", "r", "g", "b", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Mask To Region": {
      "title": "MaskToRegion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, padding, constraints, constraint_x, constraint_y, min_width, min_height, batch_behavior",
          "properties": {
            "mask": {
              "type": "IMAGE"
            },
            "padding": {
              "type": "number"
            },
            "constraints": {
              "type": "string"
            },
            "constraint_x": {
              "type": "number"
            },
            "constraint_y": {
              "type": "number"
            },
            "min_width": {
              "type": "number"
            },
            "min_height": {
              "type": "number"
            },
            "batch_behavior": {
              "type": "string"
            }
          },
          "required": [
            "mask",
            "padding",
            "constraints",
            "constraint_x",
            "constraint_y",
            "min_width",
            "min_height",
            "batch_behavior"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Cut By Mask": {
      "title": "CutByMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, force_resize_width, force_resize_height",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "IMAGE"
            },
            "force_resize_width": {
              "type": "number"
            },
            "force_resize_height": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mask",
            "force_resize_width",
            "force_resize_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Paste By Mask": {
      "title": "PasteByMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_base, image_to_paste, mask, resize_behavior",
          "properties": {
            "image_base": {
              "type": "IMAGE"
            },
            "image_to_paste": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "IMAGE"
            },
            "resize_behavior": {
              "type": "string"
            }
          },
          "required": [
            "image_base",
            "image_to_paste",
            "mask",
            "resize_behavior"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Get Image Size": {
      "title": "GetImageSize",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Change Channel Count": {
      "title": "ChangeChannelCount",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, kind",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "kind": {
              "type": "string"
            }
          },
          "required": ["image", "kind"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Constant Mask": {
      "title": "ConstantMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: value, explicit_height, explicit_width",
          "properties": {
            "value": {
              "type": "number"
            },
            "explicit_height": {
              "type": "number"
            },
            "explicit_width": {
              "type": "number"
            }
          },
          "required": ["value", "explicit_height", "explicit_width"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Prune By Mask": {
      "title": "PruneByMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "IMAGE"
            }
          },
          "required": ["image", "mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Separate Mask Components": {
      "title": "SeparateMaskComponents",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask",
          "properties": {
            "mask": {
              "type": "IMAGE"
            }
          },
          "required": ["mask"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK_MAPPING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK_MAPPING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Create Rect Mask": {
      "title": "CreateRectMask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mode, origin, x, y, width, height, image_width, image_height",
          "properties": {
            "mode": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "image_width": {
              "type": "number"
            },
            "image_height": {
              "type": "number"
            }
          },
          "required": [
            "mode",
            "origin",
            "x",
            "y",
            "width",
            "height",
            "image_width",
            "image_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Make Image Batch": {
      "title": "MakeImageBatch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image1",
          "properties": {
            "image1": {
              "type": "IMAGE"
            }
          },
          "required": ["image1"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Create QR Code": {
      "title": "CreateQRCodeNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, size, qr_version, error_correction, box_size, border",
          "properties": {
            "text": {
              "type": "string"
            },
            "size": {
              "type": "number"
            },
            "qr_version": {
              "type": "number"
            },
            "error_correction": {
              "type": "string"
            },
            "box_size": {
              "type": "number"
            },
            "border": {
              "type": "number"
            }
          },
          "required": [
            "text",
            "size",
            "qr_version",
            "error_correction",
            "box_size",
            "border"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "Convert Color Space": {
      "title": "ConvertColorSpace",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: in_space, out_space, image",
          "properties": {
            "in_space": {
              "type": "string"
            },
            "out_space": {
              "type": "string"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["in_space", "out_space", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "MasqueradeIncrementer": {
      "title": "MaqueradeIncrementerNode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: seed, max_value",
          "properties": {
            "seed": {
              "type": "number"
            },
            "max_value": {
              "type": "number"
            }
          },
          "required": ["seed", "max_value"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "Masquerade Nodes"
    },
    "BLIP Model Loader": {
      "title": "WAS_BLIP_Model_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: blip_model, vqa_model_id, device",
          "properties": {
            "blip_model": {
              "type": "string"
            },
            "vqa_model_id": {
              "type": "string"
            },
            "device": {
              "type": "string"
            }
          },
          "required": ["blip_model", "vqa_model_id", "device"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BLIP_MODEL",
          "items": [
            {
              "type": "BLIP_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Loaders"
    },
    "Blend Latents": {
      "title": "WAS_Blend_Latents",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent_a, latent_b, operation, blend",
          "properties": {
            "latent_a": {
              "type": "LATENT"
            },
            "latent_b": {
              "type": "LATENT"
            },
            "operation": {
              "type": "string"
            },
            "blend": {
              "type": "number"
            }
          },
          "required": ["latent_a", "latent_b", "operation", "blend"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Latent"
    },
    "Bus Node": {
      "title": "WAS_Bus",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BUS, MODEL, CLIP, VAE, CONDITIONING, CONDITIONING",
          "items": [
            {
              "type": "BUS"
            },
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "CONDITIONING"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "WAS Suite/Utilities"
    },
    "Cache Node": {
      "title": "WAS_Cache",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent_suffix, image_suffix, conditioning_suffix",
          "properties": {
            "latent_suffix": {
              "type": "string"
            },
            "image_suffix": {
              "type": "string"
            },
            "conditioning_suffix": {
              "type": "string"
            }
          },
          "required": ["latent_suffix", "image_suffix", "conditioning_suffix"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/IO"
    },
    "Checkpoint Loader": {
      "title": "WAS_Checkpoint_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: config_name, ckpt_name",
          "properties": {
            "config_name": {
              "type": "string"
            },
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["config_name", "ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE, STRING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Loaders/Advanced"
    },
    "Checkpoint Loader (Simple)": {
      "title": "WAS_Checkpoint_Loader_Simple",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE, STRING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Loaders"
    },
    "CLIPTextEncode (NSP)": {
      "title": "WAS_NSP_CLIPTextEncoder",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mode, noodle_key, seed, text, clip",
          "properties": {
            "mode": {
              "type": "string"
            },
            "noodle_key": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            },
            "text": {
              "type": "string"
            },
            "clip": {
              "type": "CLIP"
            }
          },
          "required": ["mode", "noodle_key", "seed", "text", "clip"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING, STRING, STRING",
          "items": [
            {
              "type": "CONDITIONING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Conditioning"
    },
    "CLIP Input Switch": {
      "title": "WAS_CLIP_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_a, clip_b, boolean",
          "properties": {
            "clip_a": {
              "type": "CLIP"
            },
            "clip_b": {
              "type": "CLIP"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["clip_a", "clip_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP",
          "items": [
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "CLIP Vision Input Switch": {
      "title": "WAS_CLIP_Vision_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip_vision_a, clip_vision_b, boolean",
          "properties": {
            "clip_vision_a": {
              "type": "CLIP_VISION"
            },
            "clip_vision_b": {
              "type": "CLIP_VISION"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["clip_vision_a", "clip_vision_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIP_VISION",
          "items": [
            {
              "type": "CLIP_VISION"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Conditioning Input Switch": {
      "title": "WAS_Conditioning_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: conditioning_a, conditioning_b, boolean",
          "properties": {
            "conditioning_a": {
              "type": "CONDITIONING"
            },
            "conditioning_b": {
              "type": "CONDITIONING"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["conditioning_a", "conditioning_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Constant Number": {
      "title": "WAS_Constant_Number",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number_type, number",
          "properties": {
            "number_type": {
              "type": "string"
            },
            "number": {
              "type": "number"
            }
          },
          "required": ["number_type", "number"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Number"
    },
    "Create Grid Image": {
      "title": "WAS_Image_Grid_Image",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images_path, pattern_glob, include_subfolders, border_width, number_of_columns, max_cell_size, border_red, border_green, border_blue",
          "properties": {
            "images_path": {
              "type": "string"
            },
            "pattern_glob": {
              "type": "string"
            },
            "include_subfolders": {
              "type": "string"
            },
            "border_width": {
              "type": "number"
            },
            "number_of_columns": {
              "type": "number"
            },
            "max_cell_size": {
              "type": "number"
            },
            "border_red": {
              "type": "number"
            },
            "border_green": {
              "type": "number"
            },
            "border_blue": {
              "type": "number"
            }
          },
          "required": [
            "images_path",
            "pattern_glob",
            "include_subfolders",
            "border_width",
            "number_of_columns",
            "max_cell_size",
            "border_red",
            "border_green",
            "border_blue"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Create Grid Image from Batch": {
      "title": "WAS_Image_Grid_Image_Batch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, border_width, number_of_columns, max_cell_size, border_red, border_green, border_blue",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "border_width": {
              "type": "number"
            },
            "number_of_columns": {
              "type": "number"
            },
            "max_cell_size": {
              "type": "number"
            },
            "border_red": {
              "type": "number"
            },
            "border_green": {
              "type": "number"
            },
            "border_blue": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "border_width",
            "number_of_columns",
            "max_cell_size",
            "border_red",
            "border_green",
            "border_blue"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Create Morph Image": {
      "title": "WAS_Image_Morph_GIF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_a, image_b, transition_frames, still_image_delay_ms, duration_ms, loops, max_size, output_path, filename, filetype",
          "properties": {
            "image_a": {
              "type": "IMAGE"
            },
            "image_b": {
              "type": "IMAGE"
            },
            "transition_frames": {
              "type": "number"
            },
            "still_image_delay_ms": {
              "type": "number"
            },
            "duration_ms": {
              "type": "number"
            },
            "loops": {
              "type": "number"
            },
            "max_size": {
              "type": "number"
            },
            "output_path": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "filetype": {
              "type": "string"
            }
          },
          "required": [
            "image_a",
            "image_b",
            "transition_frames",
            "still_image_delay_ms",
            "duration_ms",
            "loops",
            "max_size",
            "output_path",
            "filename",
            "filetype"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, STRING, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Animation"
    },
    "Create Morph Image from Path": {
      "title": "WAS_Image_Morph_GIF_By_Path",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: transition_frames, still_image_delay_ms, duration_ms, loops, max_size, input_path, input_pattern, output_path, filename, filetype",
          "properties": {
            "transition_frames": {
              "type": "number"
            },
            "still_image_delay_ms": {
              "type": "number"
            },
            "duration_ms": {
              "type": "number"
            },
            "loops": {
              "type": "number"
            },
            "max_size": {
              "type": "number"
            },
            "input_path": {
              "type": "string"
            },
            "input_pattern": {
              "type": "string"
            },
            "output_path": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "filetype": {
              "type": "string"
            }
          },
          "required": [
            "transition_frames",
            "still_image_delay_ms",
            "duration_ms",
            "loops",
            "max_size",
            "input_path",
            "input_pattern",
            "output_path",
            "filename",
            "filetype"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Animation"
    },
    "Create Video from Path": {
      "title": "WAS_Create_Video_From_Path",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: transition_frames, image_delay_sec, fps, max_size, input_path, output_path, filename, codec",
          "properties": {
            "transition_frames": {
              "type": "number"
            },
            "image_delay_sec": {
              "type": "number"
            },
            "fps": {
              "type": "number"
            },
            "max_size": {
              "type": "number"
            },
            "input_path": {
              "type": "string"
            },
            "output_path": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "codec": {
              "type": "string"
            }
          },
          "required": [
            "transition_frames",
            "image_delay_sec",
            "fps",
            "max_size",
            "input_path",
            "output_path",
            "filename",
            "codec"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Animation"
    },
    "CLIPSeg Masking": {
      "title": "WAS_CLIPSeg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, text",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["image", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, IMAGE",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "CLIPSeg Model Loader": {
      "title": "WAS_CLIPSeg_Model_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model",
          "properties": {
            "model": {
              "type": "string"
            }
          },
          "required": ["model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CLIPSEG_MODEL",
          "items": [
            {
              "type": "CLIPSEG_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Loaders"
    },
    "CLIPSeg Batch Masking": {
      "title": "WAS_CLIPSeg_Batch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_a, image_b, text_a, text_b",
          "properties": {
            "image_a": {
              "type": "IMAGE"
            },
            "image_b": {
              "type": "IMAGE"
            },
            "text_a": {
              "type": "string"
            },
            "text_b": {
              "type": "string"
            }
          },
          "required": ["image_a", "image_b", "text_a", "text_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Convert Masks to Images": {
      "title": "WAS_Mask_To_Image",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks",
          "properties": {
            "masks": {
              "type": "MASK"
            }
          },
          "required": ["masks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Control Net Model Input Switch": {
      "title": "WAS_Control_Net_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: control_net_a, control_net_b, boolean",
          "properties": {
            "control_net_a": {
              "type": "CONTROL_NET"
            },
            "control_net_b": {
              "type": "CONTROL_NET"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["control_net_a", "control_net_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONTROL_NET",
          "items": [
            {
              "type": "CONTROL_NET"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Debug Number to Console": {
      "title": "WAS_Debug_Number_to_Console",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number, label",
          "properties": {
            "number": {
              "type": "NUMBER"
            },
            "label": {
              "type": "string"
            }
          },
          "required": ["number", "label"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER",
          "items": [
            {
              "type": "NUMBER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Debug"
    },
    "Dictionary to Console": {
      "title": "WAS_Dictionary_To_Console",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: dictionary, label",
          "properties": {
            "dictionary": {
              "type": "DICT"
            },
            "label": {
              "type": "string"
            }
          },
          "required": ["dictionary", "label"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: DICT",
          "items": [
            {
              "type": "DICT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Debug"
    },
    "Diffusers Model Loader": {
      "title": "WAS_Diffusers_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_path",
          "properties": {
            "model_path": {
              "type": "string"
            }
          },
          "required": ["model_path"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE, STRING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Loaders/Advanced"
    },
    "Diffusers Hub Model Down-Loader": {
      "title": "WAS_Diffusers_Hub_Model_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: repo_id, revision",
          "properties": {
            "repo_id": {
              "type": "string"
            },
            "revision": {
              "type": "string"
            }
          },
          "required": ["repo_id", "revision"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE, STRING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Loaders/Advanced"
    },
    "Export API": {
      "title": "WAS_Export_API",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: save_prompt_api, output_path, filename_prefix, filename_delimiter, filename_number_padding, parse_text_tokens",
          "properties": {
            "save_prompt_api": {
              "type": "string"
            },
            "output_path": {
              "type": "string"
            },
            "filename_prefix": {
              "type": "string"
            },
            "filename_delimiter": {
              "type": "string"
            },
            "filename_number_padding": {
              "type": "number"
            },
            "parse_text_tokens": {
              "type": "BOOLEAN"
            }
          },
          "required": [
            "save_prompt_api",
            "output_path",
            "filename_prefix",
            "filename_delimiter",
            "filename_number_padding",
            "parse_text_tokens"
          ]
        }
      },
      "$category": "WAS Suite/Debug"
    },
    "Latent Input Switch": {
      "title": "WAS_Latent_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent_a, latent_b, boolean",
          "properties": {
            "latent_a": {
              "type": "LATENT"
            },
            "latent_b": {
              "type": "LATENT"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["latent_a", "latent_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Load Cache": {
      "title": "WAS_Load_Cache",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: latent_path, image_path, conditioning_path",
          "properties": {
            "latent_path": {
              "type": "string"
            },
            "image_path": {
              "type": "string"
            },
            "conditioning_path": {
              "type": "string"
            }
          },
          "required": ["latent_path", "image_path", "conditioning_path"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT, IMAGE, CONDITIONING",
          "items": [
            {
              "type": "LATENT"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/IO"
    },
    "Logic Boolean": {
      "title": "WAS_Boolean",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: boolean",
          "properties": {
            "boolean": {
              "type": "number"
            }
          },
          "required": ["boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN, NUMBER, INT, FLOAT",
          "items": [
            {
              "type": "BOOLEAN"
            },
            {
              "type": "NUMBER"
            },
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Logic Boolean Primitive": {
      "title": "WAS_Boolean_Primitive",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: boolean",
          "properties": {
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Logic Comparison OR": {
      "title": "WAS_Logical_OR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: boolean_a, boolean_b",
          "properties": {
            "boolean_a": {
              "type": "BOOLEAN"
            },
            "boolean_b": {
              "type": "BOOLEAN"
            }
          },
          "required": ["boolean_a", "boolean_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Logic Comparison AND": {
      "title": "WAS_Logical_AND",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: boolean_a, boolean_b",
          "properties": {
            "boolean_a": {
              "type": "BOOLEAN"
            },
            "boolean_b": {
              "type": "BOOLEAN"
            }
          },
          "required": ["boolean_a", "boolean_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Logic Comparison XOR": {
      "title": "WAS_Logical_XOR",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: boolean_a, boolean_b",
          "properties": {
            "boolean_a": {
              "type": "BOOLEAN"
            },
            "boolean_b": {
              "type": "BOOLEAN"
            }
          },
          "required": ["boolean_a", "boolean_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Logic NOT": {
      "title": "WAS_Logical_NOT",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: boolean",
          "properties": {
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Lora Loader": {
      "title": "WAS_Lora_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, lora_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "lora_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, STRING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Loaders"
    },
    "Hex to HSL": {
      "title": "WAS_Hex_to_HSL",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: hex_color",
          "properties": {
            "hex_color": {
              "type": "string"
            }
          },
          "required": ["hex_color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, INT, INT, FLOAT, STRING",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "WAS Suite/Utilities"
    },
    "HSL to Hex": {
      "title": "WAS_HSL_to_Hex",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: hsl_color",
          "properties": {
            "hsl_color": {
              "type": "string"
            }
          },
          "required": ["hsl_color"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Utilities"
    },
    "Image SSAO (Ambient Occlusion)": {
      "title": "WAS_Image_Ambient_Occlusion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, depth_images, strength, radius, ao_blur, specular_threshold, enable_specular_masking, tile_size",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "depth_images": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "radius": {
              "type": "number"
            },
            "ao_blur": {
              "type": "number"
            },
            "specular_threshold": {
              "type": "number"
            },
            "enable_specular_masking": {
              "type": "string"
            },
            "tile_size": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "depth_images",
            "strength",
            "radius",
            "ao_blur",
            "specular_threshold",
            "enable_specular_masking",
            "tile_size"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image SSDO (Direct Occlusion)": {
      "title": "WAS_Image_Direct_Occlusion",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, depth_images, strength, radius, specular_threshold, colored_occlusion",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "depth_images": {
              "type": "IMAGE"
            },
            "strength": {
              "type": "number"
            },
            "radius": {
              "type": "number"
            },
            "specular_threshold": {
              "type": "number"
            },
            "colored_occlusion": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "depth_images",
            "strength",
            "radius",
            "specular_threshold",
            "colored_occlusion"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Analyze": {
      "title": "WAS_Image_Analyze",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["image", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Analyze"
    },
    "Image Aspect Ratio": {
      "title": "WAS_Image_Aspect_Ratio",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, NUMBER, STRING, STRING",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "NUMBER"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Image Batch": {
      "title": "WAS_Image_Batch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image"
    },
    "Image Blank": {
      "title": "WAS_Image_Blank",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, red, green, blue",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "red": {
              "type": "number"
            },
            "green": {
              "type": "number"
            },
            "blue": {
              "type": "number"
            }
          },
          "required": ["width", "height", "red", "green", "blue"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image"
    },
    "Image Blend by Mask": {
      "title": "WAS_Image_Blend_Mask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_a, image_b, mask, blend_percentage",
          "properties": {
            "image_a": {
              "type": "IMAGE"
            },
            "image_b": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "IMAGE"
            },
            "blend_percentage": {
              "type": "number"
            }
          },
          "required": ["image_a", "image_b", "mask", "blend_percentage"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image"
    },
    "Image Blend": {
      "title": "WAS_Image_Blend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_a, image_b, blend_percentage",
          "properties": {
            "image_a": {
              "type": "IMAGE"
            },
            "image_b": {
              "type": "IMAGE"
            },
            "blend_percentage": {
              "type": "number"
            }
          },
          "required": ["image_a", "image_b", "blend_percentage"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image"
    },
    "Image Blending Mode": {
      "title": "WAS_Image_Blending_Mode",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_a, image_b, mode, blend_percentage",
          "properties": {
            "image_a": {
              "type": "IMAGE"
            },
            "image_b": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "blend_percentage": {
              "type": "number"
            }
          },
          "required": ["image_a", "image_b", "mode", "blend_percentage"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image"
    },
    "Image Bloom Filter": {
      "title": "WAS_Image_Bloom_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, radius, intensity",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "radius": {
              "type": "number"
            },
            "intensity": {
              "type": "number"
            }
          },
          "required": ["image", "radius", "intensity"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Canny Filter": {
      "title": "WAS_Canny_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, enable_threshold, threshold_low, threshold_high",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "enable_threshold": {
              "type": "string"
            },
            "threshold_low": {
              "type": "number"
            },
            "threshold_high": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "enable_threshold",
            "threshold_low",
            "threshold_high"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Chromatic Aberration": {
      "title": "WAS_Image_Chromatic_Aberration",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, red_offset, green_offset, blue_offset, intensity, fade_radius",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "red_offset": {
              "type": "number"
            },
            "green_offset": {
              "type": "number"
            },
            "blue_offset": {
              "type": "number"
            },
            "intensity": {
              "type": "number"
            },
            "fade_radius": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "red_offset",
            "green_offset",
            "blue_offset",
            "intensity",
            "fade_radius"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Color Palette": {
      "title": "WAS_Image_Color_Palette",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, colors, mode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "colors": {
              "type": "number"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["image", "colors", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, LIST",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "LIST"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Analyze"
    },
    "Image Crop Face": {
      "title": "WAS_Image_Crop_Face",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, crop_padding_factor, cascade_xml",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "crop_padding_factor": {
              "type": "number"
            },
            "cascade_xml": {
              "type": "string"
            }
          },
          "required": ["image", "crop_padding_factor", "cascade_xml"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, CROP_DATA",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "CROP_DATA"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Crop Location": {
      "title": "WAS_Image_Crop_Location",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, top, left, right, bottom",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "top": {
              "type": "number"
            },
            "left": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            }
          },
          "required": ["image", "top", "left", "right", "bottom"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, CROP_DATA",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "CROP_DATA"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Crop Square Location": {
      "title": "WAS_Image_Crop_Square_Location",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, x, y, size",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "size": {
              "type": "number"
            }
          },
          "required": ["image", "x", "y", "size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, CROP_DATA",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "CROP_DATA"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Displacement Warp": {
      "title": "WAS_Image_Displacement_Warp",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, displacement_maps, amplitude",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "displacement_maps": {
              "type": "IMAGE"
            },
            "amplitude": {
              "type": "number"
            }
          },
          "required": ["images", "displacement_maps", "amplitude"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Transform"
    },
    "Image Lucy Sharpen": {
      "title": "WAS_Lucy_Sharpen",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, iterations, kernel_size",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "iterations": {
              "type": "number"
            },
            "kernel_size": {
              "type": "number"
            }
          },
          "required": ["images", "iterations", "kernel_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Paste Face": {
      "title": "WAS_Image_Paste_Face_Crop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, crop_image, crop_data, crop_blending, crop_sharpening",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "crop_image": {
              "type": "IMAGE"
            },
            "crop_data": {
              "type": "CROP_DATA"
            },
            "crop_blending": {
              "type": "number"
            },
            "crop_sharpening": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "crop_image",
            "crop_data",
            "crop_blending",
            "crop_sharpening"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Paste Crop": {
      "title": "WAS_Image_Paste_Crop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, crop_image, crop_data, crop_blending, crop_sharpening",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "crop_image": {
              "type": "IMAGE"
            },
            "crop_data": {
              "type": "CROP_DATA"
            },
            "crop_blending": {
              "type": "number"
            },
            "crop_sharpening": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "crop_image",
            "crop_data",
            "crop_blending",
            "crop_sharpening"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Paste Crop by Location": {
      "title": "WAS_Image_Paste_Crop_Location",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, crop_image, top, left, right, bottom, crop_blending, crop_sharpening",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "crop_image": {
              "type": "IMAGE"
            },
            "top": {
              "type": "number"
            },
            "left": {
              "type": "number"
            },
            "right": {
              "type": "number"
            },
            "bottom": {
              "type": "number"
            },
            "crop_blending": {
              "type": "number"
            },
            "crop_sharpening": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "crop_image",
            "top",
            "left",
            "right",
            "bottom",
            "crop_blending",
            "crop_sharpening"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Pixelate": {
      "title": "WAS_Image_Pixelate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, pixelation_size, num_colors, init_mode, max_iterations, dither, dither_mode",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "pixelation_size": {
              "type": "number"
            },
            "num_colors": {
              "type": "number"
            },
            "init_mode": {
              "type": "string"
            },
            "max_iterations": {
              "type": "number"
            },
            "dither": {
              "type": "string"
            },
            "dither_mode": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "pixelation_size",
            "num_colors",
            "init_mode",
            "max_iterations",
            "dither",
            "dither_mode"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Power Noise": {
      "title": "WAS_Image_Power_Noise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, frequency, attenuation, noise_type, seed",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "frequency": {
              "type": "number"
            },
            "attenuation": {
              "type": "number"
            },
            "noise_type": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": [
            "width",
            "height",
            "frequency",
            "attenuation",
            "noise_type",
            "seed"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Generate/Noise"
    },
    "Image Dragan Photography Filter": {
      "title": "WAS_Dragon_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, saturation, contrast, brightness, sharpness, highpass_radius, highpass_samples, highpass_strength, colorize",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "saturation": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "brightness": {
              "type": "number"
            },
            "sharpness": {
              "type": "number"
            },
            "highpass_radius": {
              "type": "number"
            },
            "highpass_samples": {
              "type": "number"
            },
            "highpass_strength": {
              "type": "number"
            },
            "colorize": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "saturation",
            "contrast",
            "brightness",
            "sharpness",
            "highpass_radius",
            "highpass_samples",
            "highpass_strength",
            "colorize"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Edge Detection Filter": {
      "title": "WAS_Image_Edge",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mode",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["image", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Film Grain": {
      "title": "WAS_Film_Grain",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, density, intensity, highlights, supersample_factor",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "density": {
              "type": "number"
            },
            "intensity": {
              "type": "number"
            },
            "highlights": {
              "type": "number"
            },
            "supersample_factor": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "density",
            "intensity",
            "highlights",
            "supersample_factor"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Filter Adjustments": {
      "title": "WAS_Image_Filters",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, brightness, contrast, saturation, sharpness, blur, gaussian_blur, edge_enhance, detail_enhance",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "brightness": {
              "type": "number"
            },
            "contrast": {
              "type": "number"
            },
            "saturation": {
              "type": "number"
            },
            "sharpness": {
              "type": "number"
            },
            "blur": {
              "type": "number"
            },
            "gaussian_blur": {
              "type": "number"
            },
            "edge_enhance": {
              "type": "number"
            },
            "detail_enhance": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "brightness",
            "contrast",
            "saturation",
            "sharpness",
            "blur",
            "gaussian_blur",
            "edge_enhance",
            "detail_enhance"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Flip": {
      "title": "WAS_Image_Flip",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, mode",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["images", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Transform"
    },
    "Image Gradient Map": {
      "title": "WAS_Image_Gradient_Map",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, gradient_image, flip_left_right",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "gradient_image": {
              "type": "IMAGE"
            },
            "flip_left_right": {
              "type": "string"
            }
          },
          "required": ["image", "gradient_image", "flip_left_right"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Generate Gradient": {
      "title": "WAS_Image_Generate_Gradient",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, direction, tolerance, gradient_stops",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "direction": {
              "type": "string"
            },
            "tolerance": {
              "type": "number"
            },
            "gradient_stops": {
              "type": "string"
            }
          },
          "required": [
            "width",
            "height",
            "direction",
            "tolerance",
            "gradient_stops"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Generate"
    },
    "Image High Pass Filter": {
      "title": "WAS_Image_High_Pass_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, radius, strength, color_output, neutral_background",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "radius": {
              "type": "number"
            },
            "strength": {
              "type": "number"
            },
            "color_output": {
              "type": "string"
            },
            "neutral_background": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "radius",
            "strength",
            "color_output",
            "neutral_background"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image History Loader": {
      "title": "WAS_Image_History",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "string"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/History"
    },
    "Image Input Switch": {
      "title": "WAS_Image_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_a, image_b, boolean",
          "properties": {
            "image_a": {
              "type": "IMAGE"
            },
            "image_b": {
              "type": "IMAGE"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image_a", "image_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Image Levels Adjustment": {
      "title": "WAS_Image_Levels",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, black_level, mid_level, white_level",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "black_level": {
              "type": "number"
            },
            "mid_level": {
              "type": "number"
            },
            "white_level": {
              "type": "number"
            }
          },
          "required": ["image", "black_level", "mid_level", "white_level"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Adjustment"
    },
    "Image Load": {
      "title": "WAS_Load_Image",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_path, RGBA",
          "properties": {
            "image_path": {
              "type": "string"
            },
            "RGBA": {
              "type": "string"
            }
          },
          "required": ["image_path", "RGBA"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/IO"
    },
    "Image Median Filter": {
      "title": "WAS_Image_Median_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, diameter, sigma_color, sigma_space",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "diameter": {
              "type": "number"
            },
            "sigma_color": {
              "type": "number"
            },
            "sigma_space": {
              "type": "number"
            }
          },
          "required": ["image", "diameter", "sigma_color", "sigma_space"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Mix RGB Channels": {
      "title": "WAS_Image_RGB_Merge",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: red_channel, green_channel, blue_channel",
          "properties": {
            "red_channel": {
              "type": "IMAGE"
            },
            "green_channel": {
              "type": "IMAGE"
            },
            "blue_channel": {
              "type": "IMAGE"
            }
          },
          "required": ["red_channel", "green_channel", "blue_channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Monitor Effects Filter": {
      "title": "WAS_Image_Monitor_Distortion_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mode, amplitude, offset",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "amplitude": {
              "type": "number"
            },
            "offset": {
              "type": "number"
            }
          },
          "required": ["image", "mode", "amplitude", "offset"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Nova Filter": {
      "title": "WAS_Image_Nova_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, amplitude, frequency",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "amplitude": {
              "type": "number"
            },
            "frequency": {
              "type": "number"
            }
          },
          "required": ["image", "amplitude", "frequency"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Padding": {
      "title": "WAS_Image_Padding",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, feathering, feather_second_pass, left_padding, right_padding, top_padding, bottom_padding",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "feathering": {
              "type": "number"
            },
            "feather_second_pass": {
              "type": "string"
            },
            "left_padding": {
              "type": "number"
            },
            "right_padding": {
              "type": "number"
            },
            "top_padding": {
              "type": "number"
            },
            "bottom_padding": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "feathering",
            "feather_second_pass",
            "left_padding",
            "right_padding",
            "top_padding",
            "bottom_padding"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Transform"
    },
    "Image Perlin Noise": {
      "title": "WAS_Image_Perlin_Noise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, scale, octaves, persistence, seed",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "scale": {
              "type": "number"
            },
            "octaves": {
              "type": "number"
            },
            "persistence": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": [
            "width",
            "height",
            "scale",
            "octaves",
            "persistence",
            "seed"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Generate/Noise"
    },
    "Image Rembg (Remove Background)": {
      "title": "WAS_Remove_Rembg",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, transparency, model, post_processing, only_mask, alpha_matting, alpha_matting_foreground_threshold, alpha_matting_background_threshold, alpha_matting_erode_size, background_color",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "transparency": {
              "type": "BOOLEAN"
            },
            "model": {
              "type": "string"
            },
            "post_processing": {
              "type": "BOOLEAN"
            },
            "only_mask": {
              "type": "BOOLEAN"
            },
            "alpha_matting": {
              "type": "BOOLEAN"
            },
            "alpha_matting_foreground_threshold": {
              "type": "number"
            },
            "alpha_matting_background_threshold": {
              "type": "number"
            },
            "alpha_matting_erode_size": {
              "type": "number"
            },
            "background_color": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "transparency",
            "model",
            "post_processing",
            "only_mask",
            "alpha_matting",
            "alpha_matting_foreground_threshold",
            "alpha_matting_background_threshold",
            "alpha_matting_erode_size",
            "background_color"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/AI"
    },
    "Image Perlin Power Fractal": {
      "title": "WAS_Image_Perlin_Power_Fractal",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, scale, octaves, persistence, lacunarity, exponent, seed",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "scale": {
              "type": "number"
            },
            "octaves": {
              "type": "number"
            },
            "persistence": {
              "type": "number"
            },
            "lacunarity": {
              "type": "number"
            },
            "exponent": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": [
            "width",
            "height",
            "scale",
            "octaves",
            "persistence",
            "lacunarity",
            "exponent",
            "seed"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Generate/Noise"
    },
    "Image Remove Background (Alpha)": {
      "title": "WAS_Remove_Background",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, mode, threshold, threshold_tolerance",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "threshold": {
              "type": "number"
            },
            "threshold_tolerance": {
              "type": "number"
            }
          },
          "required": ["images", "mode", "threshold", "threshold_tolerance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Remove Color": {
      "title": "WAS_Image_Remove_Color",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, target_red, target_green, target_blue, replace_red, replace_green, replace_blue, clip_threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "target_red": {
              "type": "number"
            },
            "target_green": {
              "type": "number"
            },
            "target_blue": {
              "type": "number"
            },
            "replace_red": {
              "type": "number"
            },
            "replace_green": {
              "type": "number"
            },
            "replace_blue": {
              "type": "number"
            },
            "clip_threshold": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "target_red",
            "target_green",
            "target_blue",
            "replace_red",
            "replace_green",
            "replace_blue",
            "clip_threshold"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Resize": {
      "title": "WAS_Image_Rescale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mode, supersample, resampling, rescale_factor, resize_width, resize_height",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "supersample": {
              "type": "string"
            },
            "resampling": {
              "type": "string"
            },
            "rescale_factor": {
              "type": "number"
            },
            "resize_width": {
              "type": "number"
            },
            "resize_height": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mode",
            "supersample",
            "resampling",
            "rescale_factor",
            "resize_width",
            "resize_height"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Transform"
    },
    "Image Rotate": {
      "title": "WAS_Image_Rotate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, mode, rotation, sampler",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "rotation": {
              "type": "number"
            },
            "sampler": {
              "type": "string"
            }
          },
          "required": ["images", "mode", "rotation", "sampler"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Transform"
    },
    "Image Rotate Hue": {
      "title": "WAS_Image_Rotate_Hue",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, hue_shift",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "hue_shift": {
              "type": "number"
            }
          },
          "required": ["image", "hue_shift"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Adjustment"
    },
    "Image Send HTTP": {
      "title": "WAS_Image_Send_HTTP",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, url, method_type, request_field_name",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "url": {
              "type": "string"
            },
            "method_type": {
              "type": "string"
            },
            "request_field_name": {
              "type": "string"
            }
          },
          "required": ["images", "url", "method_type", "request_field_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT, STRING",
          "items": [
            {
              "type": "INT"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/IO"
    },
    "Image Save": {
      "title": "WAS_Image_Save",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, output_path, filename_prefix, filename_delimiter, filename_number_padding, filename_number_start, extension, dpi, quality, optimize_image, lossless_webp, overwrite_mode, show_history, show_history_by_prefix, embed_workflow, show_previews",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "output_path": {
              "type": "string"
            },
            "filename_prefix": {
              "type": "string"
            },
            "filename_delimiter": {
              "type": "string"
            },
            "filename_number_padding": {
              "type": "number"
            },
            "filename_number_start": {
              "type": "string"
            },
            "extension": {
              "type": "string"
            },
            "dpi": {
              "type": "number"
            },
            "quality": {
              "type": "number"
            },
            "optimize_image": {
              "type": "string"
            },
            "lossless_webp": {
              "type": "string"
            },
            "overwrite_mode": {
              "type": "string"
            },
            "show_history": {
              "type": "string"
            },
            "show_history_by_prefix": {
              "type": "string"
            },
            "embed_workflow": {
              "type": "string"
            },
            "show_previews": {
              "type": "string"
            }
          },
          "required": [
            "images",
            "output_path",
            "filename_prefix",
            "filename_delimiter",
            "filename_number_padding",
            "filename_number_start",
            "extension",
            "dpi",
            "quality",
            "optimize_image",
            "lossless_webp",
            "overwrite_mode",
            "show_history",
            "show_history_by_prefix",
            "embed_workflow",
            "show_previews"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/IO"
    },
    "Image Seamless Texture": {
      "title": "WAS_Image_Make_Seamless",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, blending, tiled, tiles",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "blending": {
              "type": "number"
            },
            "tiled": {
              "type": "string"
            },
            "tiles": {
              "type": "number"
            }
          },
          "required": ["images", "blending", "tiled", "tiles"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Select Channel": {
      "title": "WAS_Image_Select_Channel",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, channel",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "channel": {
              "type": "string"
            }
          },
          "required": ["image", "channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Select Color": {
      "title": "WAS_Image_Select_Color",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, red, green, blue, variance",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "red": {
              "type": "number"
            },
            "green": {
              "type": "number"
            },
            "blue": {
              "type": "number"
            },
            "variance": {
              "type": "number"
            }
          },
          "required": ["image", "red", "green", "blue", "variance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Shadows and Highlights": {
      "title": "WAS_Shadow_And_Highlight_Adjustment",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, shadow_threshold, shadow_factor, shadow_smoothing, highlight_threshold, highlight_factor, highlight_smoothing, simplify_isolation",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "shadow_threshold": {
              "type": "number"
            },
            "shadow_factor": {
              "type": "number"
            },
            "shadow_smoothing": {
              "type": "number"
            },
            "highlight_threshold": {
              "type": "number"
            },
            "highlight_factor": {
              "type": "number"
            },
            "highlight_smoothing": {
              "type": "number"
            },
            "simplify_isolation": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "shadow_threshold",
            "shadow_factor",
            "shadow_smoothing",
            "highlight_threshold",
            "highlight_factor",
            "highlight_smoothing",
            "simplify_isolation"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Image/Adjustment"
    },
    "Image Size to Number": {
      "title": "WAS_Image_Size_To_Number",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, NUMBER, FLOAT, FLOAT, INT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "WAS Suite/Number/Operations"
    },
    "Image Stitch": {
      "title": "WAS_Image_Stitch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_a, image_b, stitch, feathering",
          "properties": {
            "image_a": {
              "type": "IMAGE"
            },
            "image_b": {
              "type": "IMAGE"
            },
            "stitch": {
              "type": "string"
            },
            "feathering": {
              "type": "number"
            }
          },
          "required": ["image_a", "image_b", "stitch", "feathering"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Transform"
    },
    "Image Style Filter": {
      "title": "WAS_Image_Style_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, style",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "style": {
              "type": "string"
            }
          },
          "required": ["image", "style"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image Threshold": {
      "title": "WAS_Image_Threshold",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, threshold",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["image", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Tiled": {
      "title": "WAS_Image_Tile_Batch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, num_tiles",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "num_tiles": {
              "type": "number"
            }
          },
          "required": ["image", "num_tiles"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Process"
    },
    "Image Transpose": {
      "title": "WAS_Image_Transpose",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, image_overlay, width, height, X, Y, rotation, feathering",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "image_overlay": {
              "type": "IMAGE"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "X": {
              "type": "number"
            },
            "Y": {
              "type": "number"
            },
            "rotation": {
              "type": "number"
            },
            "feathering": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "image_overlay",
            "width",
            "height",
            "X",
            "Y",
            "rotation",
            "feathering"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Transform"
    },
    "Image fDOF Filter": {
      "title": "WAS_Image_fDOF",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, depth, mode, radius, samples",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "depth": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "radius": {
              "type": "number"
            },
            "samples": {
              "type": "number"
            }
          },
          "required": ["image", "depth", "mode", "radius", "samples"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Filter"
    },
    "Image to Latent Mask": {
      "title": "WAS_Image_To_Mask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, channel",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "channel": {
              "type": "string"
            }
          },
          "required": ["images", "channel"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Image to Noise": {
      "title": "WAS_Image_To_Noise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, num_colors, black_mix, gaussian_mix, brightness, output_mode, seed",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "num_colors": {
              "type": "number"
            },
            "black_mix": {
              "type": "number"
            },
            "gaussian_mix": {
              "type": "number"
            },
            "brightness": {
              "type": "number"
            },
            "output_mode": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": [
            "images",
            "num_colors",
            "black_mix",
            "gaussian_mix",
            "brightness",
            "output_mode",
            "seed"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Generate/Noise"
    },
    "Image to Seed": {
      "title": "WAS_Image_To_Seed",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Analyze"
    },
    "Images to RGB": {
      "title": "WAS_Images_To_RGB",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image"
    },
    "Images to Linear": {
      "title": "WAS_Images_To_Linear",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image"
    },
    "Integer place counter": {
      "title": "WAS_Integer_Place_Counter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: int_input",
          "properties": {
            "int_input": {
              "type": "number"
            }
          },
          "required": ["int_input"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Integer"
    },
    "Image Voronoi Noise Filter": {
      "title": "WAS_Image_Voronoi_Noise_Filter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: width, height, density, modulator, seed",
          "properties": {
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "density": {
              "type": "number"
            },
            "modulator": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": ["width", "height", "density", "modulator", "seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Generate/Noise"
    },
    "KSampler (WAS)": {
      "title": "WAS_KSampler",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, denoise",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "seed": {
              "type": "SEED"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "denoise": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "denoise"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Sampling"
    },
    "KSampler Cycle": {
      "title": "WAS_KSampler_Cycle",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, seed, steps, cfg, sampler_name, scheduler, positive, negative, latent_image, tiled_vae, latent_upscale, upscale_factor, upscale_cycles, starting_denoise, cycle_denoise, scale_denoise, scale_sampling, vae",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "seed": {
              "type": "number"
            },
            "steps": {
              "type": "number"
            },
            "cfg": {
              "type": "number"
            },
            "sampler_name": {
              "type": "string"
            },
            "scheduler": {
              "type": "string"
            },
            "positive": {
              "type": "CONDITIONING"
            },
            "negative": {
              "type": "CONDITIONING"
            },
            "latent_image": {
              "type": "LATENT"
            },
            "tiled_vae": {
              "type": "string"
            },
            "latent_upscale": {
              "type": "string"
            },
            "upscale_factor": {
              "type": "number"
            },
            "upscale_cycles": {
              "type": "number"
            },
            "starting_denoise": {
              "type": "number"
            },
            "cycle_denoise": {
              "type": "number"
            },
            "scale_denoise": {
              "type": "string"
            },
            "scale_sampling": {
              "type": "string"
            },
            "vae": {
              "type": "VAE"
            }
          },
          "required": [
            "model",
            "seed",
            "steps",
            "cfg",
            "sampler_name",
            "scheduler",
            "positive",
            "negative",
            "latent_image",
            "tiled_vae",
            "latent_upscale",
            "upscale_factor",
            "upscale_cycles",
            "starting_denoise",
            "cycle_denoise",
            "scale_denoise",
            "scale_sampling",
            "vae"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Sampling"
    },
    "Latent Batch": {
      "title": "WAS_Latent_Batch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Latent"
    },
    "Latent Noise Injection": {
      "title": "WAS_Latent_Noise",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, noise_std",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "noise_std": {
              "type": "number"
            }
          },
          "required": ["samples", "noise_std"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Latent/Generate"
    },
    "Latent Size to Number": {
      "title": "WAS_Latent_Size_To_Number",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples",
          "properties": {
            "samples": {
              "type": "LATENT"
            }
          },
          "required": ["samples"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, NUMBER, FLOAT, FLOAT, INT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 6,
          "minItems": 6
        }
      },
      "$category": "WAS Suite/Number/Operations"
    },
    "Latent Upscale by Factor (WAS)": {
      "title": "WAS_Latent_Upscale",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples, mode, factor, align",
          "properties": {
            "samples": {
              "type": "LATENT"
            },
            "mode": {
              "type": "string"
            },
            "factor": {
              "type": "number"
            },
            "align": {
              "type": "string"
            }
          },
          "required": ["samples", "mode", "factor", "align"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Latent/Transform"
    },
    "Load Image Batch": {
      "title": "WAS_Load_Image_Batch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mode, seed, index, label, path, pattern, allow_RGBA_output",
          "properties": {
            "mode": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            },
            "index": {
              "type": "number"
            },
            "label": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "pattern": {
              "type": "string"
            },
            "allow_RGBA_output": {
              "type": "string"
            }
          },
          "required": [
            "mode",
            "seed",
            "index",
            "label",
            "path",
            "pattern",
            "allow_RGBA_output"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/IO"
    },
    "Load Text File": {
      "title": "WAS_Text_Load_From_File",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: file_path, dictionary_name",
          "properties": {
            "file_path": {
              "type": "string"
            },
            "dictionary_name": {
              "type": "string"
            }
          },
          "required": ["file_path", "dictionary_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, DICT",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "DICT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/IO"
    },
    "Load Lora": {
      "title": "WAS_Lora_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model, clip, lora_name, strength_model, strength_clip",
          "properties": {
            "model": {
              "type": "MODEL"
            },
            "clip": {
              "type": "CLIP"
            },
            "lora_name": {
              "type": "string"
            },
            "strength_model": {
              "type": "number"
            },
            "strength_clip": {
              "type": "number"
            }
          },
          "required": [
            "model",
            "clip",
            "lora_name",
            "strength_model",
            "strength_clip"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, STRING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Loaders"
    },
    "Lora Input Switch": {
      "title": "WAS_Lora_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_a, clip_a, model_b, clip_b, boolean",
          "properties": {
            "model_a": {
              "type": "MODEL"
            },
            "clip_a": {
              "type": "CLIP"
            },
            "model_b": {
              "type": "MODEL"
            },
            "clip_b": {
              "type": "CLIP"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["model_a", "clip_a", "model_b", "clip_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Masks Add": {
      "title": "WAS_Mask_Add",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks_a, masks_b",
          "properties": {
            "masks_a": {
              "type": "MASK"
            },
            "masks_b": {
              "type": "MASK"
            }
          },
          "required": ["masks_a", "masks_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Masks Subtract": {
      "title": "WAS_Mask_Subtract",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks_a, masks_b",
          "properties": {
            "masks_a": {
              "type": "MASK"
            },
            "masks_b": {
              "type": "MASK"
            }
          },
          "required": ["masks_a", "masks_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Arbitrary Region": {
      "title": "WAS_Mask_Arbitrary_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, size, threshold",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "size": {
              "type": "number"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["masks", "size", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Batch to Mask": {
      "title": "WAS_Mask_Batch_to_Single_Mask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, batch_number",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "batch_number": {
              "type": "number"
            }
          },
          "required": ["masks", "batch_number"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Batch": {
      "title": "WAS_Mask_Batch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Ceiling Region": {
      "title": "WAS_Mask_Ceiling_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks",
          "properties": {
            "masks": {
              "type": "MASK"
            }
          },
          "required": ["masks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Crop Dominant Region": {
      "title": "WAS_Mask_Crop_Dominant_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, padding",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "padding": {
              "type": "number"
            }
          },
          "required": ["masks", "padding"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Crop Minority Region": {
      "title": "WAS_Mask_Crop_Minority_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, padding",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "padding": {
              "type": "number"
            }
          },
          "required": ["masks", "padding"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Crop Region": {
      "title": "WAS_Mask_Crop_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, padding, region_type",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "padding": {
              "type": "number"
            },
            "region_type": {
              "type": "string"
            }
          },
          "required": ["mask", "padding", "region_type"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, CROP_DATA, INT, INT, INT, INT, INT, INT",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "CROP_DATA"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 8,
          "minItems": 8
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Paste Region": {
      "title": "WAS_Mask_Paste_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask, crop_mask, crop_data, crop_blending, crop_sharpening",
          "properties": {
            "mask": {
              "type": "MASK"
            },
            "crop_mask": {
              "type": "MASK"
            },
            "crop_data": {
              "type": "CROP_DATA"
            },
            "crop_blending": {
              "type": "number"
            },
            "crop_sharpening": {
              "type": "number"
            }
          },
          "required": [
            "mask",
            "crop_mask",
            "crop_data",
            "crop_blending",
            "crop_sharpening"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK, MASK",
          "items": [
            {
              "type": "MASK"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Dilate Region": {
      "title": "WAS_Mask_Dilate_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, iterations",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "iterations": {
              "type": "number"
            }
          },
          "required": ["masks", "iterations"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Dominant Region": {
      "title": "WAS_Mask_Dominant_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, threshold",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["masks", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Erode Region": {
      "title": "WAS_Mask_Erode_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, iterations",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "iterations": {
              "type": "number"
            }
          },
          "required": ["masks", "iterations"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Fill Holes": {
      "title": "WAS_Mask_Fill_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks",
          "properties": {
            "masks": {
              "type": "MASK"
            }
          },
          "required": ["masks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Floor Region": {
      "title": "WAS_Mask_Floor_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks",
          "properties": {
            "masks": {
              "type": "MASK"
            }
          },
          "required": ["masks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Gaussian Region": {
      "title": "WAS_Mask_Gaussian_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, radius",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "radius": {
              "type": "number"
            }
          },
          "required": ["masks", "radius"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Invert": {
      "title": "WAS_Mask_Invert",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks",
          "properties": {
            "masks": {
              "type": "MASK"
            }
          },
          "required": ["masks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Minority Region": {
      "title": "WAS_Mask_Minority_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, threshold",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "threshold": {
              "type": "number"
            }
          },
          "required": ["masks", "threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Rect Area": {
      "title": "WAS_Mask_Rect_Area",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: x, y, width, height, blur_radius",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "blur_radius": {
              "type": "number"
            }
          },
          "required": ["x", "y", "width", "height", "blur_radius"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Rect Area (Advanced)": {
      "title": "WAS_Mask_Rect_Area_Advanced",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: x, y, width, height, image_width, image_height, blur_radius",
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "image_width": {
              "type": "number"
            },
            "image_height": {
              "type": "number"
            },
            "blur_radius": {
              "type": "number"
            }
          },
          "required": [
            "x",
            "y",
            "width",
            "height",
            "image_width",
            "image_height",
            "blur_radius"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Smooth Region": {
      "title": "WAS_Mask_Smooth_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, sigma",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "sigma": {
              "type": "number"
            }
          },
          "required": ["masks", "sigma"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Mask Threshold Region": {
      "title": "WAS_Mask_Threshold_Region",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks, black_threshold, white_threshold",
          "properties": {
            "masks": {
              "type": "MASK"
            },
            "black_threshold": {
              "type": "number"
            },
            "white_threshold": {
              "type": "number"
            }
          },
          "required": ["masks", "black_threshold", "white_threshold"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Masks Combine Regions": {
      "title": "WAS_Mask_Combine",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mask_a, mask_b",
          "properties": {
            "mask_a": {
              "type": "MASK"
            },
            "mask_b": {
              "type": "MASK"
            }
          },
          "required": ["mask_a", "mask_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Masks Combine Batch": {
      "title": "WAS_Mask_Combine_Batch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: masks",
          "properties": {
            "masks": {
              "type": "MASK"
            }
          },
          "required": ["masks"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MASK",
          "items": [
            {
              "type": "MASK"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "MiDaS Model Loader": {
      "title": "MiDaS_Model_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: midas_model",
          "properties": {
            "midas_model": {
              "type": "string"
            }
          },
          "required": ["midas_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MIDAS_MODEL",
          "items": [
            {
              "type": "MIDAS_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Loaders"
    },
    "MiDaS Depth Approximation": {
      "title": "MiDaS_Depth_Approx",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, use_cpu, midas_type, invert_depth",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "use_cpu": {
              "type": "string"
            },
            "midas_type": {
              "type": "string"
            },
            "invert_depth": {
              "type": "string"
            }
          },
          "required": ["image", "use_cpu", "midas_type", "invert_depth"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/AI"
    },
    "MiDaS Mask Image": {
      "title": "MiDaS_Background_Foreground_Removal",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, use_cpu, midas_model, remove, threshold, threshold_low, threshold_mid, threshold_high, smoothing, background_red, background_green, background_blue",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "use_cpu": {
              "type": "string"
            },
            "midas_model": {
              "type": "string"
            },
            "remove": {
              "type": "string"
            },
            "threshold": {
              "type": "string"
            },
            "threshold_low": {
              "type": "number"
            },
            "threshold_mid": {
              "type": "number"
            },
            "threshold_high": {
              "type": "number"
            },
            "smoothing": {
              "type": "number"
            },
            "background_red": {
              "type": "number"
            },
            "background_green": {
              "type": "number"
            },
            "background_blue": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "use_cpu",
            "midas_model",
            "remove",
            "threshold",
            "threshold_low",
            "threshold_mid",
            "threshold_high",
            "smoothing",
            "background_red",
            "background_green",
            "background_blue"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/AI"
    },
    "Model Input Switch": {
      "title": "WAS_Model_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_a, model_b, boolean",
          "properties": {
            "model_a": {
              "type": "MODEL"
            },
            "model_b": {
              "type": "MODEL"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["model_a", "model_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL",
          "items": [
            {
              "type": "MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Number Counter": {
      "title": "WAS_Number_Counter",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number_type, mode, start, stop, step",
          "properties": {
            "number_type": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "start": {
              "type": "number"
            },
            "stop": {
              "type": "number"
            },
            "step": {
              "type": "number"
            }
          },
          "required": ["number_type", "mode", "start", "stop", "step"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Number"
    },
    "Number Operation": {
      "title": "WAS_Number_Operation",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number_a, number_b, operation",
          "properties": {
            "number_a": {
              "type": "NUMBER"
            },
            "number_b": {
              "type": "NUMBER"
            },
            "operation": {
              "type": "string"
            }
          },
          "required": ["number_a", "number_b", "operation"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Number/Operations"
    },
    "Number to Float": {
      "title": "WAS_Number_To_Float",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number",
          "properties": {
            "number": {
              "type": "NUMBER"
            }
          },
          "required": ["number"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: FLOAT",
          "items": [
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Number/Operations"
    },
    "Number Input Switch": {
      "title": "WAS_Number_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number_a, number_b, boolean",
          "properties": {
            "number_a": {
              "type": "NUMBER"
            },
            "number_b": {
              "type": "NUMBER"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["number_a", "number_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Number Input Condition": {
      "title": "WAS_Number_Input_Condition",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number_a, number_b, return_boolean, comparison",
          "properties": {
            "number_a": {
              "type": "NUMBER"
            },
            "number_b": {
              "type": "NUMBER"
            },
            "return_boolean": {
              "type": "string"
            },
            "comparison": {
              "type": "string"
            }
          },
          "required": ["number_a", "number_b", "return_boolean", "comparison"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Number Multiple Of": {
      "title": "WAS_Number_Multiple_Of",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number, multiple",
          "properties": {
            "number": {
              "type": "NUMBER"
            },
            "multiple": {
              "type": "number"
            }
          },
          "required": ["number", "multiple"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Number/Functions"
    },
    "Number PI": {
      "title": "WAS_Number_PI",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Number"
    },
    "Number to Int": {
      "title": "WAS_Number_To_Int",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number",
          "properties": {
            "number": {
              "type": "NUMBER"
            }
          },
          "required": ["number"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: INT",
          "items": [
            {
              "type": "INT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Number/Operations"
    },
    "Number to Seed": {
      "title": "WAS_Number_To_Seed",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number",
          "properties": {
            "number": {
              "type": "NUMBER"
            }
          },
          "required": ["number"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SEED",
          "items": [
            {
              "type": "SEED"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Number/Operations"
    },
    "Number to String": {
      "title": "WAS_Number_To_String",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number",
          "properties": {
            "number": {
              "type": "NUMBER"
            }
          },
          "required": ["number"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Number/Operations"
    },
    "Number to Text": {
      "title": "WAS_Number_To_Text",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number",
          "properties": {
            "number": {
              "type": "NUMBER"
            }
          },
          "required": ["number"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Number/Operations"
    },
    "Boolean To Text": {
      "title": "WAS_Boolean_To_Text",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: boolean",
          "properties": {
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Prompt Styles Selector": {
      "title": "WAS_Prompt_Styles_Selector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: style",
          "properties": {
            "style": {
              "type": "string"
            }
          },
          "required": ["style"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Prompt Multiple Styles Selector": {
      "title": "WAS_Prompt_Multiple_Styles_Selector",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: style1, style2, style3, style4",
          "properties": {
            "style1": {
              "type": "string"
            },
            "style2": {
              "type": "string"
            },
            "style3": {
              "type": "string"
            },
            "style4": {
              "type": "string"
            }
          },
          "required": ["style1", "style2", "style3", "style4"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Random Number": {
      "title": "WAS_Random_Number",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: number_type, minimum, maximum, seed",
          "properties": {
            "number_type": {
              "type": "string"
            },
            "minimum": {
              "type": "number"
            },
            "maximum": {
              "type": "number"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": ["number_type", "minimum", "maximum", "seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Number"
    },
    "Save Text File": {
      "title": "WAS_Text_Save",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, path, filename_prefix, filename_delimiter, filename_number_padding",
          "properties": {
            "text": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "filename_prefix": {
              "type": "string"
            },
            "filename_delimiter": {
              "type": "string"
            },
            "filename_number_padding": {
              "type": "number"
            }
          },
          "required": [
            "text",
            "path",
            "filename_prefix",
            "filename_delimiter",
            "filename_number_padding"
          ]
        }
      },
      "$category": "WAS Suite/IO"
    },
    "Seed": {
      "title": "WAS_Seed",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: seed",
          "properties": {
            "seed": {
              "type": "number"
            }
          },
          "required": ["seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SEED, NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "SEED"
            },
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Number"
    },
    "Tensor Batch to Image": {
      "title": "WAS_Tensor_Batch_to_Image",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images_batch, batch_image_number",
          "properties": {
            "images_batch": {
              "type": "IMAGE"
            },
            "batch_image_number": {
              "type": "number"
            }
          },
          "required": ["images_batch", "batch_image_number"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Latent/Transform"
    },
    "BLIP Analyze Image": {
      "title": "WAS_BLIP_Analyze_Image",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images, mode, question, blip_model",
          "properties": {
            "images": {
              "type": "IMAGE"
            },
            "mode": {
              "type": "string"
            },
            "question": {
              "type": "string"
            },
            "blip_model": {
              "type": "BLIP_MODEL"
            }
          },
          "required": ["images", "mode", "question", "blip_model"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Text/AI"
    },
    "SAM Model Loader": {
      "title": "WAS_SAM_Model_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_size",
          "properties": {
            "model_size": {
              "type": "string"
            }
          },
          "required": ["model_size"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAM_MODEL",
          "items": [
            {
              "type": "SAM_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "SAM Parameters": {
      "title": "WAS_SAM_Parameters",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: points, labels",
          "properties": {
            "points": {
              "type": "string"
            },
            "labels": {
              "type": "string"
            }
          },
          "required": ["points", "labels"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAM_PARAMETERS",
          "items": [
            {
              "type": "SAM_PARAMETERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "SAM Parameters Combine": {
      "title": "WAS_SAM_Combine_Parameters",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sam_parameters_a, sam_parameters_b",
          "properties": {
            "sam_parameters_a": {
              "type": "SAM_PARAMETERS"
            },
            "sam_parameters_b": {
              "type": "SAM_PARAMETERS"
            }
          },
          "required": ["sam_parameters_a", "sam_parameters_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: SAM_PARAMETERS",
          "items": [
            {
              "type": "SAM_PARAMETERS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "SAM Image Mask": {
      "title": "WAS_SAM_Image_Mask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: sam_model, sam_parameters, image",
          "properties": {
            "sam_model": {
              "type": "SAM_MODEL"
            },
            "sam_parameters": {
              "type": "SAM_PARAMETERS"
            },
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["sam_model", "sam_parameters", "image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, MASK",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "MASK"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Masking"
    },
    "Samples Passthrough (Stat System)": {
      "title": "WAS_Samples_Passthrough_Stat_System",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: samples",
          "properties": {
            "samples": {
              "type": "LATENT"
            }
          },
          "required": ["samples"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LATENT",
          "items": [
            {
              "type": "LATENT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Debug"
    },
    "String to Text": {
      "title": "WAS_String_To_Text",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: string",
          "properties": {
            "string": {
              "type": "string"
            }
          },
          "required": ["string"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Operations"
    },
    "Image Bounds": {
      "title": "WAS_Image_Bounds",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image",
          "properties": {
            "image": {
              "type": "IMAGE"
            }
          },
          "required": ["image"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE_BOUNDS",
          "items": [
            {
              "type": "IMAGE_BOUNDS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Bound"
    },
    "Inset Image Bounds": {
      "title": "WAS_Inset_Image_Bounds",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_bounds, inset_left, inset_right, inset_top, inset_bottom",
          "properties": {
            "image_bounds": {
              "type": "IMAGE_BOUNDS"
            },
            "inset_left": {
              "type": "number"
            },
            "inset_right": {
              "type": "number"
            },
            "inset_top": {
              "type": "number"
            },
            "inset_bottom": {
              "type": "number"
            }
          },
          "required": [
            "image_bounds",
            "inset_left",
            "inset_right",
            "inset_top",
            "inset_bottom"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE_BOUNDS",
          "items": [
            {
              "type": "IMAGE_BOUNDS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Bound"
    },
    "Bounded Image Blend": {
      "title": "WAS_Bounded_Image_Blend",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target, target_bounds, source, blend_factor, feathering",
          "properties": {
            "target": {
              "type": "IMAGE"
            },
            "target_bounds": {
              "type": "IMAGE_BOUNDS"
            },
            "source": {
              "type": "IMAGE"
            },
            "blend_factor": {
              "type": "number"
            },
            "feathering": {
              "type": "number"
            }
          },
          "required": [
            "target",
            "target_bounds",
            "source",
            "blend_factor",
            "feathering"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Bound"
    },
    "Bounded Image Blend with Mask": {
      "title": "WAS_Bounded_Image_Blend_With_Mask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: target, target_mask, target_bounds, source, blend_factor, feathering",
          "properties": {
            "target": {
              "type": "IMAGE"
            },
            "target_mask": {
              "type": "MASK"
            },
            "target_bounds": {
              "type": "IMAGE_BOUNDS"
            },
            "source": {
              "type": "IMAGE"
            },
            "blend_factor": {
              "type": "number"
            },
            "feathering": {
              "type": "number"
            }
          },
          "required": [
            "target",
            "target_mask",
            "target_bounds",
            "source",
            "blend_factor",
            "feathering"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Bound"
    },
    "Bounded Image Crop": {
      "title": "WAS_Bounded_Image_Crop",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, image_bounds",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "image_bounds": {
              "type": "IMAGE_BOUNDS"
            }
          },
          "required": ["image", "image_bounds"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Image/Bound"
    },
    "Bounded Image Crop with Mask": {
      "title": "WAS_Bounded_Image_Crop_With_Mask",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, mask, padding_left, padding_right, padding_top, padding_bottom",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "mask": {
              "type": "MASK"
            },
            "padding_left": {
              "type": "number"
            },
            "padding_right": {
              "type": "number"
            },
            "padding_top": {
              "type": "number"
            },
            "padding_bottom": {
              "type": "number"
            }
          },
          "required": [
            "image",
            "mask",
            "padding_left",
            "padding_right",
            "padding_top",
            "padding_bottom"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, IMAGE_BOUNDS",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "IMAGE_BOUNDS"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Image/Bound"
    },
    "Image Bounds to Console": {
      "title": "WAS_Image_Bounds_to_Console",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image_bounds, label",
          "properties": {
            "image_bounds": {
              "type": "IMAGE_BOUNDS"
            },
            "label": {
              "type": "string"
            }
          },
          "required": ["image_bounds", "label"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE_BOUNDS",
          "items": [
            {
              "type": "IMAGE_BOUNDS"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Debug"
    },
    "Text Dictionary Update": {
      "title": "WAS_Dictionary_Update",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: dictionary_a, dictionary_b",
          "properties": {
            "dictionary_a": {
              "type": "DICT"
            },
            "dictionary_b": {
              "type": "DICT"
            }
          },
          "required": ["dictionary_a", "dictionary_b"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: DICT",
          "items": [
            {
              "type": "DICT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Dictionary Get": {
      "title": "WAS_Dictionary_Get",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: dictionary, key",
          "properties": {
            "dictionary": {
              "type": "DICT"
            },
            "key": {
              "type": "string"
            }
          },
          "required": ["dictionary", "key"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Dictionary Convert": {
      "title": "WAS_Dictionary_Convert",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: dictionary_text",
          "properties": {
            "dictionary_text": {
              "type": "string"
            }
          },
          "required": ["dictionary_text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: DICT",
          "items": [
            {
              "type": "DICT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Dictionary New": {
      "title": "WAS_Dictionary_New",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: key_1, value_1",
          "properties": {
            "key_1": {
              "type": "string"
            },
            "value_1": {
              "type": "string"
            }
          },
          "required": ["key_1", "value_1"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: DICT",
          "items": [
            {
              "type": "DICT"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Dictionary Keys": {
      "title": "WAS_Dictionary_Keys",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: dictionary",
          "properties": {
            "dictionary": {
              "type": "DICT"
            }
          },
          "required": ["dictionary"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LIST",
          "items": [
            {
              "type": "LIST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Dictionary To Text": {
      "title": "WAS_Dictionary_to_Text",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: dictionary",
          "properties": {
            "dictionary": {
              "type": "DICT"
            }
          },
          "required": ["dictionary"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Add Tokens": {
      "title": "WAS_Text_Add_Tokens",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: tokens, print_current_tokens",
          "properties": {
            "tokens": {
              "type": "string"
            },
            "print_current_tokens": {
              "type": "string"
            }
          },
          "required": ["tokens", "print_current_tokens"]
        }
      },
      "$category": "WAS Suite/Text/Tokens"
    },
    "Text Add Token by Input": {
      "title": "WAS_Text_Add_Token_Input",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: token_name, token_value, print_current_tokens",
          "properties": {
            "token_name": {
              "type": "string"
            },
            "token_value": {
              "type": "string"
            },
            "print_current_tokens": {
              "type": "string"
            }
          },
          "required": ["token_name", "token_value", "print_current_tokens"]
        }
      },
      "$category": "WAS Suite/Text/Tokens"
    },
    "Text Compare": {
      "title": "WAS_Text_Compare",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text_a, text_b, mode, tolerance",
          "properties": {
            "text_a": {
              "type": "string"
            },
            "text_b": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "tolerance": {
              "type": "number"
            }
          },
          "required": ["text_a", "text_b", "mode", "tolerance"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING, BOOLEAN, NUMBER, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "BOOLEAN"
            },
            {
              "type": "NUMBER"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "WAS Suite/Text/Search"
    },
    "Text Concatenate": {
      "title": "WAS_Text_Concatenate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: delimiter, clean_whitespace",
          "properties": {
            "delimiter": {
              "type": "string"
            },
            "clean_whitespace": {
              "type": "string"
            }
          },
          "required": ["delimiter", "clean_whitespace"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text File History Loader": {
      "title": "WAS_Text_File_History",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: file, dictionary_name",
          "properties": {
            "file": {
              "type": "string"
            },
            "dictionary_name": {
              "type": "string"
            }
          },
          "required": ["file", "dictionary_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, DICT",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "DICT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/History"
    },
    "Text Find and Replace by Dictionary": {
      "title": "WAS_Search_and_Replace_Dictionary",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, dictionary, replacement_key, seed",
          "properties": {
            "text": {
              "type": "string"
            },
            "dictionary": {
              "type": "DICT"
            },
            "replacement_key": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": ["text", "dictionary", "replacement_key", "seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Search"
    },
    "Text Find and Replace Input": {
      "title": "WAS_Search_and_Replace_Input",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, find, replace",
          "properties": {
            "text": {
              "type": "string"
            },
            "find": {
              "type": "string"
            },
            "replace": {
              "type": "string"
            }
          },
          "required": ["text", "find", "replace"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Text/Search"
    },
    "Text Find and Replace": {
      "title": "WAS_Search_and_Replace",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, find, replace",
          "properties": {
            "text": {
              "type": "string"
            },
            "find": {
              "type": "string"
            },
            "replace": {
              "type": "string"
            }
          },
          "required": ["text", "find", "replace"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Text/Search"
    },
    "Text Find": {
      "title": "WAS_Find",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, substring, pattern",
          "properties": {
            "text": {
              "type": "string"
            },
            "substring": {
              "type": "string"
            },
            "pattern": {
              "type": "string"
            }
          },
          "required": ["text", "substring", "pattern"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Search"
    },
    "Text Input Switch": {
      "title": "WAS_Text_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text_a, text_b, boolean",
          "properties": {
            "text_a": {
              "type": "string"
            },
            "text_b": {
              "type": "string"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["text_a", "text_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Text List": {
      "title": "WAS_Text_List",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LIST",
          "items": [
            {
              "type": "LIST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text List Concatenate": {
      "title": "WAS_Text_List_Concatenate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ",
          "properties": {},
          "required": []
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: LIST",
          "items": [
            {
              "type": "LIST"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text List to Text": {
      "title": "WAS_Text_List_to_Text",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: delimiter, text_list",
          "properties": {
            "delimiter": {
              "type": "string"
            },
            "text_list": {
              "type": "LIST"
            }
          },
          "required": ["delimiter", "text_list"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Load Line From File": {
      "title": "WAS_Text_Load_Line_From_File",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: file_path, dictionary_name, label, mode, index",
          "properties": {
            "file_path": {
              "type": "string"
            },
            "dictionary_name": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "index": {
              "type": "number"
            }
          },
          "required": ["file_path", "dictionary_name", "label", "mode", "index"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, DICT",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "DICT"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Multiline": {
      "title": "WAS_Text_Multiline",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Multiline (Code Compatible)": {
      "title": "WAS_Text_Multiline_Raw",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Parse A1111 Embeddings": {
      "title": "WAS_Text_Parse_Embeddings_By_Name",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Parse"
    },
    "Text Parse Noodle Soup Prompts": {
      "title": "WAS_Text_Parse_NSP",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: mode, noodle_key, seed, text",
          "properties": {
            "mode": {
              "type": "string"
            },
            "noodle_key": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["mode", "noodle_key", "seed", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Parse"
    },
    "Text Parse Tokens": {
      "title": "WAS_Text_Parse_Tokens",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Tokens"
    },
    "Text Random Line": {
      "title": "WAS_Text_Random_Line",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, seed",
          "properties": {
            "text": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": ["text", "seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Random Prompt": {
      "title": "WAS_Text_Random_Prompt",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: search_seed",
          "properties": {
            "search_seed": {
              "type": "string"
            }
          },
          "required": ["search_seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text String": {
      "title": "WAS_Text_String",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING, STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Text"
    },
    "Text Contains": {
      "title": "WAS_Text_Contains",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, sub_text",
          "properties": {
            "text": {
              "type": "string"
            },
            "sub_text": {
              "type": "string"
            }
          },
          "required": ["text", "sub_text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: BOOLEAN",
          "items": [
            {
              "type": "BOOLEAN"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Text Shuffle": {
      "title": "WAS_Text_Shuffle",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, separator, seed",
          "properties": {
            "text": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "seed": {
              "type": "number"
            }
          },
          "required": ["text", "separator", "seed"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Operations"
    },
    "Text Sort": {
      "title": "WAS_Text_Sort",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, separator",
          "properties": {
            "text": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            }
          },
          "required": ["text", "separator"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Operations"
    },
    "Text to Conditioning": {
      "title": "WAS_Text_to_Conditioning",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: clip, text",
          "properties": {
            "clip": {
              "type": "CLIP"
            },
            "text": {
              "type": "string"
            }
          },
          "required": ["clip", "text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: CONDITIONING",
          "items": [
            {
              "type": "CONDITIONING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Operations"
    },
    "Text to Console": {
      "title": "WAS_Text_to_Console",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, label",
          "properties": {
            "text": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          },
          "required": ["text", "label"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Debug"
    },
    "Text to Number": {
      "title": "WAS_Text_To_Number",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER",
          "items": [
            {
              "type": "NUMBER"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Operations"
    },
    "Text to String": {
      "title": "WAS_Text_To_String",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text",
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "required": ["text"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING",
          "items": [
            {
              "type": "STRING"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Text/Operations"
    },
    "Text String Truncate": {
      "title": "WAS_Text_String_Truncate",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: text, truncate_by, truncate_from, truncate_to",
          "properties": {
            "text": {
              "type": "string"
            },
            "truncate_by": {
              "type": "string"
            },
            "truncate_from": {
              "type": "string"
            },
            "truncate_to": {
              "type": "number"
            }
          },
          "required": ["text", "truncate_by", "truncate_from", "truncate_to"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, STRING, STRING, STRING",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 4,
          "minItems": 4
        }
      },
      "$category": "WAS Suite/Text/Operations"
    },
    "True Random.org Number Generator": {
      "title": "WAS_True_Random_Number",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: api_key, minimum, maximum, mode",
          "properties": {
            "api_key": {
              "type": "string"
            },
            "minimum": {
              "type": "number"
            },
            "maximum": {
              "type": "number"
            },
            "mode": {
              "type": "string"
            }
          },
          "required": ["api_key", "minimum", "maximum", "mode"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: NUMBER, FLOAT, INT",
          "items": [
            {
              "type": "NUMBER"
            },
            {
              "type": "FLOAT"
            },
            {
              "type": "INT"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Number"
    },
    "unCLIP Checkpoint Loader": {
      "title": "WAS_unCLIP_Checkpoint_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: ckpt_name",
          "properties": {
            "ckpt_name": {
              "type": "string"
            }
          },
          "required": ["ckpt_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: MODEL, CLIP, VAE, CLIP_VISION, STRING",
          "items": [
            {
              "type": "MODEL"
            },
            {
              "type": "CLIP"
            },
            {
              "type": "VAE"
            },
            {
              "type": "CLIP_VISION"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 5,
          "minItems": 5
        }
      },
      "$category": "WAS Suite/Loaders"
    },
    "Upscale Model Loader": {
      "title": "WAS_Upscale_Model_Loader",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: model_name",
          "properties": {
            "model_name": {
              "type": "string"
            }
          },
          "required": ["model_name"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: UPSCALE_MODEL, STRING",
          "items": [
            {
              "type": "UPSCALE_MODEL"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Loaders"
    },
    "Upscale Model Switch": {
      "title": "WAS_Upscale_Model_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: upscale_model_a, upscale_model_b, boolean",
          "properties": {
            "upscale_model_a": {
              "type": "UPSCALE_MODEL"
            },
            "upscale_model_b": {
              "type": "UPSCALE_MODEL"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["upscale_model_a", "upscale_model_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: UPSCALE_MODEL",
          "items": [
            {
              "type": "UPSCALE_MODEL"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Write to GIF": {
      "title": "WAS_Image_Morph_GIF_Writer",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, transition_frames, image_delay_ms, duration_ms, loops, max_size, output_path, filename",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "transition_frames": {
              "type": "number"
            },
            "image_delay_ms": {
              "type": "number"
            },
            "duration_ms": {
              "type": "number"
            },
            "loops": {
              "type": "number"
            },
            "max_size": {
              "type": "number"
            },
            "output_path": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "transition_frames",
            "image_delay_ms",
            "duration_ms",
            "loops",
            "max_size",
            "output_path",
            "filename"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, STRING, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Animation/Writer"
    },
    "Write to Video": {
      "title": "WAS_Video_Writer",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, transition_frames, image_delay_sec, fps, max_size, output_path, filename, codec",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "transition_frames": {
              "type": "number"
            },
            "image_delay_sec": {
              "type": "number"
            },
            "fps": {
              "type": "number"
            },
            "max_size": {
              "type": "number"
            },
            "output_path": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "codec": {
              "type": "string"
            }
          },
          "required": [
            "image",
            "transition_frames",
            "image_delay_sec",
            "fps",
            "max_size",
            "output_path",
            "filename",
            "codec"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE, STRING, STRING",
          "items": [
            {
              "type": "IMAGE"
            },
            {
              "type": "STRING"
            },
            {
              "type": "STRING"
            }
          ],
          "maxItems": 3,
          "minItems": 3
        }
      },
      "$category": "WAS Suite/Animation/Writer"
    },
    "VAE Input Switch": {
      "title": "WAS_VAE_Input_Switch",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: vae_a, vae_b, boolean",
          "properties": {
            "vae_a": {
              "type": "VAE"
            },
            "vae_b": {
              "type": "VAE"
            },
            "boolean": {
              "type": "BOOLEAN"
            }
          },
          "required": ["vae_a", "vae_b", "boolean"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: VAE",
          "items": [
            {
              "type": "VAE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "WAS Suite/Logic"
    },
    "Video Dump Frames": {
      "title": "WAS_Video_Frame_Dump",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: video_path, output_path, prefix, filenumber_digits, extension",
          "properties": {
            "video_path": {
              "type": "string"
            },
            "output_path": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "filenumber_digits": {
              "type": "number"
            },
            "extension": {
              "type": "string"
            }
          },
          "required": [
            "video_path",
            "output_path",
            "prefix",
            "filenumber_digits",
            "extension"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: STRING, NUMBER",
          "items": [
            {
              "type": "STRING"
            },
            {
              "type": "NUMBER"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "$category": "WAS Suite/Animation"
    },
    "CLIPSEG2": {
      "title": "CLIPSeg2",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: image, text, use_cuda",
          "properties": {
            "image": {
              "type": "IMAGE"
            },
            "text": {
              "type": "string"
            },
            "use_cuda": {
              "type": "BOOLEAN"
            }
          },
          "required": ["image", "text", "use_cuda"]
        },
        "outputs": {
          "type": "array",
          "description": "RETURN_TYPES: IMAGE",
          "items": [
            {
              "type": "IMAGE"
            }
          ],
          "maxItems": 1,
          "minItems": 1
        }
      },
      "$category": "image/transformation"
    },
    "SaveImageWebsocket": {
      "title": "SaveImageWebsocket",
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "INPUT_TYPES: images",
          "properties": {
            "images": {
              "type": "IMAGE"
            }
          },
          "required": ["images"]
        }
      },
      "$category": "api/image"
    }
  }
}
